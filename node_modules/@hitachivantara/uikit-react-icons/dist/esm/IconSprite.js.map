{"version":3,"file":"IconSprite.js","sources":["../../src/IconSprite.tsx"],"sourcesContent":["import { type HvColor } from \"@hitachivantara/uikit-styles\";\n\nimport { IconBase, IconBaseProps } from \"./IconBase\";\nimport { isSelector, isSort } from \"./utils\";\n\nconst getSecondaryColor = (iconName: string): HvColor => {\n  if (isSelector(iconName)) return \"atmo1\";\n  if (isSort(iconName)) return \"atmo4\";\n\n  return \"atmo2\";\n};\n\nexport interface HvIconSpriteProps\n  extends Omit<IconBaseProps, \"viewbox\" | \"inverted\" | \"semantic\"> {\n  /**\n   * The URL to the SVG icon sprite, served statically by the application.\n   * @example \"/public/icons.svg\"\n   * */\n  spriteUrl: string;\n  /** The icon `id` to use. Must be present within the sprite sheet. */\n  iconName: string;\n}\n\n/** The HvIconSprite component is used to display SVG icons from a sprite sheet. */\nexport const HvIconSprite = ({\n  spriteUrl,\n  iconName,\n  ...others\n}: HvIconSpriteProps) => {\n  // this color array is fragile... we know it currently covers all the existing icons\n  const baseColors: HvColor[] = [\"secondary\", getSecondaryColor(iconName)];\n\n  return (\n    <IconBase iconName={iconName} palette={baseColors} {...others}>\n      <use href={`${spriteUrl}#${iconName}`} />\n    </IconBase>\n  );\n};\n"],"names":[],"mappings":";;;AAKA,MAAM,oBAAoB,CAAC,aAA8B;AACnD,MAAA,WAAW,QAAQ,EAAU,QAAA;AAC7B,MAAA,OAAO,QAAQ,EAAU,QAAA;AAEtB,SAAA;AACT;AAcO,MAAM,eAAe,CAAC;AAAA,EAC3B;AAAA,EACA;AAAA,EACA,GAAG;AACL,MAAyB;AAEvB,QAAM,aAAwB,CAAC,aAAa,kBAAkB,QAAQ,CAAC;AAEvE,SACG,oBAAA,UAAA,EAAS,UAAoB,SAAS,YAAa,GAAG,QACrD,UAAC,oBAAA,OAAA,EAAI,MAAM,GAAG,SAAS,IAAI,QAAQ,GAAI,CAAA,GACzC;AAEJ;"}