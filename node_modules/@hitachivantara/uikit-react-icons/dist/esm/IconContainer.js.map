{"version":3,"file":"IconContainer.js","sources":["../../src/IconContainer.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { getColor, HvColorAny, HvSize } from \"@hitachivantara/uikit-styles\";\n\nimport type { IconSize } from \"./IconBase\";\nimport { getSizeStyles } from \"./utils\";\n\nfunction getRotation(rotation?: HvIconContainerProps[\"rotate\"]) {\n  switch (rotation) {\n    case \"up\":\n      return \"-90deg\";\n    case \"down\":\n      return \"90deg\";\n    case true:\n      return \"180deg\";\n    case false:\n    default:\n      return undefined;\n  }\n}\n\nconst StyledIconContainer = styled(\"div\")({\n  display: \"flex\",\n  flex: \"0 0 auto\", // ensure icon doesn't flex grow/shrink\n  fontSize: 16,\n  // box has a minimum size of 32px (`xs` & `sm`)\n  width: \"var(--size, 32px)\",\n  height: \"var(--size, 32px)\",\n  transition: \"rotate 0.2s ease\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n});\n\nexport interface HvIconContainerProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * A color to override the default icon colors.\n   * Accepts any valid CSS color or color from the UI Kit palette.\n   * @example \"brand\"\n   */\n  color?: HvColorAny;\n  /**\n   * The size of the icon container. Takes in a `number` in pixels or any `HvSize` or `IconSize`.\n   *\n   * This will also affect the size of the icon by changing the `font-size`.\n   *\n   * @example\n   * size={16} // 32px container 16px svg\n   * size=\"S\" // 32px container 16px svg\n   * size=\"sm\" // 32px container 16px svg\n   * size=\"md\" // 48px container 32px svg\n   *\n   * @default \"S\"\n   */\n  size?: HvSize | IconSize | number;\n  /** Whether to rotate the icon @private WIP */\n  rotate?: boolean | \"up\" | \"down\";\n}\n\n/**\n * A component used to contain icons in the established margins.\n *\n * This allows using external icons UI Kit components that expect padding around the icon.\n * It also makes the use of theme colors easier through the `color` prop.\n *\n * @example\n * <HvIconContainer color=\"warning\" size=\"lg\">\n *  <svg />\n * </HvIconContainer>\n */\nexport const HvIconContainer = forwardRef<\n  // no-indent\n  HTMLDivElement,\n  HvIconContainerProps\n>(function HvIconContainer(props, ref) {\n  const { size, style, color, rotate, children, ...others } = props;\n  return (\n    <StyledIconContainer\n      ref={ref}\n      style={{\n        ...getSizeStyles(\"\", size),\n        color: getColor(color),\n        rotate: getRotation(rotate),\n        ...style,\n      }}\n      {...others}\n    >\n      {children}\n    </StyledIconContainer>\n  );\n});\n"],"names":["HvIconContainer"],"mappings":";;;;;AAOA,SAAS,YAAY,UAA2C;AAC9D,UAAQ,UAAU;AAAA,IAChB,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AAAA,IACL;AACS,aAAA;AAAA,EAAA;AAEb;AAEA,MAAM,sBAAsB,OAAO,KAAK,EAAE;AAAA,EACxC,SAAS;AAAA,EACT,MAAM;AAAA;AAAA,EACN,UAAU;AAAA;AAAA,EAEV,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,YAAY;AACd,CAAC;AAuCM,MAAM,kBAAkB,WAI7B,SAASA,iBAAgB,OAAO,KAAK;AAC/B,QAAA,EAAE,MAAM,OAAO,OAAO,QAAQ,UAAU,GAAG,WAAW;AAE1D,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC;AAAA,MACA,OAAO;AAAA,QACL,GAAG,cAAc,IAAI,IAAI;AAAA,QACzB,OAAO,SAAS,KAAK;AAAA,QACrB,QAAQ,YAAY,MAAM;AAAA,QAC1B,GAAG;AAAA,MACL;AAAA,MACC,GAAG;AAAA,MAEH;AAAA,IAAA;AAAA,EACH;AAEJ,CAAC;"}