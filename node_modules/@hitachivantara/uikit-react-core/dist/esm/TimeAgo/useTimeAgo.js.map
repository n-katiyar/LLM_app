{"version":3,"file":"useTimeAgo.js","sources":["../../../src/TimeAgo/useTimeAgo.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport { formatTimeAgo } from \"./formatUtils\";\nimport type { HvTimeAgoProps } from \"./TimeAgo\";\nimport { useTimeout } from \"./useTimeout\";\n\n/**\n * Calls `formatTimeAgo` with timestamp conversion\n */\nconst fmt = (timestamp: any, locale: any, showSeconds?: boolean) => {\n  const timestampMs =\n    String(timestamp).length > 11 ? timestamp : timestamp * 1000;\n  return formatTimeAgo(timestampMs, locale, showSeconds);\n};\n\nexport default function useTimeAgo(\n  timestamp = Date.now(),\n  options?: Pick<HvTimeAgoProps, \"locale\" | \"disableRefresh\" | \"showSeconds\">,\n) {\n  const { locale, disableRefresh = false, showSeconds = false } = options || {};\n  const [timeAgo, setTimeAgo] = useState(() =>\n    fmt(timestamp, locale, showSeconds),\n  );\n  const refreshTime = disableRefresh ? 0 : 10_000;\n\n  useEffect(() => {\n    const newTimeAgo = fmt(timestamp, locale, showSeconds);\n    setTimeAgo(newTimeAgo);\n  }, [timestamp, locale, showSeconds]);\n\n  useTimeout(() => {\n    const newTimeAgo = fmt(timestamp, locale, showSeconds);\n    setTimeAgo(newTimeAgo);\n  }, refreshTime);\n\n  return timeAgo;\n}\n"],"names":[],"mappings":";;;AASA,MAAM,MAAM,CAAC,WAAgB,QAAa,gBAA0B;AAClE,QAAM,cACJ,OAAO,SAAS,EAAE,SAAS,KAAK,YAAY,YAAY;AACnD,SAAA,cAAc,aAAa,QAAQ,WAAW;AACvD;AAEA,SAAwB,WACtB,YAAY,KAAK,IAAA,GACjB,SACA;AACM,QAAA,EAAE,QAAQ,iBAAiB,OAAO,cAAc,MAAM,IAAI,WAAW,CAAC;AACtE,QAAA,CAAC,SAAS,UAAU,IAAI;AAAA,IAAS,MACrC,IAAI,WAAW,QAAQ,WAAW;AAAA,EACpC;AACM,QAAA,cAAc,iBAAiB,IAAI;AAEzC,YAAU,MAAM;AACd,UAAM,aAAa,IAAI,WAAW,QAAQ,WAAW;AACrD,eAAW,UAAU;AAAA,EACpB,GAAA,CAAC,WAAW,QAAQ,WAAW,CAAC;AAEnC,aAAW,MAAM;AACf,UAAM,aAAa,IAAI,WAAW,QAAQ,WAAW;AACrD,eAAW,UAAU;AAAA,KACpB,WAAW;AAEP,SAAA;AACT;"}