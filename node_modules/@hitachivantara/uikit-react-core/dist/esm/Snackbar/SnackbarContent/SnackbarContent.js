import { jsx, jsxs } from "react/jsx-runtime";
import { forwardRef, isValidElement } from "react";
import SnackbarContent from "@mui/material/SnackbarContent";
import { useDefaultProps, useTheme } from "@hitachivantara/uikit-react-utils";
import { iconVariant } from "../../utils/iconVariant.js";
import { setId } from "../../utils/setId.js";
import { useClasses } from "./SnackbarContent.styles.js";
import { staticClasses } from "./SnackbarContent.styles.js";
import { HvActionsGeneric } from "../../ActionsGeneric/ActionsGeneric.js";
const HvSnackbarContent = forwardRef(function HvSnackbarContent2(props, ref) {
  const {
    className,
    id,
    classes: classesProp,
    label,
    variant = "default",
    showIcon,
    customIcon,
    action,
    actionCallback,
    // TODO - remove in v6
    onAction,
    ...others
  } = useDefaultProps("HvSnackbarContent", props);
  const icon = customIcon || showIcon && iconVariant(variant, "base_dark");
  const innerAction = isValidElement(action) ? action : [action];
  const { classes, cx } = useClasses(classesProp);
  const { activeTheme } = useTheme();
  return /* @__PURE__ */ jsx(
    SnackbarContent,
    {
      ref,
      id,
      classes: {
        root: classes.root,
        message: classes.message
      },
      className: cx(classes?.[variant], className),
      message: /* @__PURE__ */ jsxs("div", { id: setId(id, "message"), className: classes.messageSpan, children: [
        icon && /* @__PURE__ */ jsx("div", { className: classes.iconVariant, children: icon }),
        /* @__PURE__ */ jsx("div", { className: classes.messageText, children: label }),
        action && /* @__PURE__ */ jsx("div", { id: setId(id, "action"), className: classes.action, children: /* @__PURE__ */ jsx(
          HvActionsGeneric,
          {
            id,
            variant: activeTheme?.snackbar.actionButtonVariant,
            actions: innerAction,
            actionsCallback: actionCallback,
            onAction
          }
        ) })
      ] }),
      ...others
    }
  );
});
export {
  HvSnackbarContent,
  staticClasses as snackbarContentClasses
};
