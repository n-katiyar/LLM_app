{"version":3,"file":"useVisibleDate.js","sources":["../../../src/DatePicker/useVisibleDate.tsx"],"sourcesContent":["import { Reducer, useReducer } from \"react\";\n\nimport { VisibilitySelectorActions } from \"../Calendar\";\nimport { validateDate } from \"./utils\";\n\nfunction stateToLeftRight({\n  visibleYear,\n  visibleMonth,\n  rightVisibleYear,\n  rightVisibleMonth,\n}: any) {\n  return {\n    left: { year: visibleYear, month: visibleMonth },\n    right: { year: rightVisibleYear, month: rightVisibleMonth },\n  };\n}\n\nfunction leftRightToState(left: any, right: any) {\n  return {\n    visibleYear: left.year,\n    visibleMonth: left.month,\n    rightVisibleYear: right.year,\n    rightVisibleMonth: right.month,\n  };\n}\n\nfunction subtractYear({ year, month }: any) {\n  return { year: year - 1, month };\n}\n\nfunction addYear({ year, month }: any) {\n  return { year: year + 1, month };\n}\n\nfunction subtractMonth({ year, month }: any) {\n  let y = year;\n  let m = month;\n\n  m -= 1;\n  if (m === 0) {\n    y -= 1;\n    m = 12;\n  }\n\n  return { year: y, month: m };\n}\n\nfunction addMonth({ year, month }: any) {\n  let y = year;\n  let m = month;\n\n  m += 1;\n  if (m === 13) {\n    y += 1;\n    m = 1;\n  }\n\n  return { year: y, month: m };\n}\n\nfunction ensureNoOverlap(left: any, right: any, keepRight = false) {\n  let l = left;\n  let r = right;\n  if (\n    left.year > right.year ||\n    (left.year === right.year && left.month >= right.month)\n  ) {\n    if (keepRight) {\n      l = subtractMonth(right);\n    } else {\n      r = addMonth(left);\n    }\n  }\n\n  return leftRightToState(l, r);\n}\n\nexport function isSameYearMonth(d1: any, d2: any) {\n  return d1.year === d2.year && d1.month === d2.month;\n}\n\ntype State = {\n  visibleYear: any;\n  visibleMonth: any;\n  rightVisibleYear: any;\n  rightVisibleMonth: any;\n};\ntype Action = { type: VisibilitySelectorActions } & Record<string, any>;\n\nconst visibleDateReducer: Reducer<State, Action> = (state, action) => {\n  let { left, right } = stateToLeftRight(state);\n\n  switch (action.type) {\n    case \"previous_year\":\n      if (action.target === \"right\") {\n        right = subtractYear(right);\n        return ensureNoOverlap(left, right, true);\n      }\n\n      left = subtractYear(left);\n      return ensureNoOverlap(left, right, false);\n\n    case \"next_year\":\n      if (action.target === \"right\") {\n        right = addYear(right);\n        return ensureNoOverlap(left, right, true);\n      }\n\n      left = addYear(left);\n      return ensureNoOverlap(left, right, false);\n\n    case \"previous_month\":\n      if (action.target === \"right\") {\n        right = subtractMonth(right);\n        return ensureNoOverlap(left, right, true);\n      }\n\n      left = subtractMonth(left);\n      return ensureNoOverlap(left, right, false);\n\n    case \"next_month\":\n      if (action.target === \"right\") {\n        right = addMonth(right);\n        return ensureNoOverlap(left, right, true);\n      }\n\n      left = addMonth(left);\n      return ensureNoOverlap(left, right, false);\n\n    case \"month\":\n      if (action.month != null) {\n        if (action.target === \"right\") {\n          if (right.month !== action.month) {\n            right = { year: right.year, month: action.month };\n            return ensureNoOverlap(left, right, true);\n          }\n        } else if (left.month !== action.month) {\n          left = { year: left.year, month: action.month };\n          return ensureNoOverlap(left, right, false);\n        }\n      }\n      break;\n\n    case \"month_year\":\n      if (action.month != null && action.year != null) {\n        if (action.target === \"right\") {\n          if (\n            !isSameYearMonth(left, action) &&\n            !isSameYearMonth(right, action)\n          ) {\n            right = { year: action.year, month: action.month };\n            return ensureNoOverlap(left, right, true);\n          }\n        } else if (\n          !isSameYearMonth(left, action) &&\n          (action.target === \"left\" || !isSameYearMonth(right, action))\n        ) {\n          left = { year: action.year, month: action.month };\n          return ensureNoOverlap(left, right, false);\n        }\n      }\n\n      break;\n\n    default:\n  }\n\n  return state;\n};\n\nfunction stateFromRange(startDate: any, endDate: any) {\n  const initialStartDate = validateDate(startDate);\n  const initialEndDate =\n    endDate != null ? validateDate(endDate) : initialStartDate;\n\n  return ensureNoOverlap(\n    {\n      year: initialStartDate.getFullYear(),\n      month: initialStartDate.getMonth() + 1,\n    },\n    {\n      year: initialEndDate.getFullYear(),\n      month: initialEndDate.getMonth() + 1,\n    },\n  );\n}\n\nexport default function useVisibleDate(startDate?: Date, endDate?: Date) {\n  return useReducer(visibleDateReducer, { startDate, endDate }, (initData) =>\n    stateFromRange(initData.startDate, initData.endDate),\n  );\n}\n"],"names":[],"mappings":";;AAKA,SAAS,iBAAiB;AAAA,EACxB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAQ;AACC,SAAA;AAAA,IACL,MAAM,EAAE,MAAM,aAAa,OAAO,aAAa;AAAA,IAC/C,OAAO,EAAE,MAAM,kBAAkB,OAAO,kBAAkB;AAAA,EAC5D;AACF;AAEA,SAAS,iBAAiB,MAAW,OAAY;AACxC,SAAA;AAAA,IACL,aAAa,KAAK;AAAA,IAClB,cAAc,KAAK;AAAA,IACnB,kBAAkB,MAAM;AAAA,IACxB,mBAAmB,MAAM;AAAA,EAC3B;AACF;AAEA,SAAS,aAAa,EAAE,MAAM,SAAc;AAC1C,SAAO,EAAE,MAAM,OAAO,GAAG,MAAM;AACjC;AAEA,SAAS,QAAQ,EAAE,MAAM,SAAc;AACrC,SAAO,EAAE,MAAM,OAAO,GAAG,MAAM;AACjC;AAEA,SAAS,cAAc,EAAE,MAAM,SAAc;AAC3C,MAAI,IAAI;AACR,MAAI,IAAI;AAEH,OAAA;AACL,MAAI,MAAM,GAAG;AACN,SAAA;AACD,QAAA;AAAA,EAAA;AAGN,SAAO,EAAE,MAAM,GAAG,OAAO,EAAE;AAC7B;AAEA,SAAS,SAAS,EAAE,MAAM,SAAc;AACtC,MAAI,IAAI;AACR,MAAI,IAAI;AAEH,OAAA;AACL,MAAI,MAAM,IAAI;AACP,SAAA;AACD,QAAA;AAAA,EAAA;AAGN,SAAO,EAAE,MAAM,GAAG,OAAO,EAAE;AAC7B;AAEA,SAAS,gBAAgB,MAAW,OAAY,YAAY,OAAO;AACjE,MAAI,IAAI;AACR,MAAI,IAAI;AAEN,MAAA,KAAK,OAAO,MAAM,QACjB,KAAK,SAAS,MAAM,QAAQ,KAAK,SAAS,MAAM,OACjD;AACA,QAAI,WAAW;AACb,UAAI,cAAc,KAAK;AAAA,IAAA,OAClB;AACL,UAAI,SAAS,IAAI;AAAA,IAAA;AAAA,EACnB;AAGK,SAAA,iBAAiB,GAAG,CAAC;AAC9B;AAEgB,SAAA,gBAAgB,IAAS,IAAS;AAChD,SAAO,GAAG,SAAS,GAAG,QAAQ,GAAG,UAAU,GAAG;AAChD;AAUA,MAAM,qBAA6C,CAAC,OAAO,WAAW;AACpE,MAAI,EAAE,MAAM,UAAU,iBAAiB,KAAK;AAE5C,UAAQ,OAAO,MAAM;AAAA,IACnB,KAAK;AACC,UAAA,OAAO,WAAW,SAAS;AAC7B,gBAAQ,aAAa,KAAK;AACnB,eAAA,gBAAgB,MAAM,OAAO,IAAI;AAAA,MAAA;AAG1C,aAAO,aAAa,IAAI;AACjB,aAAA,gBAAgB,MAAM,OAAO,KAAK;AAAA,IAE3C,KAAK;AACC,UAAA,OAAO,WAAW,SAAS;AAC7B,gBAAQ,QAAQ,KAAK;AACd,eAAA,gBAAgB,MAAM,OAAO,IAAI;AAAA,MAAA;AAG1C,aAAO,QAAQ,IAAI;AACZ,aAAA,gBAAgB,MAAM,OAAO,KAAK;AAAA,IAE3C,KAAK;AACC,UAAA,OAAO,WAAW,SAAS;AAC7B,gBAAQ,cAAc,KAAK;AACpB,eAAA,gBAAgB,MAAM,OAAO,IAAI;AAAA,MAAA;AAG1C,aAAO,cAAc,IAAI;AAClB,aAAA,gBAAgB,MAAM,OAAO,KAAK;AAAA,IAE3C,KAAK;AACC,UAAA,OAAO,WAAW,SAAS;AAC7B,gBAAQ,SAAS,KAAK;AACf,eAAA,gBAAgB,MAAM,OAAO,IAAI;AAAA,MAAA;AAG1C,aAAO,SAAS,IAAI;AACb,aAAA,gBAAgB,MAAM,OAAO,KAAK;AAAA,IAE3C,KAAK;AACC,UAAA,OAAO,SAAS,MAAM;AACpB,YAAA,OAAO,WAAW,SAAS;AACzB,cAAA,MAAM,UAAU,OAAO,OAAO;AAChC,oBAAQ,EAAE,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM;AACzC,mBAAA,gBAAgB,MAAM,OAAO,IAAI;AAAA,UAAA;AAAA,QAEjC,WAAA,KAAK,UAAU,OAAO,OAAO;AACtC,iBAAO,EAAE,MAAM,KAAK,MAAM,OAAO,OAAO,MAAM;AACvC,iBAAA,gBAAgB,MAAM,OAAO,KAAK;AAAA,QAAA;AAAA,MAC3C;AAEF;AAAA,IAEF,KAAK;AACH,UAAI,OAAO,SAAS,QAAQ,OAAO,QAAQ,MAAM;AAC3C,YAAA,OAAO,WAAW,SAAS;AAE3B,cAAA,CAAC,gBAAgB,MAAM,MAAM,KAC7B,CAAC,gBAAgB,OAAO,MAAM,GAC9B;AACA,oBAAQ,EAAE,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM;AAC1C,mBAAA,gBAAgB,MAAM,OAAO,IAAI;AAAA,UAAA;AAAA,QAG1C,WAAA,CAAC,gBAAgB,MAAM,MAAM,MAC5B,OAAO,WAAW,UAAU,CAAC,gBAAgB,OAAO,MAAM,IAC3D;AACA,iBAAO,EAAE,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM;AACzC,iBAAA,gBAAgB,MAAM,OAAO,KAAK;AAAA,QAAA;AAAA,MAC3C;AAGF;AAAA,EAEF;AAGK,SAAA;AACT;AAEA,SAAS,eAAe,WAAgB,SAAc;AAC9C,QAAA,mBAAmB,aAAa,SAAS;AAC/C,QAAM,iBACJ,WAAW,OAAO,aAAa,OAAO,IAAI;AAErC,SAAA;AAAA,IACL;AAAA,MACE,MAAM,iBAAiB,YAAY;AAAA,MACnC,OAAO,iBAAiB,aAAa;AAAA,IACvC;AAAA,IACA;AAAA,MACE,MAAM,eAAe,YAAY;AAAA,MACjC,OAAO,eAAe,aAAa;AAAA,IAAA;AAAA,EAEvC;AACF;AAEwB,SAAA,eAAe,WAAkB,SAAgB;AAChE,SAAA;AAAA,IAAW;AAAA,IAAoB,EAAE,WAAW,QAAQ;AAAA,IAAG,CAAC,aAC7D,eAAe,SAAS,WAAW,SAAS,OAAO;AAAA,EACrD;AACF;"}