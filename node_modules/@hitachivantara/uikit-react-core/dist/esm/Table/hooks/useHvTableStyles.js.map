{"version":3,"file":"useHvTableStyles.js","sources":["../../../../src/Table/hooks/useHvTableStyles.ts"],"sourcesContent":["import { Hooks } from \"react-table\";\nimport { clsx } from \"clsx\";\n\n// #region ##### TYPES #####\n\nexport type UseHvTableStylesTableOptions = {\n  style?: React.CSSProperties;\n  className?: string;\n  classes?: Record<string, string>;\n  component?: any;\n};\n\n// column definition:\nexport interface UseHvTableStylesColumnOptions {\n  variant?: \"checkbox\" | \"expand\" | \"actions\" | \"default\" | \"none\";\n  align?: \"center\" | \"inherit\" | \"justify\" | \"left\" | \"right\";\n\n  style?: React.CSSProperties;\n  className?: string;\n  classes?: Record<string, string>;\n\n  headerStyle?: React.CSSProperties;\n  headerClassName?: string;\n  headerClasses?: Record<string, string>;\n\n  cellStyle?: React.CSSProperties;\n  cellClassName?: string;\n  cellClasses?: Record<string, string>;\n}\n\n// PROPS:\nexport interface UseHvTableStylesTableRowProps {\n  hover?: boolean;\n}\n\nexport interface UseHvTableStylesTableCellProps {\n  style?: React.CSSProperties;\n  className?: string;\n  classes?: Record<string, string>;\n  variant?: \"checkbox\" | \"expand\" | \"actions\" | \"default\" | \"none\";\n  align?: \"center\" | \"inherit\" | \"justify\" | \"left\" | \"right\";\n}\n\nexport type UseTableStylesProps = (<D extends object = Record<string, unknown>>(\n  hooks: Hooks<D>,\n) => void) & { pluginName: string };\n\n// #endregion ##### TYPES #####\n\n// props target: <table>\nconst getTablePropsHook = (props: any, { instance }: any) => {\n  const nextProps: UseHvTableStylesTableOptions = {\n    component: instance.tableComponent,\n  };\n\n  if (instance.style != null) {\n    nextProps.style = instance.style;\n  }\n\n  if (instance.className != null) {\n    nextProps.className = instance.className;\n  }\n\n  if (instance.classes != null) {\n    nextProps.classes = instance.classes;\n  }\n\n  return [props, nextProps];\n};\n\n// props target: <table><thead><tr><th>\nconst getHeaderFooterPropsHook = (props: any, { column }: any) => {\n  const nextProps: UseHvTableStylesColumnOptions = {\n    variant: column.variant,\n    align: column.align,\n  };\n\n  if (column.style != null || column.headerStyle != null) {\n    nextProps.style = {\n      ...props.style,\n      ...column.style,\n      ...column.headerStyle,\n    };\n  }\n\n  if (column.className != null || column.headerClassName != null) {\n    nextProps.className = clsx(\n      props.className,\n      column.className,\n      column.headerClassName,\n    );\n  }\n\n  if (column.classes != null || column.headerClasses) {\n    nextProps.classes = {\n      ...props.classes,\n      ...column.classes,\n      ...column.headerClasses,\n    };\n  }\n\n  return [props, nextProps];\n};\n\n// props target: <table><tbody><tr>\nconst getRowPropsHook = (props: any) => {\n  const nextProps: UseHvTableStylesTableRowProps = {\n    hover: true,\n  };\n\n  return [props, nextProps];\n};\n\n// props target: <table><tbody><tr><td>\nconst getCellPropsHook = (props: any, { cell }: any) => {\n  const nextProps: UseHvTableStylesTableCellProps = {\n    variant: cell.column.variant,\n    align: cell.column.align,\n  };\n\n  if (cell.column.style != null || cell.column.cellStyle != null) {\n    nextProps.style = {\n      ...props.style,\n      ...cell.column.style,\n      ...cell.column.cellStyle,\n    };\n  }\n\n  if (cell.column.className != null || cell.column.cellClassName != null) {\n    nextProps.className = clsx(\n      props.className,\n      cell.column.className,\n      cell.column.cellClassName,\n    );\n  }\n\n  if (cell.column.classes != null || cell.column.cellClasses) {\n    nextProps.classes = {\n      ...props.classes,\n      ...cell.column.classes,\n      ...cell.column.cellClasses,\n    };\n  }\n\n  return [props, nextProps];\n};\n\nexport const useHvTableStyles: UseTableStylesProps = (hooks) => {\n  // props target: <table>\n  hooks.getTableProps.push(getTablePropsHook);\n  // props target: <table><thead><tr><th>\n  hooks.getHeaderProps.push(getHeaderFooterPropsHook);\n  // props target: <table><tfoot><tr><td>\n  hooks.getFooterProps.push(getHeaderFooterPropsHook);\n  // props target: <table><tbody><tr>\n  hooks.getRowProps.push(getRowPropsHook);\n  // props target: <table><tbody><tr><td>\n  hooks.getCellProps.push(getCellPropsHook);\n};\n\nuseHvTableStyles.pluginName = \"useHvTableStyles\";\n"],"names":[],"mappings":";AAkDA,MAAM,oBAAoB,CAAC,OAAY,EAAE,eAAoB;AAC3D,QAAM,YAA0C;AAAA,IAC9C,WAAW,SAAS;AAAA,EACtB;AAEI,MAAA,SAAS,SAAS,MAAM;AAC1B,cAAU,QAAQ,SAAS;AAAA,EAAA;AAGzB,MAAA,SAAS,aAAa,MAAM;AAC9B,cAAU,YAAY,SAAS;AAAA,EAAA;AAG7B,MAAA,SAAS,WAAW,MAAM;AAC5B,cAAU,UAAU,SAAS;AAAA,EAAA;AAGxB,SAAA,CAAC,OAAO,SAAS;AAC1B;AAGA,MAAM,2BAA2B,CAAC,OAAY,EAAE,aAAkB;AAChE,QAAM,YAA2C;AAAA,IAC/C,SAAS,OAAO;AAAA,IAChB,OAAO,OAAO;AAAA,EAChB;AAEA,MAAI,OAAO,SAAS,QAAQ,OAAO,eAAe,MAAM;AACtD,cAAU,QAAQ;AAAA,MAChB,GAAG,MAAM;AAAA,MACT,GAAG,OAAO;AAAA,MACV,GAAG,OAAO;AAAA,IACZ;AAAA,EAAA;AAGF,MAAI,OAAO,aAAa,QAAQ,OAAO,mBAAmB,MAAM;AAC9D,cAAU,YAAY;AAAA,MACpB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,OAAO;AAAA,IACT;AAAA,EAAA;AAGF,MAAI,OAAO,WAAW,QAAQ,OAAO,eAAe;AAClD,cAAU,UAAU;AAAA,MAClB,GAAG,MAAM;AAAA,MACT,GAAG,OAAO;AAAA,MACV,GAAG,OAAO;AAAA,IACZ;AAAA,EAAA;AAGK,SAAA,CAAC,OAAO,SAAS;AAC1B;AAGA,MAAM,kBAAkB,CAAC,UAAe;AACtC,QAAM,YAA2C;AAAA,IAC/C,OAAO;AAAA,EACT;AAEO,SAAA,CAAC,OAAO,SAAS;AAC1B;AAGA,MAAM,mBAAmB,CAAC,OAAY,EAAE,WAAgB;AACtD,QAAM,YAA4C;AAAA,IAChD,SAAS,KAAK,OAAO;AAAA,IACrB,OAAO,KAAK,OAAO;AAAA,EACrB;AAEA,MAAI,KAAK,OAAO,SAAS,QAAQ,KAAK,OAAO,aAAa,MAAM;AAC9D,cAAU,QAAQ;AAAA,MAChB,GAAG,MAAM;AAAA,MACT,GAAG,KAAK,OAAO;AAAA,MACf,GAAG,KAAK,OAAO;AAAA,IACjB;AAAA,EAAA;AAGF,MAAI,KAAK,OAAO,aAAa,QAAQ,KAAK,OAAO,iBAAiB,MAAM;AACtE,cAAU,YAAY;AAAA,MACpB,MAAM;AAAA,MACN,KAAK,OAAO;AAAA,MACZ,KAAK,OAAO;AAAA,IACd;AAAA,EAAA;AAGF,MAAI,KAAK,OAAO,WAAW,QAAQ,KAAK,OAAO,aAAa;AAC1D,cAAU,UAAU;AAAA,MAClB,GAAG,MAAM;AAAA,MACT,GAAG,KAAK,OAAO;AAAA,MACf,GAAG,KAAK,OAAO;AAAA,IACjB;AAAA,EAAA;AAGK,SAAA,CAAC,OAAO,SAAS;AAC1B;AAEa,MAAA,mBAAwC,CAAC,UAAU;AAExD,QAAA,cAAc,KAAK,iBAAiB;AAEpC,QAAA,eAAe,KAAK,wBAAwB;AAE5C,QAAA,eAAe,KAAK,wBAAwB;AAE5C,QAAA,YAAY,KAAK,eAAe;AAEhC,QAAA,aAAa,KAAK,gBAAgB;AAC1C;AAEA,iBAAiB,aAAa;"}