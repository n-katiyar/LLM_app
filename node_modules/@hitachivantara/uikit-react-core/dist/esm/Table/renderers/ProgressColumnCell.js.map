{"version":3,"file":"ProgressColumnCell.js","sources":["../../../../src/Table/renderers/ProgressColumnCell.tsx"],"sourcesContent":["import MuiLinearProgress from \"@mui/material/LinearProgress\";\nimport { createClasses } from \"@hitachivantara/uikit-react-utils\";\nimport { theme } from \"@hitachivantara/uikit-styles\";\n\nconst { useClasses } = createClasses(\"HvProgressColumnCell\", {\n  root: { display: \"flex\", width: \"100%\" },\n  linearProgressContainer: { width: \"100%\", margin: \"auto\" },\n  linearProgress: {\n    height: 8,\n  },\n  linearProgressRoot: { backgroundColor: theme.colors.atmo4 },\n  linearProgressColorPrimary: {\n    backgroundColor: theme.colors.atmo4,\n  },\n  linearProgressBarColorPrimary: {\n    backgroundColor: theme.colors.positive,\n  },\n  linearProgressBarColorSecondary: {\n    backgroundColor: theme.colors.secondary,\n  },\n});\n\nexport interface HvProgressColumnCellProp {\n  /** Current value of the bar. */\n  partial: number;\n  /** Maximum value of the bar. */\n  total: number;\n  /** The color of the bar. */\n  color?: \"primary\" | \"secondary\";\n  \"aria-labelledby\"?: string;\n}\n\nexport const normalizeProgressBar = (value: number, max: number) => {\n  return max > 0 ? Math.floor((value * 100) / max) : 0;\n};\n\nexport const HvProgressColumnCell = ({\n  partial,\n  total,\n  color = \"primary\",\n  \"aria-labelledby\": ariaLabelledBy,\n}: HvProgressColumnCellProp): JSX.Element => {\n  const { classes } = useClasses();\n\n  const percentage = normalizeProgressBar(partial, total);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.linearProgressContainer}>\n        <MuiLinearProgress\n          className={classes.linearProgress}\n          classes={{\n            root: classes.linearProgressRoot,\n            colorPrimary: classes.linearProgressColorPrimary,\n            barColorPrimary: classes.linearProgressBarColorPrimary,\n            barColorSecondary: classes.linearProgressBarColorSecondary,\n          }}\n          color={color}\n          variant=\"determinate\"\n          value={percentage}\n          aria-labelledby={ariaLabelledBy}\n        />\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAIA,MAAM,EAAE,WAAA,IAAe,cAAc,wBAAwB;AAAA,EAC3D,MAAM,EAAE,SAAS,QAAQ,OAAO,OAAO;AAAA,EACvC,yBAAyB,EAAE,OAAO,QAAQ,QAAQ,OAAO;AAAA,EACzD,gBAAgB;AAAA,IACd,QAAQ;AAAA,EACV;AAAA,EACA,oBAAoB,EAAE,iBAAiB,MAAM,OAAO,MAAM;AAAA,EAC1D,4BAA4B;AAAA,IAC1B,iBAAiB,MAAM,OAAO;AAAA,EAChC;AAAA,EACA,+BAA+B;AAAA,IAC7B,iBAAiB,MAAM,OAAO;AAAA,EAChC;AAAA,EACA,iCAAiC;AAAA,IAC/B,iBAAiB,MAAM,OAAO;AAAA,EAAA;AAElC,CAAC;AAYY,MAAA,uBAAuB,CAAC,OAAe,QAAgB;AAClE,SAAO,MAAM,IAAI,KAAK,MAAO,QAAQ,MAAO,GAAG,IAAI;AACrD;AAEO,MAAM,uBAAuB,CAAC;AAAA,EACnC;AAAA,EACA;AAAA,EACA,QAAQ;AAAA,EACR,mBAAmB;AACrB,MAA6C;AACrC,QAAA,EAAE,QAAQ,IAAI,WAAW;AAEzB,QAAA,aAAa,qBAAqB,SAAS,KAAK;AAGpD,SAAA,oBAAC,SAAI,WAAW,QAAQ,MACtB,UAAC,oBAAA,OAAA,EAAI,WAAW,QAAQ,yBACtB,UAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAW,QAAQ;AAAA,MACnB,SAAS;AAAA,QACP,MAAM,QAAQ;AAAA,QACd,cAAc,QAAQ;AAAA,QACtB,iBAAiB,QAAQ;AAAA,QACzB,mBAAmB,QAAQ;AAAA,MAC7B;AAAA,MACA;AAAA,MACA,SAAQ;AAAA,MACR,OAAO;AAAA,MACP,mBAAiB;AAAA,IAAA;AAAA,KAErB,EACF,CAAA;AAEJ;"}