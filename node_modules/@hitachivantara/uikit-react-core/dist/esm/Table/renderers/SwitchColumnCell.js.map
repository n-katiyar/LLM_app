{"version":3,"file":"SwitchColumnCell.js","sources":["../../../../src/Table/renderers/SwitchColumnCell.tsx"],"sourcesContent":["import { createClasses } from \"@hitachivantara/uikit-react-utils\";\n\nimport { HvBaseSwitch, HvBaseSwitchProps } from \"../../BaseSwitch\";\nimport { HvTypography } from \"../../Typography\";\n\nconst switchStyle = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  marginLeft: \"10px\",\n};\n\nconst { useClasses } = createClasses(\"HvSwitchColumnCell\", {\n  switchNo: switchStyle,\n  switchYes: switchStyle,\n});\n\nexport interface HvSwitchColumnCellProp {\n  /** Whether the switch is checked or not. */\n  checked: boolean;\n  /** The switch label. */\n  value: number | string | undefined;\n  /** The value of the switch. */\n  switchLabel: string;\n  /** The right switch label. */\n  falseLabel?: string;\n  /** The left switch label. */\n  trueLabel?: string;\n  /** Extra props to be passed to the switch. */\n  switchProps?: HvBaseSwitchProps;\n}\n\nexport const HvSwitchColumnCell = ({\n  checked,\n  value,\n  switchLabel,\n  falseLabel,\n  trueLabel,\n  switchProps,\n}: HvSwitchColumnCellProp): JSX.Element => {\n  const { classes } = useClasses();\n\n  return (\n    <>\n      {falseLabel != null && (\n        <HvTypography\n          aria-hidden=\"true\"\n          variant=\"body\"\n          className={classes.switchNo}\n        >\n          {falseLabel}\n        </HvTypography>\n      )}\n      <HvBaseSwitch\n        checked={checked}\n        value={value}\n        {...switchProps}\n        inputProps={{ \"aria-label\": switchLabel, ...switchProps?.inputProps }}\n      />\n      {trueLabel != null && (\n        <HvTypography\n          aria-hidden=\"true\"\n          variant=\"body\"\n          className={classes.switchYes}\n        >\n          {trueLabel}\n        </HvTypography>\n      )}\n    </>\n  );\n};\n"],"names":[],"mappings":";;;;AAKA,MAAM,cAAc;AAAA,EAClB,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,YAAY;AACd;AAEA,MAAM,EAAE,WAAA,IAAe,cAAc,sBAAsB;AAAA,EACzD,UAAU;AAAA,EACV,WAAW;AACb,CAAC;AAiBM,MAAM,qBAAqB,CAAC;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAA2C;AACnC,QAAA,EAAE,QAAQ,IAAI,WAAW;AAE/B,SAEK,qBAAA,UAAA,EAAA,UAAA;AAAA,IAAA,cAAc,QACb;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,eAAY;AAAA,QACZ,SAAQ;AAAA,QACR,WAAW,QAAQ;AAAA,QAElB,UAAA;AAAA,MAAA;AAAA,IACH;AAAA,IAEF;AAAA,MAAC;AAAA,MAAA;AAAA,QACC;AAAA,QACA;AAAA,QACC,GAAG;AAAA,QACJ,YAAY,EAAE,cAAc,aAAa,GAAG,aAAa,WAAW;AAAA,MAAA;AAAA,IACtE;AAAA,IACC,aAAa,QACZ;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,eAAY;AAAA,QACZ,SAAQ;AAAA,QACR,WAAW,QAAQ;AAAA,QAElB,UAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EACH,GAEJ;AAEJ;"}