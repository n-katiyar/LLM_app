{"version":3,"file":"Kpi.js","sources":["../../../src/Kpi/Kpi.tsx"],"sourcesContent":["import {\n  useDefaultProps,\n  type ExtractNames,\n} from \"@hitachivantara/uikit-react-utils\";\n\nimport { useLabels } from \"../hooks/useLabels\";\nimport { HvBaseProps } from \"../types/generic\";\nimport { HvTypography } from \"../Typography\";\nimport { staticClasses, useClasses } from \"./Kpi.styles\";\n\nexport { staticClasses as kpiClasses };\n\nexport type HvKpiClasses = ExtractNames<typeof useClasses>;\n\nconst DEFAULT_LABELS = {\n  /** The text at the top of the kpi. */\n  title: \"\",\n  /** The text in the middle of the kpi. */\n  indicator: undefined as string | undefined,\n  /** The text to the right of the indicator. */\n  unit: undefined as string | undefined,\n  /** The text to the right of the visual comparison. */\n  comparisonIndicatorInfo: undefined as string | undefined,\n};\n\nexport type HvKpiLabelProps = Partial<typeof DEFAULT_LABELS>;\n\nexport interface HvKpiProps extends HvBaseProps<HTMLDivElement, \"children\"> {\n  /**\n   * An Element that will be rendered to the left of the kpi indicator text.\n   */\n  trendIndicator?: React.ReactNode;\n  /**\n   * An Element that will be rendered to the left of the kpi indicator text.\n   */\n  visualIndicator?: React.ReactNode;\n  /**\n   * An Element that will be rendered below the kpi indicator text.\n   */\n  visualComparison?: React.ReactNode;\n  /**\n   * The object that contains the different labels inside the kpi.\n   */\n  labels?: HvKpiLabelProps;\n  /**\n   *  The typography variant used in the main text indicator of the KPI\n   */\n  indicatorTextVariant?: \"display\" | \"title1\" | \"title2\";\n  /**\n   *  The typography variant used in the main text indicator of the KPI\n   */\n  indicatorUnitTextVariant?: \"title2\" | \"body\";\n  /**\n   * A Jss Object used to override or extend the component styles applied.\n   */\n  classes?: HvKpiClasses;\n}\n\n/**\n * Key Performance Indicator is a type of performance measurement. It monitors a business indicator\n * and its success/failure against a given target. KPIs are the first item read on a dashboard.\n * Communicates simple, immediate and vital information for operational decision making.\n * @deprecated build KPIs with `HvCard`, or with your custom layouts\n */\nexport const HvKpi = (props: HvKpiProps) => {\n  const {\n    trendIndicator = null,\n    visualIndicator = null,\n    visualComparison = null,\n    indicatorUnitTextVariant = \"title2\",\n    indicatorTextVariant = \"title1\",\n    labels: labelsProp,\n    classes: classesProp,\n    className,\n    ...others\n  } = useDefaultProps(\"HvKpi\", props);\n\n  const { classes, cx } = useClasses(classesProp);\n\n  const labels = useLabels(DEFAULT_LABELS, labelsProp);\n\n  const InternalVisualComparison =\n    typeof visualComparison === \"string\" ? HvTypography : \"div\";\n\n  return (\n    <div className={cx(classes.root, className)} {...others}>\n      <div>\n        <HvTypography variant=\"label\">{labels.title}</HvTypography>\n      </div>\n      <div className={classes.indicatorsContainer}>\n        {visualIndicator && (\n          <div\n            className={cx(\n              classes.visualIndicatorContainer,\n              classes.spacingToTheRight,\n            )}\n          >\n            {visualIndicator}\n          </div>\n        )}\n        {labels.indicator && (\n          <HvTypography\n            className={cx(classes.spacingToTheRight, classes.indicatorText)}\n            variant={indicatorTextVariant}\n          >\n            {labels.indicator}\n          </HvTypography>\n        )}\n        {labels.unit && (\n          <HvTypography\n            className={classes.indicatorUnit}\n            variant={indicatorUnitTextVariant}\n          >\n            {labels.unit}\n          </HvTypography>\n        )}\n      </div>\n      {visualComparison && (\n        <div className={classes.comparisonComposition}>\n          {trendIndicator && (\n            <div className={cx(classes.trendLine, classes.spacingToTheRight)}>\n              {trendIndicator}\n            </div>\n          )}\n          <div>\n            <div className={classes.comparisonContainer}>\n              <InternalVisualComparison\n                className={cx(classes.comparisons, classes.spacingToTheRight)}\n                variant=\"label\"\n              >\n                {visualComparison}\n              </InternalVisualComparison>\n            </div>\n            <div className={classes.comparisonContainer}>\n              <HvTypography className={classes.comparisons} variant=\"caption2\">\n                {labels.comparisonIndicatorInfo}\n              </HvTypography>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;;;AAcA,MAAM,iBAAiB;AAAA;AAAA,EAErB,OAAO;AAAA;AAAA,EAEP,WAAW;AAAA;AAAA,EAEX,MAAM;AAAA;AAAA,EAEN,yBAAyB;AAC3B;AAyCa,MAAA,QAAQ,CAAC,UAAsB;AACpC,QAAA;AAAA,IACJ,iBAAiB;AAAA,IACjB,kBAAkB;AAAA,IAClB,mBAAmB;AAAA,IACnB,2BAA2B;AAAA,IAC3B,uBAAuB;AAAA,IACvB,QAAQ;AAAA,IACR,SAAS;AAAA,IACT;AAAA,IACA,GAAG;AAAA,EAAA,IACD,gBAAgB,SAAS,KAAK;AAElC,QAAM,EAAE,SAAS,OAAO,WAAW,WAAW;AAExC,QAAA,SAAS,UAAU,gBAAgB,UAAU;AAEnD,QAAM,2BACJ,OAAO,qBAAqB,WAAW,eAAe;AAGtD,SAAA,qBAAC,SAAI,WAAW,GAAG,QAAQ,MAAM,SAAS,GAAI,GAAG,QAC/C,UAAA;AAAA,IAAA,oBAAC,SACC,UAAC,oBAAA,cAAA,EAAa,SAAQ,SAAS,UAAA,OAAO,OAAM,EAC9C,CAAA;AAAA,IACC,qBAAA,OAAA,EAAI,WAAW,QAAQ,qBACrB,UAAA;AAAA,MACC,mBAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,WAAW;AAAA,YACT,QAAQ;AAAA,YACR,QAAQ;AAAA,UACV;AAAA,UAEC,UAAA;AAAA,QAAA;AAAA,MACH;AAAA,MAED,OAAO,aACN;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,WAAW,GAAG,QAAQ,mBAAmB,QAAQ,aAAa;AAAA,UAC9D,SAAS;AAAA,UAER,UAAO,OAAA;AAAA,QAAA;AAAA,MACV;AAAA,MAED,OAAO,QACN;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,WAAW,QAAQ;AAAA,UACnB,SAAS;AAAA,UAER,UAAO,OAAA;AAAA,QAAA;AAAA,MAAA;AAAA,IACV,GAEJ;AAAA,IACC,oBACC,qBAAC,OAAI,EAAA,WAAW,QAAQ,uBACrB,UAAA;AAAA,MACC,kBAAA,oBAAC,SAAI,WAAW,GAAG,QAAQ,WAAW,QAAQ,iBAAiB,GAC5D,UACH,eAAA,CAAA;AAAA,2BAED,OACC,EAAA,UAAA;AAAA,QAAC,oBAAA,OAAA,EAAI,WAAW,QAAQ,qBACtB,UAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,WAAW,GAAG,QAAQ,aAAa,QAAQ,iBAAiB;AAAA,YAC5D,SAAQ;AAAA,YAEP,UAAA;AAAA,UAAA;AAAA,QAAA,GAEL;AAAA,QACC,oBAAA,OAAA,EAAI,WAAW,QAAQ,qBACtB,UAAC,oBAAA,cAAA,EAAa,WAAW,QAAQ,aAAa,SAAQ,YACnD,UAAA,OAAO,yBACV,EACF,CAAA;AAAA,MAAA,EACF,CAAA;AAAA,IAAA,EACF,CAAA;AAAA,EAAA,GAEJ;AAEJ;"}