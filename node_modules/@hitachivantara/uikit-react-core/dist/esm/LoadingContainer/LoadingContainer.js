import { jsxs, jsx } from "react/jsx-runtime";
import { forwardRef } from "react";
import { useDefaultProps, mergeStyles } from "@hitachivantara/uikit-react-utils";
import { useClasses } from "./LoadingContainer.styles.js";
import { staticClasses } from "./LoadingContainer.styles.js";
import { HvLoading } from "../Loading/Loading.js";
const HvLoadingContainer = forwardRef(function HvLoadingContainer2(props, ref) {
  const {
    children,
    className,
    classes: classesProp,
    hidden,
    small,
    label,
    "aria-label": ariaLabelProp,
    opacity,
    ...others
  } = useDefaultProps("HvLoadingContainer", props);
  const { classes, cx } = useClasses(classesProp);
  const ariaLabel = ariaLabelProp || typeof label === "string" && label || "Loading";
  return /* @__PURE__ */ jsxs("div", { ref, className: cx(classes.root, className), ...others, children: [
    /* @__PURE__ */ jsx(
      HvLoading,
      {
        className: classes.loading,
        role: "progressbar",
        small,
        label,
        hidden,
        "aria-label": ariaLabel,
        style: mergeStyles(void 0, {
          "--opacity": opacity && `${opacity * 100}%`
        })
      }
    ),
    children
  ] });
});
export {
  HvLoadingContainer,
  staticClasses as loadingContainerClasses
};
