{"version":3,"file":"VerticalScrollListItem.js","sources":["../../../../src/ScrollToVertical/VerticalScrollListItem/VerticalScrollListItem.tsx"],"sourcesContent":["import {\n  useDefaultProps,\n  type ExtractNames,\n} from \"@hitachivantara/uikit-react-utils\";\n\nimport { HvTooltip, HvTooltipProps } from \"../../Tooltip\";\nimport { HvBaseProps } from \"../../types/generic\";\nimport { staticClasses, useClasses } from \"./VerticalScrollListItem.styles\";\n\nexport { staticClasses as verticalScrollListItemClasses };\n\nexport type HvVerticalScrollListItemClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvVerticalScrollListItemProps\n  extends HvBaseProps<HTMLDivElement | HTMLAnchorElement> {\n  /** A Jss Object used to override or extend the styles applied. */\n  classes?: HvVerticalScrollListItemClasses;\n  /** Whether the element is selected. */\n  selected?: boolean;\n  label?: React.ReactNode;\n  tooltipPlacement?: HvTooltipProps[\"placement\"];\n\n  /**\n   * The link to be set in the href attribute of the anchor element.\n   *\n   * If this is not set, the element will be rendered as a div with a button role.\n   */\n  href?: string;\n}\n\n/**\n * HvVerticalScrollListItem a focusable item to be used as part of the vertical scroll\n */\nexport const HvVerticalScrollListItem = (\n  props: HvVerticalScrollListItemProps,\n) => {\n  const {\n    id,\n    className,\n    classes: classesProp,\n    selected,\n    label,\n    tooltipPlacement = \"left\",\n    href,\n    ...others\n  } = useDefaultProps(\"HvVerticalScrollListItem\", props);\n  const { classes, cx } = useClasses(classesProp);\n\n  const Component = href != null ? \"a\" : \"div\";\n\n  return (\n    <li id={id} className={cx(classes.root, className)} aria-current={selected}>\n      <HvTooltip title={label} placement={tooltipPlacement}>\n        <Component\n          role={href == null ? \"button\" : undefined}\n          tabIndex={0}\n          className={cx(classes.button, classes.text)}\n          href={href}\n          {...others}\n        >\n          <div\n            className={cx(classes.icon, {\n              [classes.notSelected]: !selected,\n            })}\n          />\n        </Component>\n      </HvTooltip>\n    </li>\n  );\n};\n"],"names":[],"mappings":";;;;;AAiCa,MAAA,2BAA2B,CACtC,UACG;AACG,QAAA;AAAA,IACJ;AAAA,IACA;AAAA,IACA,SAAS;AAAA,IACT;AAAA,IACA;AAAA,IACA,mBAAmB;AAAA,IACnB;AAAA,IACA,GAAG;AAAA,EAAA,IACD,gBAAgB,4BAA4B,KAAK;AACrD,QAAM,EAAE,SAAS,OAAO,WAAW,WAAW;AAExC,QAAA,YAAY,QAAQ,OAAO,MAAM;AAEvC,6BACG,MAAG,EAAA,IAAQ,WAAW,GAAG,QAAQ,MAAM,SAAS,GAAG,gBAAc,UAChE,UAAC,oBAAA,WAAA,EAAU,OAAO,OAAO,WAAW,kBAClC,UAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,MAAM,QAAQ,OAAO,WAAW;AAAA,MAChC,UAAU;AAAA,MACV,WAAW,GAAG,QAAQ,QAAQ,QAAQ,IAAI;AAAA,MAC1C;AAAA,MACC,GAAG;AAAA,MAEJ,UAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,WAAW,GAAG,QAAQ,MAAM;AAAA,YAC1B,CAAC,QAAQ,WAAW,GAAG,CAAC;AAAA,UACzB,CAAA;AAAA,QAAA;AAAA,MAAA;AAAA,IACH;AAAA,KAEJ,EACF,CAAA;AAEJ;"}