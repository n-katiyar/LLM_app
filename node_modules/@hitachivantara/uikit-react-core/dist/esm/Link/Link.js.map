{"version":3,"file":"Link.js","sources":["../../../src/Link/Link.tsx"],"sourcesContent":["import {\n  useDefaultProps,\n  type ExtractNames,\n} from \"@hitachivantara/uikit-react-utils\";\n\nimport { HvBaseProps } from \"../types/generic\";\nimport { staticClasses, useClasses } from \"./Link.styles\";\n\nexport { staticClasses as linkClasses };\n\nexport type HvLinkClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvLinkProps extends HvBaseProps<HTMLAnchorElement, \"onClick\"> {\n  onClick?: (event: React.MouseEvent<HTMLAnchorElement>, data: any) => void;\n  route?: string;\n  data?: any;\n  children: any;\n  /** A Jss Object used to override or extend the styles applied to the component. */\n  classes?: HvLinkClasses;\n}\n\n/** @deprecated use `<HvTypography link component=\"a\" />` instead */\nexport const HvLink = (props: HvLinkProps) => {\n  const {\n    onClick,\n    classes: classesProp,\n    className,\n    route,\n    data,\n    children,\n    ...others\n  } = useDefaultProps(\"HvLink\", props);\n\n  const { classes, cx } = useClasses(classesProp);\n\n  return (\n    <a\n      href={route}\n      onClick={(event) => {\n        if (!onClick) return;\n\n        event.preventDefault();\n        onClick?.(event, data);\n      }}\n      className={cx(classes.a, className)}\n      {...others}\n    >\n      {children}\n    </a>\n  );\n};\n"],"names":[],"mappings":";;;;AAsBa,MAAA,SAAS,CAAC,UAAuB;AACtC,QAAA;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,IACT;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EAAA,IACD,gBAAgB,UAAU,KAAK;AAEnC,QAAM,EAAE,SAAS,OAAO,WAAW,WAAW;AAG5C,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,MAAM;AAAA,MACN,SAAS,CAAC,UAAU;AAClB,YAAI,CAAC,QAAS;AAEd,cAAM,eAAe;AACrB,kBAAU,OAAO,IAAI;AAAA,MACvB;AAAA,MACA,WAAW,GAAG,QAAQ,GAAG,SAAS;AAAA,MACjC,GAAG;AAAA,MAEH;AAAA,IAAA;AAAA,EACH;AAEJ;"}