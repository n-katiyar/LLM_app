{"version":3,"file":"Skeleton.js","sources":["../../../src/Skeleton/Skeleton.tsx"],"sourcesContent":["import {\n  useDefaultProps,\n  type ExtractNames,\n} from \"@hitachivantara/uikit-react-utils\";\n\nimport { HvBaseProps } from \"../types/generic\";\nimport { staticClasses, useClasses } from \"./Skeleton.styles\";\n\nexport { staticClasses as skeletonClasses };\n\nexport type HvSkeletonClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvSkeletonProps extends HvBaseProps {\n  /** Whether the skeleton element is hidden or not. */\n  hidden?: boolean;\n  /** The type of skeleton element. @default \"text\" */\n  variant?: \"circle\" | \"square\" | \"text\";\n  /** The animation the skeleton element will display. @default \"pulse\" */\n  animation?: \"pulse\" | \"wave\";\n  /** The width of the skeleton element. */\n  width?: React.CSSProperties[\"width\"];\n  /** The height of the skeleton element. */\n  height?: React.CSSProperties[\"height\"];\n  /** The url for a placeholder image to use on the skeleton element. */\n  backgroundImage?: string;\n  /** A Jss Object used to override or extend the styles applied to the component. */\n  classes?: HvSkeletonClasses;\n}\n\n/**\n * The `HvSkeleton` component is used to create a placeholder element that represents the shape and size of the content that will be loaded.\n */\nexport const HvSkeleton = (props: HvSkeletonProps) => {\n  const {\n    classes: classesProp,\n    className,\n    children,\n    hidden = false,\n    variant = \"text\",\n    animation = \"pulse\",\n    backgroundImage,\n    width,\n    height,\n    style,\n    ...others\n  } = useDefaultProps(\"HvSkeleton\", props);\n  const { classes, cx } = useClasses(classesProp);\n\n  if (hidden) return <div className={classes.content}>{children}</div>;\n\n  return (\n    <div\n      className={cx(\n        classes.root,\n        classes[variant],\n        animation && classes[animation],\n        className,\n      )}\n      style={{\n        width,\n        height,\n        ...(backgroundImage && {\n          backgroundImage: `url(${backgroundImage})`,\n          backgroundSize: \"contain\",\n          backgroundPosition: \"center\",\n          backgroundRepeat: \"no-repeat\",\n        }),\n        ...style,\n      }}\n      {...others}\n    >\n      {children}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAgCa,MAAA,aAAa,CAAC,UAA2B;AAC9C,QAAA;AAAA,IACJ,SAAS;AAAA,IACT;AAAA,IACA;AAAA,IACA,SAAS;AAAA,IACT,UAAU;AAAA,IACV,YAAY;AAAA,IACZ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EAAA,IACD,gBAAgB,cAAc,KAAK;AACvC,QAAM,EAAE,SAAS,OAAO,WAAW,WAAW;AAE9C,MAAI,OAAe,QAAA,oBAAC,SAAI,WAAW,QAAQ,SAAU,UAAS;AAG5D,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAW;AAAA,QACT,QAAQ;AAAA,QACR,QAAQ,OAAO;AAAA,QACf,aAAa,QAAQ,SAAS;AAAA,QAC9B;AAAA,MACF;AAAA,MACA,OAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA,GAAI,mBAAmB;AAAA,UACrB,iBAAiB,OAAO,eAAe;AAAA,UACvC,gBAAgB;AAAA,UAChB,oBAAoB;AAAA,UACpB,kBAAkB;AAAA,QACpB;AAAA,QACA,GAAG;AAAA,MACL;AAAA,MACC,GAAG;AAAA,MAEH;AAAA,IAAA;AAAA,EACH;AAEJ;"}