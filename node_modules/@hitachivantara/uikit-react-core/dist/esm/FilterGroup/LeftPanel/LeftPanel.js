import { jsx } from "react/jsx-runtime";
import { useContext } from "react";
import { setId } from "../../utils/setId.js";
import { HvFilterGroupContext } from "../FilterGroupContext.js";
import { useClasses } from "./LeftPanel.styles.js";
import { staticClasses } from "./LeftPanel.styles.js";
import { HvFilterGroupCounter } from "../Counter/Counter.js";
import { HvPanel } from "../../Panel/Panel.js";
import { HvListContainer } from "../../ListContainer/ListContainer.js";
import { HvListItem } from "../../ListContainer/ListItem/ListItem.js";
import { HvOverflowTooltip } from "../../OverflowTooltip/OverflowTooltip.js";
const HvFilterGroupLeftPanel = ({
  id,
  className,
  emptyElement,
  classes: classesProp
}) => {
  const { classes } = useClasses(classesProp);
  const { filterOptions, activeGroup, setActiveGroup } = useContext(HvFilterGroupContext);
  return /* @__PURE__ */ jsx(HvPanel, { id: setId(id, "leftPanel"), className, children: filterOptions.length > 0 ? /* @__PURE__ */ jsx(HvListContainer, { id: setId(id, "leftPanel-list"), condensed: true, interactive: true, children: filterOptions.map((group, index) => /* @__PURE__ */ jsx(
    HvListItem,
    {
      className: classes.listItem,
      onClick: () => setActiveGroup(index),
      selected: filterOptions[activeGroup].id === group.id,
      endAdornment: /* @__PURE__ */ jsx(HvFilterGroupCounter, { groupId: group.id }),
      children: /* @__PURE__ */ jsx(HvOverflowTooltip, { data: group.name })
    },
    group.id || group.name
  )) }) : emptyElement });
};
export {
  HvFilterGroupLeftPanel,
  staticClasses as filterGroupLeftPanelClasses
};
