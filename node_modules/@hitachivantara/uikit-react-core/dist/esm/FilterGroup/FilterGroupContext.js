import { jsx } from "react/jsx-runtime";
import { useState, useEffect, useCallback, useMemo, createContext } from "react";
import { useDefaultProps } from "@hitachivantara/uikit-react-utils";
import { isEqual } from "../utils/helpers.js";
import { useSavedState } from "../utils/useSavedState.js";
const HvFilterGroupContext = createContext({
  activeGroup: 0,
  setActiveGroup: () => {
  },
  filterOptions: [],
  setFilterValues: () => {
  },
  rollbackFilters: () => {
  },
  clearFilters: () => {
  },
  applyFilters: () => {
  },
  applyDisabled: false,
  filterValues: [],
  appliedFilters: void 0,
  defaultValue: void 0
});
const groups = (filters) => filters.map(() => []);
const HvFilterGroupProvider = (props) => {
  const { defaultValue, value, filters, children } = useDefaultProps(
    "HvFilterGroupProvider",
    props
  );
  const [group, setActiveGroup] = useState(0);
  const [filterValues, setFilterValues, rollbackFilters, appliedFilters] = useSavedState(value || groups(filters));
  const [applyDisabled, setApplyDisabled] = useState(false);
  useEffect(() => {
    setFilterValues(value, true);
  }, [value, setFilterValues]);
  useEffect(() => {
    setApplyDisabled(isEqual(filterValues, appliedFilters));
  }, [filterValues, appliedFilters]);
  const clearFilters = useCallback(() => {
    setFilterValues(defaultValue || groups(filters));
  }, [filters, setFilterValues, defaultValue]);
  const applyFilters = useCallback(() => {
    setFilterValues(filterValues, true);
  }, [filterValues, setFilterValues]);
  const contextValue = useMemo(
    () => ({
      activeGroup: group,
      setActiveGroup,
      filterOptions: filters,
      filterValues,
      setFilterValues,
      appliedFilters,
      rollbackFilters,
      clearFilters,
      applyFilters,
      applyDisabled,
      defaultValue
    }),
    [
      appliedFilters,
      applyDisabled,
      applyFilters,
      clearFilters,
      filterValues,
      filters,
      group,
      rollbackFilters,
      setFilterValues,
      defaultValue
    ]
  );
  return /* @__PURE__ */ jsx(HvFilterGroupContext.Provider, { value: contextValue, children });
};
export {
  HvFilterGroupContext,
  HvFilterGroupProvider
};
