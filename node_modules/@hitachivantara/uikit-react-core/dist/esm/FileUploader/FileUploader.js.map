{"version":3,"file":"FileUploader.js","sources":["../../../src/FileUploader/FileUploader.tsx"],"sourcesContent":["import {\n  ExtractNames,\n  useDefaultProps,\n} from \"@hitachivantara/uikit-react-utils\";\n\nimport { HvFormElement, HvFormElementProps } from \"../FormElement\";\nimport { useLabels } from \"../hooks/useLabels\";\nimport { setId } from \"../utils/setId\";\nimport { HvDropZone, HvDropZoneLabels, HvDropZoneProps } from \"./DropZone\";\nimport { HvFileData, HvFileRemovedEvent, HvFilesAddedEvent } from \"./File\";\nimport { HvFileList } from \"./FileList\";\nimport { staticClasses, useClasses } from \"./FileUploader.styles\";\n\nexport { staticClasses as fileUploaderClasses };\n\nexport type HvFileUploaderClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvFileUploaderLabels extends HvDropZoneLabels {\n  /** Value of aria-label to apply to remove file button in FileList */\n  removeFileButtonLabel?: string;\n}\n\nexport interface HvFileUploaderProps extends HvFormElementProps {\n  /**\n   * An object containing all the labels.\n   */\n  labels?: HvFileUploaderLabels;\n  /**\n   * An object used to override or extend the styles applied to the component.\n   */\n  classes?: HvFileUploaderClasses;\n  /**\n   * The files to upload.\n   */\n  fileList?: HvFileData[];\n  /**\n   * Whether the Dropzone should accept multiple files at once.\n   */\n  multiple?: boolean;\n  /**\n   * If the input is disabled or not\n   */\n  disabled?: boolean;\n  /**\n   * Max upload size\n   * */\n  maxFileSize?: number;\n  /** File types accepted for uploading. @see [HTML input file accept](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept) */\n  accept?: HvDropZoneProps[\"accept\"];\n  /** Files extensions accepted for upload. @deprecated use `accept` instead */\n  acceptedFiles?: string[];\n  /**\n   * Callback fired when files are added.\n   */\n  onFilesAdded?: HvFilesAddedEvent;\n  /**\n   * Callback fired when file is removed from list.\n   */\n  onFileRemoved?: HvFileRemovedEvent;\n  /**\n   * Whether the DropZone should hide labels or not.\n   */\n  hideLabels?: boolean;\n  /**\n   * Attributes applied to the input element.\n   */\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n}\n\n// TODO: This component needs to adopt the Form element shape and deprecate its way of composing labels\n\nconst DEFAULT_LABELS = {\n  removeFileButtonLabel: \"Remove File\",\n};\n\n/**\n * Lets the user choose one or more files from their device storage. Once chosen,\n * the files can be uploaded to a server or manipulated on the client side.\n *\n * Accepted file types follow the format of the html [input accept attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file).\n */\nexport const HvFileUploader = (props: HvFileUploaderProps) => {\n  const {\n    id,\n    className,\n    classes: classesProp,\n    labels: labelsProp,\n    fileList,\n    multiple = true,\n    label,\n    hideLabels,\n    maxFileSize = Infinity,\n    inputProps = {},\n    accept,\n    acceptedFiles = [],\n    // TODO: consider adding/replacing with onFilesChange\n    onFilesAdded,\n    onFileRemoved,\n    ...others\n  } = useDefaultProps(\"HvFileUploader\", props);\n  const { classes, cx } = useClasses(classesProp);\n  const labels = useLabels(DEFAULT_LABELS, labelsProp);\n\n  return (\n    <HvFormElement id={id} className={cx(classes.root, className)} {...others}>\n      <HvDropZone\n        id={setId(id, \"dropzone\")}\n        label={label}\n        labels={labels}\n        multiple={multiple}\n        accept={accept ?? acceptedFiles.join(\",\")}\n        maxFileSize={maxFileSize}\n        onFilesAdded={onFilesAdded}\n        inputProps={inputProps}\n        hideLabels={hideLabels}\n      />\n      <HvFileList\n        id={setId(id, \"filelist\")}\n        list={fileList}\n        onFileRemoved={onFileRemoved}\n        removeFileButtonLabel={labels?.removeFileButtonLabel}\n      />\n    </HvFormElement>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;AAuEA,MAAM,iBAAiB;AAAA,EACrB,uBAAuB;AACzB;AAQa,MAAA,iBAAiB,CAAC,UAA+B;AACtD,QAAA;AAAA,IACJ;AAAA,IACA;AAAA,IACA,SAAS;AAAA,IACT,QAAQ;AAAA,IACR;AAAA,IACA,WAAW;AAAA,IACX;AAAA,IACA;AAAA,IACA,cAAc;AAAA,IACd,aAAa,CAAC;AAAA,IACd;AAAA,IACA,gBAAgB,CAAC;AAAA;AAAA,IAEjB;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EAAA,IACD,gBAAgB,kBAAkB,KAAK;AAC3C,QAAM,EAAE,SAAS,OAAO,WAAW,WAAW;AACxC,QAAA,SAAS,UAAU,gBAAgB,UAAU;AAGjD,SAAA,qBAAC,eAAc,EAAA,IAAQ,WAAW,GAAG,QAAQ,MAAM,SAAS,GAAI,GAAG,QACjE,UAAA;AAAA,IAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,IAAI,MAAM,IAAI,UAAU;AAAA,QACxB;AAAA,QACA;AAAA,QACA;AAAA,QACA,QAAQ,UAAU,cAAc,KAAK,GAAG;AAAA,QACxC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAA;AAAA,IACF;AAAA,IACA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,IAAI,MAAM,IAAI,UAAU;AAAA,QACxB,MAAM;AAAA,QACN;AAAA,QACA,uBAAuB,QAAQ;AAAA,MAAA;AAAA,IAAA;AAAA,EACjC,GACF;AAEJ;"}