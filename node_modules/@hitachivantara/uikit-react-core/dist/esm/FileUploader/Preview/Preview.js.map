{"version":3,"file":"Preview.js","sources":["../../../../src/FileUploader/Preview/Preview.tsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { Preview } from \"@hitachivantara/uikit-react-icons\";\nimport {\n  useDefaultProps,\n  type ExtractNames,\n} from \"@hitachivantara/uikit-react-utils\";\n\nimport { HvButton, HvButtonProps } from \"../../Button\";\nimport { staticClasses, useClasses } from \"./Preview.styles\";\n\nexport { staticClasses as fileUploaderPreviewClasses };\n\nexport type HvFileUploaderPreviewClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvFileUploaderPreviewProps\n  extends Omit<HvButtonProps, \"children\" | \"classes\"> {\n  /**\n   * Content that represents the preview of an uploaded file.\n   */\n  children: React.ReactElement;\n  /**\n   * Callback executed when the preview is unmounted.\n   *\n   * Should be used for cleaning up client-side image URLs created by `URL.createObjectURL()`.\n   */\n  onUnload?: () => void;\n  /**\n   * If `true`, doesn't show an overlay on top of the preview when hovering.\n   *\n   * Only applies when `onClick` is set.\n   */\n  disableOverlay?: boolean;\n  /**\n   * A Jss Object used to override or extend the styles applied to the component.\n   */\n  classes?: HvFileUploaderPreviewClasses;\n}\n\n/**\n * The `HvFileUploaderPreview` component is available to facilitate the styling\n * of the button (when clickable) and the detection of image unloading.\n */\nexport const HvFileUploaderPreview = (props: HvFileUploaderPreviewProps) => {\n  const {\n    className,\n    children,\n    classes: classesProp,\n    disableOverlay = false,\n    onUnload,\n    onClick,\n    ...others\n  } = useDefaultProps(\"HvFileUploaderPreview\", props);\n  const { classes, cx, css } = useClasses(classesProp);\n\n  useEffect(() => {\n    return () => {\n      onUnload?.();\n    };\n  }, [onUnload]);\n\n  if (onClick) {\n    return (\n      <HvButton\n        icon\n        className={cx(classes.previewButton, className)}\n        onClick={onClick}\n        {...others}\n      >\n        {children}\n        {!disableOverlay && (\n          <div className={classes.overlay} aria-hidden=\"true\">\n            <Preview\n              className={css({\n                position: \"absolute\",\n                left: \"50%\",\n                top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                display: \"none\",\n              })}\n            />\n          </div>\n        )}\n      </HvButton>\n    );\n  }\n\n  return children;\n};\n"],"names":[],"mappings":";;;;;;;AA0Ca,MAAA,wBAAwB,CAAC,UAAsC;AACpE,QAAA;AAAA,IACJ;AAAA,IACA;AAAA,IACA,SAAS;AAAA,IACT,iBAAiB;AAAA,IACjB;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EAAA,IACD,gBAAgB,yBAAyB,KAAK;AAClD,QAAM,EAAE,SAAS,IAAI,IAAI,IAAI,WAAW,WAAW;AAEnD,YAAU,MAAM;AACd,WAAO,MAAM;AACA,iBAAA;AAAA,IACb;AAAA,EAAA,GACC,CAAC,QAAQ,CAAC;AAEb,MAAI,SAAS;AAET,WAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,MAAI;AAAA,QACJ,WAAW,GAAG,QAAQ,eAAe,SAAS;AAAA,QAC9C;AAAA,QACC,GAAG;AAAA,QAEH,UAAA;AAAA,UAAA;AAAA,UACA,CAAC,kBACC,oBAAA,OAAA,EAAI,WAAW,QAAQ,SAAS,eAAY,QAC3C,UAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAW,IAAI;AAAA,gBACb,UAAU;AAAA,gBACV,MAAM;AAAA,gBACN,KAAK;AAAA,gBACL,WAAW;AAAA,gBACX,SAAS;AAAA,cACV,CAAA;AAAA,YAAA;AAAA,UAAA,EAEL,CAAA;AAAA,QAAA;AAAA,MAAA;AAAA,IAEJ;AAAA,EAAA;AAIG,SAAA;AACT;"}