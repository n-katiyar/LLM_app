{"version":3,"file":"utils.js","sources":["../../../src/Dropdown/utils.tsx"],"sourcesContent":["import { HvListValue } from \"../List\";\nimport type { HvDropdownLabels } from \"./Dropdown\";\n\n/** Filter selected elements. */\nconst getSelected = (list: HvListValue[] = []) =>\n  list.filter((elem) => elem.selected);\n\n/** Checks if any element of the list is selected. */\nconst hasSelected = (list: HvListValue[]) => getSelected(list).length > 0;\n\n/** Gets the selection label according to selection. */\nconst getSelectionLabel = (\n  labels: HvDropdownLabels | undefined,\n  placeholder: string,\n  multiSelect: boolean,\n  list: HvListValue[] = [],\n) => {\n  const { select } = labels || {};\n  const selected = getSelected(list);\n\n  if (select) return { selected: select };\n\n  if (multiSelect) {\n    return {\n      selected: selected.length,\n      total: list.length,\n    };\n  }\n  return { selected: selected.length > 0 ? selected[0].label : placeholder };\n};\n\nexport { getSelectionLabel, getSelected, hasSelected };\n"],"names":[],"mappings":"AAIM,MAAA,cAAc,CAAC,OAAsB,OACzC,KAAK,OAAO,CAAC,SAAS,KAAK,QAAQ;AAMrC,MAAM,oBAAoB,CACxB,QACA,aACA,aACA,OAAsB,CAAA,MACnB;AACH,QAAM,EAAE,WAAW,UAAU,CAAC;AACxB,QAAA,WAAW,YAAY,IAAI;AAEjC,MAAI,OAAQ,QAAO,EAAE,UAAU,OAAO;AAEtC,MAAI,aAAa;AACR,WAAA;AAAA,MACL,UAAU,SAAS;AAAA,MACnB,OAAO,KAAK;AAAA,IACd;AAAA,EAAA;AAEK,SAAA,EAAE,UAAU,SAAS,SAAS,IAAI,SAAS,CAAC,EAAE,QAAQ,YAAY;AAC3E;"}