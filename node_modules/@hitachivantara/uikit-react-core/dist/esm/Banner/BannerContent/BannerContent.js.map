{"version":3,"file":"BannerContent.js","sources":["../../../../src/Banner/BannerContent/BannerContent.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport SnackbarContent, {\n  SnackbarContentProps as MuiSnackbarContentProps,\n} from \"@mui/material/SnackbarContent\";\nimport { Close } from \"@hitachivantara/uikit-react-icons\";\nimport { type ExtractNames } from \"@hitachivantara/uikit-react-utils\";\n\nimport { HvActionsGeneric, HvActionsGenericProps } from \"../../ActionsGeneric\";\nimport { HvButton, HvButtonProps } from \"../../Button\";\nimport { iconVariant } from \"../../utils/iconVariant\";\nimport { setId } from \"../../utils/setId\";\nimport { HvBannerActionPosition, HvBannerVariant } from \"../types\";\nimport { staticClasses, useClasses } from \"./BannerContent.styles\";\n\nexport { staticClasses as bannerContentClasses };\n\nexport type HvBannerContentClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvBannerContentProps\n  extends Omit<MuiSnackbarContentProps, \"variant\" | \"classes\" | \"onClose\"> {\n  /** The message to display. @deprecated use `children` instead */\n  content?: string;\n  /** The message to display. */\n  children?: React.ReactNode;\n  /** Variant of the snackbar. */\n  variant?: HvBannerVariant;\n  /** Controls if the associated icon to the variant should be shown. */\n  showIcon?: boolean;\n  /** Custom icon to replace the variant default. */\n  customIcon?: React.ReactNode;\n  /** Function called when clicking on the close button. */\n  onClose?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  /** Actions to display on the right side. */\n  actions?: HvActionsGenericProps[\"actions\"];\n  /**\n   * The callback function called when an action is triggered, receiving `action` as parameter.\n   *\n   * @deprecated Use `onAction` instead.\n   * */\n  actionsCallback?: HvActionsGenericProps[\"actionsCallback\"];\n  /** The callback function called when an action is triggered, receiving `action` as parameter. */\n  onAction?: HvActionsGenericProps[\"onAction\"];\n  /** The position property of the header. */\n  actionsPosition?: HvBannerActionPosition;\n  /** The props to pass down to the Action Container. */\n  actionProps?: Partial<HvButtonProps>;\n  /** A Jss Object used to override or extend the styles applied to the component. */\n  classes?: HvBannerContentClasses;\n}\n\nexport const HvBannerContent = forwardRef<HTMLDivElement, HvBannerContentProps>(\n  function HvBannerContent(props, ref) {\n    const {\n      id,\n      classes: classesProp,\n      className,\n      showIcon = false,\n      customIcon,\n      variant = \"default\",\n      onClose,\n      actions,\n      actionsCallback, // TODO - remove in v6\n      onAction,\n      actionsPosition = \"auto\",\n      content,\n      children,\n      actionProps,\n      ...others\n    } = props;\n    const { classes, cx } = useClasses(classesProp);\n    const icon = customIcon || (showIcon && iconVariant(variant, \"base_dark\"));\n\n    // default to inline\n    // this might try to be more intelligent in the future,\n    // taking into account the content length, available space,\n    // number of actions, etc..\n    const effectiveActionsPosition =\n      actionsPosition === \"auto\" ? \"inline\" : actionsPosition;\n\n    const handleAction: HvBannerContentProps[\"onAction\"] = (evt, action) => {\n      onAction?.(evt, action);\n      actionsCallback?.(evt, id!, action);\n    };\n\n    return (\n      <div className={classes.outContainer}>\n        <SnackbarContent\n          ref={ref}\n          id={id}\n          classes={{\n            root: classes.root,\n            message: classes.message,\n            action: classes.action,\n          }}\n          className={cx(classes.baseVariant, classes[variant], className)}\n          message={\n            <>\n              {icon && <div className={classes.iconContainer}>{icon}</div>}\n              <div\n                id={setId(id, \"message-text\")}\n                className={classes.messageContainer}\n              >\n                {children ?? content}\n              </div>\n              {actions && effectiveActionsPosition === \"inline\" && (\n                <div\n                  id={setId(id, \"message-actions\")}\n                  className={classes.messageActions}\n                >\n                  <HvActionsGeneric\n                    id={id}\n                    variant=\"semantic\"\n                    actions={actions}\n                    onAction={handleAction}\n                  />\n                </div>\n              )}\n            </>\n          }\n          action={\n            <div className={classes.actionContainer}>\n              <HvButton\n                icon\n                className={classes.closeAction}\n                variant=\"semantic\"\n                aria-label=\"Close\"\n                onClick={onClose}\n                {...actionProps}\n              >\n                <Close size=\"XS\" />\n              </HvButton>\n              {actions && effectiveActionsPosition === \"bottom-right\" && (\n                <div className={classes.actionsInnerContainer}>\n                  <HvActionsGeneric\n                    id={id}\n                    variant=\"semantic\"\n                    actions={actions}\n                    onAction={handleAction}\n                  />\n                </div>\n              )}\n            </div>\n          }\n          {...others}\n        />\n      </div>\n    );\n  },\n);\n"],"names":["HvBannerContent"],"mappings":";;;;;;;;;;AAkDO,MAAM,kBAAkB;AAAA,EAC7B,SAASA,iBAAgB,OAAO,KAAK;AAC7B,UAAA;AAAA,MACJ;AAAA,MACA,SAAS;AAAA,MACT;AAAA,MACA,WAAW;AAAA,MACX;AAAA,MACA,UAAU;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MACA;AAAA,MACA,kBAAkB;AAAA,MAClB;AAAA,MACA;AAAA,MACA;AAAA,MACA,GAAG;AAAA,IAAA,IACD;AACJ,UAAM,EAAE,SAAS,OAAO,WAAW,WAAW;AAC9C,UAAM,OAAO,cAAe,YAAY,YAAY,SAAS,WAAW;AAMlE,UAAA,2BACJ,oBAAoB,SAAS,WAAW;AAEpC,UAAA,eAAiD,CAAC,KAAK,WAAW;AACtE,iBAAW,KAAK,MAAM;AACJ,wBAAA,KAAK,IAAK,MAAM;AAAA,IACpC;AAEA,WACG,oBAAA,OAAA,EAAI,WAAW,QAAQ,cACtB,UAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA,SAAS;AAAA,UACP,MAAM,QAAQ;AAAA,UACd,SAAS,QAAQ;AAAA,UACjB,QAAQ,QAAQ;AAAA,QAClB;AAAA,QACA,WAAW,GAAG,QAAQ,aAAa,QAAQ,OAAO,GAAG,SAAS;AAAA,QAC9D,SAEK,qBAAA,UAAA,EAAA,UAAA;AAAA,UAAA,QAAS,oBAAA,OAAA,EAAI,WAAW,QAAQ,eAAgB,UAAK,MAAA;AAAA,UACtD;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,IAAI,MAAM,IAAI,cAAc;AAAA,cAC5B,WAAW,QAAQ;AAAA,cAElB,UAAY,YAAA;AAAA,YAAA;AAAA,UACf;AAAA,UACC,WAAW,6BAA6B,YACvC;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,IAAI,MAAM,IAAI,iBAAiB;AAAA,cAC/B,WAAW,QAAQ;AAAA,cAEnB,UAAA;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC;AAAA,kBACA,SAAQ;AAAA,kBACR;AAAA,kBACA,UAAU;AAAA,gBAAA;AAAA,cAAA;AAAA,YACZ;AAAA,UAAA;AAAA,QACF,GAEJ;AAAA,QAEF,QACE,qBAAC,OAAI,EAAA,WAAW,QAAQ,iBACtB,UAAA;AAAA,UAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,MAAI;AAAA,cACJ,WAAW,QAAQ;AAAA,cACnB,SAAQ;AAAA,cACR,cAAW;AAAA,cACX,SAAS;AAAA,cACR,GAAG;AAAA,cAEJ,UAAA,oBAAC,OAAM,EAAA,MAAK,KAAK,CAAA;AAAA,YAAA;AAAA,UACnB;AAAA,UACC,WAAW,6BAA6B,sCACtC,OAAI,EAAA,WAAW,QAAQ,uBACtB,UAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACC;AAAA,cACA,SAAQ;AAAA,cACR;AAAA,cACA,UAAU;AAAA,YAAA;AAAA,UAAA,EAEd,CAAA;AAAA,QAAA,GAEJ;AAAA,QAED,GAAG;AAAA,MAAA;AAAA,IAAA,GAER;AAAA,EAAA;AAGN;"}