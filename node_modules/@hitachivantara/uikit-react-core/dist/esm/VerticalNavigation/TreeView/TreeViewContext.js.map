{"version":3,"file":"TreeViewContext.js","sources":["../../../../src/VerticalNavigation/TreeView/TreeViewContext.tsx"],"sourcesContent":["import { createContext } from \"react\";\n\nexport type NavigationMode = \"treeview\" | \"navigation\" | \"slider\";\n\nconst TreeViewControlContext = createContext<TreeViewControlContextValue>({});\nTreeViewControlContext.displayName = \"TreeViewControlContext\";\n\nconst TreeViewStateContext = createContext<TreeviewStateContextValue>({});\nTreeViewStateContext.displayName = \"TreeViewStateContext\";\n\nexport { TreeViewControlContext, TreeViewStateContext };\n\ninterface TreeviewStateContextValue {\n  isExpanded?: (id: any) => boolean;\n  isSelected?: (id: any) => boolean;\n  isFocused?: (id: any) => boolean;\n  isDisabled?: (id: any) => boolean;\n  isChildSelected?: (id: any) => boolean;\n}\n\ninterface TreeViewControlContextValue {\n  treeId?: any;\n  mode?: NavigationMode;\n  collapsible?: boolean;\n  toggleExpansion?: (event: any, value?: any) => void;\n  multiSelect?: boolean;\n  selectNode?: (event: any, id: any, multiple?: any) => boolean;\n  selectRange?: (event: any, nodes: any, stacked?: boolean) => void;\n  disabledItemsFocusable?: boolean;\n  registerNode?: (node: any) => void;\n  unregisterNode?: (id: any) => void;\n  mapFirstChar?: (id: any, firstChar: any) => void;\n  unMapFirstChar?: (id: any, firstChar?: any) => void;\n  focus?: (id: any, firstChar: any) => void;\n}\n"],"names":[],"mappings":";AAIM,MAAA,yBAAyB,cAA2C,CAAE,CAAA;AAC5E,uBAAuB,cAAc;AAE/B,MAAA,uBAAuB,cAAyC,CAAE,CAAA;AACxE,qBAAqB,cAAc;"}