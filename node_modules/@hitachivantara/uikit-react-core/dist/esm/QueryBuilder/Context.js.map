{"version":3,"file":"Context.js","sources":["../../../src/QueryBuilder/Context.tsx"],"sourcesContent":["import { createContext, useContext } from \"react\";\n\nimport {\n  AskAction,\n  HvQueryBuilderAttribute,\n  HvQueryBuilderLabels,\n  HvQueryBuilderQueryCombinator,\n  HvQueryBuilderQueryOperator,\n  HvQueryBuilderRenderers,\n  QueryAction,\n} from \"./types\";\n\nexport const defaultOperators = {\n  numeric: [\n    {\n      operator: \"greaterThan\",\n      label: \"Greater than (>)\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"lessThan\",\n      label: \"Less than (<)\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"equalsTo\",\n      label: \"Equal to (=)\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"greaterThanEq\",\n      label: \"Greater than or equal to (>=)\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"lessThanEq\",\n      label: \"Less than or equal to (<=)\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"notEqual\",\n      label: \"Not equal to (!=)\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"range\",\n      label: \"Range\",\n      combinators: [\"and\"],\n    },\n  ],\n  text: [\n    {\n      operator: \"equals\",\n      label: \"Equals\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"equalsIgnoreCase\",\n      label: \"Equals Ignore Case\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"Contains\",\n      label: \"Contains\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"StartsWith\",\n      label: \"A string begins with\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"EndsWith\",\n      label: \"A string ends with\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"IsNotEmpty\",\n      label: \"Is Not empty\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"IsNot\",\n      label: \"Is Not\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"Empty\",\n      label: \"Empty\",\n      combinators: [\"and\"],\n    },\n  ],\n  textarea: [\n    {\n      operator: \"equals\",\n      label: \"Equals\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"equalsIgnoreCase\",\n      label: \"Equals Ignore Case\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"Contains\",\n      label: \"Contains\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"StartsWith\",\n      label: \"A string begins with\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"EndsWith\",\n      label: \"A string ends with\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"IsNotEmpty\",\n      label: \"Is Not empty\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"IsNot\",\n      label: \"Is Not\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"Empty\",\n      label: \"Empty\",\n      combinators: [\"and\"],\n    },\n  ],\n  boolean: [\n    {\n      operator: \"equalsTo\",\n      label: \"=\",\n      combinators: [\"and\", \"or\"],\n    },\n  ],\n  dateandtime: [\n    {\n      operator: \"greaterThan\",\n      label: \"Greater than\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"lessThan\",\n      label: \"Less than\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"equalsTo\",\n      label: \"Equal to\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"greaterThanEq\",\n      label: \"Greater than or equal to\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"lessThanEq\",\n      label: \"Less than or equal to\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"notEqual\",\n      label: \"Not equal to\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"range\",\n      label: \"Range\",\n      combinators: [\"and\"],\n    },\n  ],\n};\n\nexport const defaultCombinators = [\n  { operand: \"and\", label: \"AND\" },\n  { operand: \"or\", label: \"OR\" },\n];\n\nexport const defaultLabels: HvQueryBuilderLabels = {\n  query: {\n    delete: {\n      ariaLabel: \"Reset query\",\n      tooltip: \"Reset query\",\n      dialogTitle: \"Remove all conditions?\",\n      dialogMessage:\n        \"Are you sure you want to remove all the conditions? They will be removed permanently.\",\n      dialogConfirm: \"Yes\",\n      dialogCancel: \"No\",\n      dialogCloseTooltip: \"Close\",\n    },\n    addRule: {\n      label: \"Add condition\",\n    },\n    addGroup: {\n      label: \"Add group\",\n    },\n  },\n  rule: {\n    attribute: {\n      label: \"Attribute\",\n      placeholder: \"Select attribute...\",\n      exists: \"Attribute already exists.\",\n    },\n    operator: {\n      label: \"Operator\",\n      placeholder: \"Select operator...\",\n    },\n    value: {\n      distance: {\n        label: \"Value\",\n        connectorText: \"radius miles from\",\n        button: \"Select location\",\n        validation: {\n          required: \"The value is required.\",\n          invalid: \"Value must be a positive number.\",\n        },\n      },\n      text: {\n        label: \"Value\",\n        placeholder: \"Enter value...\",\n        validation: {\n          required: \"The value is required.\",\n        },\n      },\n      boolean: {\n        label: \"Value\",\n        placeholder: \"Enter value\",\n        options: {\n          true: \"True\",\n          false: \"False\",\n        },\n      },\n      numeric: {\n        label: \"Value\",\n        placeholder: \"Enter value\",\n        validation: {\n          required: \"The value is required.\",\n          invalid: \"Value must be a number.\",\n          equal: \"Cannot be equal.\",\n          greaterThan: \"Needs to be greater.\",\n        },\n        range: {\n          leftLabel: \"From\",\n          rightLabel: \"To\",\n        },\n      },\n      datetime: {\n        dateLabel: \"Date\",\n        datePlaceholder: \"Select Date\",\n        timeLabel: \"Time\",\n        timePlaceholder: \"Select Time\",\n        startDateLabel: \"Start Date\",\n        startDatePlaceholder: \"Select Start Date\",\n        startTimeLabel: \"Start Time\",\n        startTimePlaceholder: \"Select Start Time\",\n        endDateLabel: \"End Date\",\n        endDatePlaceholder: \"Select End Date\",\n        endTimeLabel: \"End Time\",\n        endTimePlaceholder: \"Select End Time\",\n        validation: {\n          required: \"The value is required.\",\n          invalidInterval:\n            \"End date and time must be after start date and time.\",\n        },\n      },\n    },\n    delete: {\n      ariaLabel: \"Remove condition\",\n      tooltip: \"Remove condition\",\n      dialogTitle: \"Remove condition?\",\n      dialogMessage:\n        \"Are you sure you want to remove the condition? It will be removed permanently.\",\n      dialogConfirm: \"Yes\",\n      dialogCancel: \"No\",\n      dialogCloseTooltip: \"Close\",\n    },\n  },\n  group: {\n    delete: {\n      ariaLabel: \"Remove group\",\n      tooltip: \"Remove group\",\n      dialogTitle: \"Remove group?\",\n      dialogMessage:\n        \"Are you sure you want to remove the group? It will be removed permanently.\",\n      dialogConfirm: \"Yes\",\n      dialogCancel: \"No\",\n      dialogCloseTooltip: \"Close\",\n    },\n    reset: {\n      ariaLabel: \"Change operator\",\n      tooltip: \"Change operator query\",\n      dialogTitle: \"Change conditional operator?\",\n      dialogMessage:\n        \"Do you want to change conditional operator? You won't be able to undo this operation. Conditions and/or groups will be removed.\",\n      dialogConfirm: \"Yes\",\n      dialogCancel: \"No\",\n      dialogCloseTooltip: \"Close\",\n    },\n    addRule: {\n      label: \"Add condition\",\n    },\n    addGroup: {\n      label: \"Add group\",\n    },\n  },\n  empty: {\n    title: \"No conditions created yet\",\n    createCondition: \"Create a condition\",\n    createGroup: \"condition group\",\n    spacer: \" or a \",\n  },\n};\n\nexport interface HvQueryBuilderContextValue {\n  dispatchAction: React.Dispatch<QueryAction>;\n  askAction: React.Dispatch<React.SetStateAction<AskAction | undefined>>;\n  selectLocation?: React.Dispatch<unknown>; // TODO - remove in v6 (not used)\n  attributes?: Record<string, HvQueryBuilderAttribute>;\n  operators: Record<string, HvQueryBuilderQueryOperator[]>;\n  combinators: HvQueryBuilderQueryCombinator[];\n  maxDepth: number;\n  labels: HvQueryBuilderLabels;\n  initialTouched: boolean;\n  readOnly: boolean;\n  disableConfirmation: boolean;\n  allowRepeatedAttributes?: boolean;\n  renderers?: HvQueryBuilderRenderers;\n  emptyRenderer?: string[];\n}\n\nexport const HvQueryBuilderContext = createContext<HvQueryBuilderContextValue>({\n  dispatchAction: () => ({}),\n  askAction: () => ({}),\n  selectLocation: () => ({}), // TODO - remove in v6 (not used)\n  attributes: {},\n  operators: defaultOperators,\n  combinators: defaultCombinators,\n  maxDepth: 1,\n  labels: defaultLabels,\n  initialTouched: false,\n  disableConfirmation: false,\n  allowRepeatedAttributes: false,\n  readOnly: false,\n});\n\nexport interface HvQueryBuilderProviderProps {\n  value: HvQueryBuilderContextValue;\n  children: React.ReactNode;\n}\n\nexport const HvQueryBuilderProvider = ({\n  children,\n  value,\n}: HvQueryBuilderProviderProps) => {\n  return (\n    <HvQueryBuilderContext.Provider value={value}>\n      {children}\n    </HvQueryBuilderContext.Provider>\n  );\n};\n\nexport const useQueryBuilderContext = () => {\n  return useContext(HvQueryBuilderContext);\n};\n"],"names":[],"mappings":"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"}