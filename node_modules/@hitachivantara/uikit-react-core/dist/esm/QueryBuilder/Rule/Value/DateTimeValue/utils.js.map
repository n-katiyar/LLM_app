{"version":3,"file":"utils.js","sources":["../../../../../../src/QueryBuilder/Rule/Value/DateTimeValue/utils.tsx"],"sourcesContent":["import dayjs from \"dayjs\";\n\n/**\n * Pads the unit time values so that they always have two digits\n * @param {Number} value - unit time value\n * @returns The unit time value with two digits\n */\nexport const padTime = (value: number) => {\n  if (!value || value < 0) {\n    return \"00\";\n  }\n  if (value < 10 && value.toString().length === 1) {\n    return `0${value.toString()}`;\n  }\n\n  return value.toString();\n};\n\nexport const parseDate = (date: string) => {\n  if (date != null) {\n    return dayjs(date).toDate();\n  }\n\n  return undefined;\n};\n\nexport const parseTime = (time: string) => {\n  if (time != null) {\n    const parts = time.split(\":\");\n\n    if (parts.length === 3) {\n      return {\n        hours: Number.parseInt(parts[0], 10),\n        minutes: Number.parseInt(parts[1], 10),\n        seconds: Number.parseInt(parts[2], 10),\n      };\n    }\n  }\n\n  return null;\n};\n"],"names":[],"mappings":";AAOa,MAAA,UAAU,CAAC,UAAkB;AACpC,MAAA,CAAC,SAAS,QAAQ,GAAG;AAChB,WAAA;AAAA,EAAA;AAET,MAAI,QAAQ,MAAM,MAAM,SAAS,EAAE,WAAW,GAAG;AACxC,WAAA,IAAI,MAAM,SAAU,CAAA;AAAA,EAAA;AAG7B,SAAO,MAAM,SAAS;AACxB;AAEa,MAAA,YAAY,CAAC,SAAiB;AACzC,MAAI,QAAQ,MAAM;AACT,WAAA,MAAM,IAAI,EAAE,OAAO;AAAA,EAAA;AAGrB,SAAA;AACT;AAEa,MAAA,YAAY,CAAC,SAAiB;AACzC,MAAI,QAAQ,MAAM;AACV,UAAA,QAAQ,KAAK,MAAM,GAAG;AAExB,QAAA,MAAM,WAAW,GAAG;AACf,aAAA;AAAA,QACL,OAAO,OAAO,SAAS,MAAM,CAAC,GAAG,EAAE;AAAA,QACnC,SAAS,OAAO,SAAS,MAAM,CAAC,GAAG,EAAE;AAAA,QACrC,SAAS,OAAO,SAAS,MAAM,CAAC,GAAG,EAAE;AAAA,MACvC;AAAA,IAAA;AAAA,EACF;AAGK,SAAA;AACT;"}