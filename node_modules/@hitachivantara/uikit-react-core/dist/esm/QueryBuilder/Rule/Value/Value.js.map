{"version":3,"file":"Value.js","sources":["../../../../../src/QueryBuilder/Rule/Value/Value.tsx"],"sourcesContent":["import { memo } from \"react\";\n\nimport { useQueryBuilderContext } from \"../../Context\";\nimport {\n  defaultRendererKey,\n  HvQueryBuilderRendererProps,\n  ValueRenderer,\n} from \"../../types\";\nimport { BooleanValue } from \"./BooleanValue\";\nimport { DateTimeValue } from \"./DateTimeValue\";\nimport { EmptyValue } from \"./EmptyValue\";\nimport { NumericValue } from \"./NumericValue\";\nimport { TextValue } from \"./TextValue\";\n\nexport interface ValueProps {\n  id: React.Key;\n  attribute: string;\n  operator?: string;\n  value?: any;\n}\n\nconst getRenderer = (renderer: ValueRenderer, operator?: string) =>\n  // 1. Custom renderer\n  (typeof renderer === \"function\" && renderer) ||\n  // 2. Custom operator renderer\n  (typeof renderer === \"object\" && operator && renderer[operator]) ||\n  // 3. Custom DEFAULT renderer\n  (typeof renderer === \"object\" && renderer[defaultRendererKey]);\n\nexport const Value = ({\n  id,\n  attribute,\n  operator,\n  value: valueProp,\n}: ValueProps) => {\n  const { attributes, initialTouched, renderers, emptyRenderer } =\n    useQueryBuilderContext();\n\n  const attrType = attributes?.[attribute]?.type;\n\n  // Empty value renderer\n  if (emptyRenderer?.find((op) => op === operator)) {\n    return <EmptyValue id={id} />;\n  }\n\n  // Custom renderer\n  if (attrType && renderers?.[attrType]) {\n    // Renderer to be used by order:\n    // 1. Custom attribute renderer\n    // 2. Custom attribute-operator renderer\n    // 3. Custom attribute-DEFAULT renderer\n    // 4. Custom master DEFAULT renderer\n    // 5. Custom master DEFAULT-operator renderer\n    // 6. Custom master DEFAULT-DEFAULT renderer\n    const Renderer: React.FC<HvQueryBuilderRendererProps> | undefined =\n      getRenderer(renderers[attrType], operator) ||\n      getRenderer(renderers[defaultRendererKey], operator) ||\n      undefined;\n\n    if (Renderer) {\n      return (\n        <Renderer\n          id={id}\n          attribute={attribute}\n          operator={operator}\n          value={valueProp}\n        />\n      );\n    }\n  }\n\n  // Built-in attributes\n  switch (attrType) {\n    case \"boolean\": {\n      return <BooleanValue id={id} value={!!valueProp} />;\n    }\n    case \"numeric\": {\n      return (\n        <NumericValue\n          id={id}\n          operator={operator}\n          value={valueProp}\n          initialTouched={initialTouched}\n        />\n      );\n    }\n    case \"dateandtime\": {\n      return (\n        <DateTimeValue\n          id={id}\n          operator={operator}\n          value={valueProp}\n          initialTouched={initialTouched}\n        />\n      );\n    }\n    case \"text\":\n    case \"textarea\":\n    default:\n      return (\n        <TextValue id={id} value={valueProp} initialTouched={initialTouched} />\n      );\n  }\n};\n\nexport default memo(Value);\n"],"names":[],"mappings":";;;;;;;;;AAqBA,MAAM,cAAc,CAAC,UAAyB;AAAA;AAAA,EAE3C,OAAO,aAAa,cAAc;AAAA,EAElC,OAAO,aAAa,YAAY,YAAY,SAAS,QAAQ;AAAA,EAE7D,OAAO,aAAa,YAAY,SAAS,kBAAkB;AAAA;AAEvD,MAAM,QAAQ,CAAC;AAAA,EACpB;AAAA,EACA;AAAA,EACA;AAAA,EACA,OAAO;AACT,MAAkB;AAChB,QAAM,EAAE,YAAY,gBAAgB,WAAW,cAAA,IAC7C,uBAAuB;AAEnB,QAAA,WAAW,aAAa,SAAS,GAAG;AAG1C,MAAI,eAAe,KAAK,CAAC,OAAO,OAAO,QAAQ,GAAG;AACzC,WAAA,oBAAC,cAAW,IAAQ;AAAA,EAAA;AAIzB,MAAA,YAAY,YAAY,QAAQ,GAAG;AAQrC,UAAM,WACJ,YAAY,UAAU,QAAQ,GAAG,QAAQ,KACzC,YAAY,UAAU,kBAAkB,GAAG,QAAQ,KACnD;AAEF,QAAI,UAAU;AAEV,aAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC;AAAA,UACA;AAAA,UACA;AAAA,UACA,OAAO;AAAA,QAAA;AAAA,MACT;AAAA,IAAA;AAAA,EAEJ;AAIF,UAAQ,UAAU;AAAA,IAChB,KAAK,WAAW;AACd,iCAAQ,cAAa,EAAA,IAAQ,OAAO,CAAC,CAAC,WAAW;AAAA,IAAA;AAAA,IAEnD,KAAK,WAAW;AAEZ,aAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC;AAAA,UACA;AAAA,UACA,OAAO;AAAA,UACP;AAAA,QAAA;AAAA,MACF;AAAA,IAAA;AAAA,IAGJ,KAAK,eAAe;AAEhB,aAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC;AAAA,UACA;AAAA,UACA,OAAO;AAAA,UACP;AAAA,QAAA;AAAA,MACF;AAAA,IAAA;AAAA,IAGJ,KAAK;AAAA,IACL,KAAK;AAAA,IACL;AACE,aACG,oBAAA,WAAA,EAAU,IAAQ,OAAO,WAAW,gBAAgC;AAAA,EAAA;AAG7E;AAEe,KAAK,KAAK;"}