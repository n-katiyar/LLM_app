{"version":3,"file":"Operator.js","sources":["../../../../../src/QueryBuilder/Rule/Operator/Operator.tsx"],"sourcesContent":["import { memo, useMemo } from \"react\";\n\nimport { HvDropdown } from \"../../../Dropdown\";\nimport { useQueryBuilderContext } from \"../../Context\";\nimport { isBigList } from \"../../utils\";\n\nexport interface OperatorProps {\n  id: React.Key;\n  combinator: string;\n  attribute: string;\n  operator?: string;\n}\n\nexport const Operator = ({\n  id,\n  combinator,\n  attribute,\n  operator,\n}: OperatorProps) => {\n  const { dispatchAction, attributes, operators, labels, readOnly } =\n    useQueryBuilderContext();\n\n  const value = operator ?? null;\n\n  const values = useMemo(() => {\n    const attributeSpec =\n      attribute && attributes ? attributes[attribute] : null;\n    const options = attributeSpec\n      ? (operators[attributeSpec.type].filter((o) =>\n          o.combinators.includes(combinator),\n        ) ?? [])\n      : [];\n    return options.map((key) => ({\n      id: key.operator,\n      label: key.label,\n      selected: key.operator === value,\n    }));\n  }, [attribute, attributes, operators, combinator, value]);\n\n  return (\n    <HvDropdown\n      required\n      status=\"valid\"\n      singleSelectionToggle={false}\n      label={labels.rule.operator.label}\n      placeholder={labels.rule.operator.placeholder}\n      values={values}\n      disabled={values.length === 0}\n      readOnly={readOnly}\n      onChange={(selected) => {\n        if (selected?.id) {\n          dispatchAction({\n            type: \"set-operator\",\n            id,\n            operator: selected.id.toString(),\n            value:\n              value === \"range\" || selected.id === \"range\" ? null : undefined,\n          });\n        } else {\n          dispatchAction({\n            type: \"set-operator\",\n            id,\n            operator: null,\n            value: null,\n          });\n        }\n      }}\n      showSearch={isBigList(values)}\n      {...(isBigList(values) && { virtualized: true, height: 300 })}\n    />\n  );\n};\n\nexport default memo(Operator);\n"],"names":[],"mappings":";;;;;AAaO,MAAM,WAAW,CAAC;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAqB;AACnB,QAAM,EAAE,gBAAgB,YAAY,WAAW,QAAQ,aACrD,uBAAuB;AAEzB,QAAM,QAAQ,YAAY;AAEpB,QAAA,SAAS,QAAQ,MAAM;AAC3B,UAAM,gBACJ,aAAa,aAAa,WAAW,SAAS,IAAI;AACpD,UAAM,UAAU,gBACX,UAAU,cAAc,IAAI,EAAE;AAAA,MAAO,CAAC,MACrC,EAAE,YAAY,SAAS,UAAU;AAAA,IACnC,KAAK,CAAC,IACN,CAAC;AACE,WAAA,QAAQ,IAAI,CAAC,SAAS;AAAA,MAC3B,IAAI,IAAI;AAAA,MACR,OAAO,IAAI;AAAA,MACX,UAAU,IAAI,aAAa;AAAA,IAAA,EAC3B;AAAA,EAAA,GACD,CAAC,WAAW,YAAY,WAAW,YAAY,KAAK,CAAC;AAGtD,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,UAAQ;AAAA,MACR,QAAO;AAAA,MACP,uBAAuB;AAAA,MACvB,OAAO,OAAO,KAAK,SAAS;AAAA,MAC5B,aAAa,OAAO,KAAK,SAAS;AAAA,MAClC;AAAA,MACA,UAAU,OAAO,WAAW;AAAA,MAC5B;AAAA,MACA,UAAU,CAAC,aAAa;AACtB,YAAI,UAAU,IAAI;AACD,yBAAA;AAAA,YACb,MAAM;AAAA,YACN;AAAA,YACA,UAAU,SAAS,GAAG,SAAS;AAAA,YAC/B,OACE,UAAU,WAAW,SAAS,OAAO,UAAU,OAAO;AAAA,UAAA,CACzD;AAAA,QAAA,OACI;AACU,yBAAA;AAAA,YACb,MAAM;AAAA,YACN;AAAA,YACA,UAAU;AAAA,YACV,OAAO;AAAA,UAAA,CACR;AAAA,QAAA;AAAA,MAEL;AAAA,MACA,YAAY,UAAU,MAAM;AAAA,MAC3B,GAAI,UAAU,MAAM,KAAK,EAAE,aAAa,MAAM,QAAQ,IAAI;AAAA,IAAA;AAAA,EAC7D;AAEJ;AAEe,KAAK,QAAQ;"}