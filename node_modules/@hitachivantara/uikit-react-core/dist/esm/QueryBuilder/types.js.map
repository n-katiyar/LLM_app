{"version":3,"file":"types.js","sources":["../../../src/QueryBuilder/types.ts"],"sourcesContent":["import { HvOptional } from \"../types/generic\";\n\nexport const defaultRendererKey = \"DEFAULT\";\n\nconst defaultAttributes = [\n  \"boolean\",\n  \"numeric\",\n  \"dateandtime\",\n  \"text\",\n  \"textarea\",\n] as const;\ntype DefaultAttributes = (typeof defaultAttributes)[number];\n\nexport interface HvQueryBuilderAttribute extends Record<string, unknown> {\n  id?: string;\n  label: string;\n  type: DefaultAttributes | (string & {});\n}\n\nexport interface HvQueryBuilderNumericRange {\n  from: number | string;\n  to: number | string;\n}\n\nexport interface HvQueryBuilderDateTimeStrings {\n  date?: string;\n  time?: string;\n}\n\nexport interface HvQueryBuilderDateTimeRange {\n  start?: HvQueryBuilderDateTimeStrings;\n  end?: HvQueryBuilderDateTimeStrings;\n}\n\nexport type HvQueryBuilderQueryRuleValue =\n  | string\n  | number\n  | boolean\n  | HvQueryBuilderNumericRange\n  | HvQueryBuilderDateTimeStrings\n  | HvQueryBuilderDateTimeRange;\n\nexport type HvQueryBuilderQueryRule = HvOptional<QueryRule, \"id\">;\n\nexport interface HvQueryBuilderQueryGroup\n  extends Omit<HvOptional<QueryGroup, \"id\">, \"rules\"> {\n  rules: Array<HvQueryBuilderQueryRule | HvQueryBuilderQueryGroup>;\n}\n\nexport type HvQueryBuilderQuery = HvQueryBuilderQueryGroup;\n\nexport interface QueryRule {\n  id: React.Key;\n  attribute?: string;\n  operator?: string;\n  value?: HvQueryBuilderQueryRuleValue;\n}\n\nexport interface QueryGroup {\n  id: React.Key;\n  combinator: string;\n  rules: Array<QueryRule | QueryGroup>;\n}\n\nexport type Query = QueryGroup;\n\n// TODO - remove this type in v6\n/** @deprecated */\nexport interface HvQueryBuilderChangedQuery\n  extends Omit<HvQueryBuilderQuery, \"id\" | \"rules\"> {\n  rules: Array<\n    Omit<HvQueryBuilderQueryRule, \"id\"> | HvQueryBuilderChangedQuery\n  >;\n}\n\nexport interface HvQueryBuilderQueryCombinator {\n  operand: string;\n  label: string;\n}\n\nexport interface HvQueryBuilderQueryOperator {\n  operator: string;\n  label: string;\n  combinators: string[];\n}\n\ninterface DialogLabels {\n  dialogTitle: string;\n  dialogMessage: string;\n  dialogConfirm: string;\n  dialogCancel: string;\n  dialogCloseTooltip: string;\n}\n\n/** @private label structure action icon buttons */\ninterface ActionIconLabels extends DialogLabels {\n  // TODO: remove in v6 - duplicated labels - `tooltip` *is* the aria-label\n  /** @deprecated use `tooltip` label instead */\n  ariaLabel: string;\n  tooltip?: string;\n}\n\nexport type QueryAction =\n  | {\n      type: \"reset-query\";\n    }\n  | {\n      type: \"reset-group\";\n      id: React.Key;\n    }\n  | {\n      type: \"add-rule\" | \"add-group\" | \"remove-node\";\n      id: React.Key;\n    }\n  | {\n      type: \"set-combinator\";\n      id: React.Key;\n      combinator: string;\n    }\n  | {\n      type: \"set-attribute\";\n      id: React.Key;\n      attribute?: string | null;\n      operator?: string | null;\n      value?: HvQueryBuilderQueryRuleValue | null;\n    }\n  | {\n      type: \"set-operator\";\n      id: React.Key;\n      operator: string | null;\n      value?: HvQueryBuilderQueryRuleValue | null;\n    }\n  | {\n      type: \"set-value\";\n      id: React.Key;\n      value: HvQueryBuilderQueryRuleValue | null | any;\n    }\n  | {\n      type: \"set-query\";\n      // Query with ids\n      query: Query;\n    };\n\nexport interface AskAction {\n  actions: QueryAction[];\n  dialog: DialogLabels;\n}\n\n// TODO - Infer type from defaultLabels object and flatten the object to remove all the nesting in v6\nexport interface HvQueryBuilderLabels {\n  query?: {\n    delete?: ActionIconLabels;\n    addRule?: {\n      label: string;\n    };\n    addGroup?: {\n      label: string;\n    };\n  };\n  rule: {\n    attribute: {\n      exists: string;\n      label: string;\n      placeholder: string;\n    };\n    operator: {\n      label: string;\n      placeholder: string;\n    };\n    value: {\n      distance: {\n        label: string;\n        placeholder?: string;\n        connectorText: string;\n        button: string;\n        validation: {\n          required: string;\n          invalid: string;\n        };\n      };\n      text: {\n        label: string;\n        placeholder: string;\n        validation: {\n          required: string;\n        };\n      };\n      boolean: {\n        label: string;\n        placeholder: string;\n        options: Record<string, string>;\n      };\n      numeric: {\n        label: string;\n        placeholder: string;\n        validation: {\n          required: string;\n          invalid: string;\n          equal: string;\n          greaterThan: string;\n        };\n        range: {\n          leftLabel: string;\n          rightLabel: string;\n        };\n      };\n      datetime: {\n        dateLabel: string;\n        datePlaceholder: string;\n        timeLabel: string;\n        timePlaceholder: string;\n        startDateLabel: string;\n        startDatePlaceholder: string;\n        startTimeLabel: string;\n        startTimePlaceholder: string;\n        endDateLabel: string;\n        endDatePlaceholder: string;\n        endTimeLabel: string;\n        endTimePlaceholder: string;\n        validation: {\n          required: string;\n          invalidInterval: string;\n        };\n      };\n    };\n    delete: ActionIconLabels;\n  };\n  group: {\n    delete: ActionIconLabels;\n    reset: ActionIconLabels;\n    addRule: {\n      label: string;\n    };\n    addGroup: {\n      label: string;\n    };\n  };\n  empty: {\n    title: string;\n    createCondition: string;\n    createGroup: string;\n    spacer: string;\n  };\n}\n\nexport interface HvQueryBuilderRendererProps<V = any> {\n  id: React.Key;\n  attribute: string;\n  operator?: string;\n  value?: V;\n}\n\nexport type ValueRenderer =\n  | React.FC<HvQueryBuilderRendererProps>\n  | Record<string, React.FC<HvQueryBuilderRendererProps>>;\n\nexport type HvQueryBuilderRenderers = Record<string, ValueRenderer>;\n"],"names":[],"mappings":"AAEO,MAAM,qBAAqB;"}