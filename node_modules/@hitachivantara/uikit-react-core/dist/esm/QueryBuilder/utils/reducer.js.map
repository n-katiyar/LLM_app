{"version":3,"file":"reducer.js","sources":["../../../../src/QueryBuilder/utils/reducer.tsx"],"sourcesContent":["import { Reducer } from \"react\";\n\nimport { HvQueryBuilderQueryRule, Query, QueryAction } from \"../types\";\nimport { emptyGroup, emptyRule, findNodeById, findParentById } from \"./index\";\n\nconst reducer: Reducer<Query, QueryAction> = (state, action) => {\n  const query = structuredClone(state);\n\n  switch (action.type) {\n    case \"reset-query\": {\n      return emptyGroup();\n    }\n    case \"set-query\":\n      return action.query;\n    case \"reset-group\": {\n      const group = findNodeById(action.id, query);\n      if (group && \"rules\" in group) {\n        group.rules = [emptyRule()];\n\n        return query;\n      }\n      break;\n    }\n    case \"add-rule\": {\n      const group = findNodeById(action.id, query);\n      if (group && \"rules\" in group) {\n        const rule = emptyRule();\n\n        group.rules.push(rule);\n\n        return query;\n      }\n      break;\n    }\n    case \"add-group\": {\n      const group = findNodeById(action.id, query);\n      if (group && \"rules\" in group) {\n        group.rules.push(emptyGroup(true));\n\n        return query;\n      }\n      break;\n    }\n    case \"remove-node\": {\n      const parent = findParentById(action.id, query);\n      if (parent) {\n        parent.rules = parent.rules.filter((rule) => rule.id !== action.id);\n\n        return query;\n      }\n\n      // reset query if deleting top node\n      return emptyGroup();\n    }\n    case \"set-combinator\": {\n      const node = findNodeById(action.id, query);\n      if (node && \"combinator\" in node) {\n        if (node.combinator !== action.combinator) {\n          node.combinator = action.combinator;\n\n          return query;\n        }\n      }\n      break;\n    }\n    case \"set-attribute\": {\n      const node = findNodeById(action.id, query) as HvQueryBuilderQueryRule;\n      if (node && node.attribute !== action.attribute) {\n        node.attribute = action.attribute ?? undefined;\n\n        // we keep the operator and value unless the operator is explicitly null (or set)\n        if (action.operator !== undefined) {\n          node.operator = action.operator ?? undefined;\n          node.value = action.value ?? undefined;\n        }\n\n        return query;\n      }\n      break;\n    }\n    case \"set-operator\": {\n      const node = findNodeById(action.id, query);\n      if (node && \"attribute\" in node) {\n        if (node.operator !== action.operator) {\n          // @ts-ignore\n          node.operator = action.operator;\n          if (action.value !== undefined) {\n            node.value = action.value ?? undefined;\n          }\n\n          return query;\n        }\n      }\n      break;\n    }\n    case \"set-value\": {\n      const node = findNodeById(action.id, query);\n      if (node && \"operator\" in node) {\n        // Making sure we are not adding \"value: undefined\" to the object when value wasn't even set (because of EmptyValue)\n        // Without this we can trigger onChange\n        if (\"value\" in node) {\n          node.value = action.value ?? undefined;\n        }\n\n        return query;\n      }\n      break;\n    }\n\n    default:\n  }\n\n  // Return existing state if nothing changed\n  return query;\n};\n\nexport default reducer;\n"],"names":[],"mappings":";AAKM,MAAA,UAAuC,CAAC,OAAO,WAAW;AACxD,QAAA,QAAQ,gBAAgB,KAAK;AAEnC,UAAQ,OAAO,MAAM;AAAA,IACnB,KAAK,eAAe;AAClB,aAAO,WAAW;AAAA,IAAA;AAAA,IAEpB,KAAK;AACH,aAAO,OAAO;AAAA,IAChB,KAAK,eAAe;AAClB,YAAM,QAAQ,aAAa,OAAO,IAAI,KAAK;AACvC,UAAA,SAAS,WAAW,OAAO;AACvB,cAAA,QAAQ,CAAC,WAAW;AAEnB,eAAA;AAAA,MAAA;AAET;AAAA,IAAA;AAAA,IAEF,KAAK,YAAY;AACf,YAAM,QAAQ,aAAa,OAAO,IAAI,KAAK;AACvC,UAAA,SAAS,WAAW,OAAO;AAC7B,cAAM,OAAO,UAAU;AAEjB,cAAA,MAAM,KAAK,IAAI;AAEd,eAAA;AAAA,MAAA;AAET;AAAA,IAAA;AAAA,IAEF,KAAK,aAAa;AAChB,YAAM,QAAQ,aAAa,OAAO,IAAI,KAAK;AACvC,UAAA,SAAS,WAAW,OAAO;AAC7B,cAAM,MAAM,KAAK,WAAW,IAAI,CAAC;AAE1B,eAAA;AAAA,MAAA;AAET;AAAA,IAAA;AAAA,IAEF,KAAK,eAAe;AAClB,YAAM,SAAS,eAAe,OAAO,IAAI,KAAK;AAC9C,UAAI,QAAQ;AACH,eAAA,QAAQ,OAAO,MAAM,OAAO,CAAC,SAAS,KAAK,OAAO,OAAO,EAAE;AAE3D,eAAA;AAAA,MAAA;AAIT,aAAO,WAAW;AAAA,IAAA;AAAA,IAEpB,KAAK,kBAAkB;AACrB,YAAM,OAAO,aAAa,OAAO,IAAI,KAAK;AACtC,UAAA,QAAQ,gBAAgB,MAAM;AAC5B,YAAA,KAAK,eAAe,OAAO,YAAY;AACzC,eAAK,aAAa,OAAO;AAElB,iBAAA;AAAA,QAAA;AAAA,MACT;AAEF;AAAA,IAAA;AAAA,IAEF,KAAK,iBAAiB;AACpB,YAAM,OAAO,aAAa,OAAO,IAAI,KAAK;AAC1C,UAAI,QAAQ,KAAK,cAAc,OAAO,WAAW;AAC1C,aAAA,YAAY,OAAO,aAAa;AAGjC,YAAA,OAAO,aAAa,QAAW;AAC5B,eAAA,WAAW,OAAO,YAAY;AAC9B,eAAA,QAAQ,OAAO,SAAS;AAAA,QAAA;AAGxB,eAAA;AAAA,MAAA;AAET;AAAA,IAAA;AAAA,IAEF,KAAK,gBAAgB;AACnB,YAAM,OAAO,aAAa,OAAO,IAAI,KAAK;AACtC,UAAA,QAAQ,eAAe,MAAM;AAC3B,YAAA,KAAK,aAAa,OAAO,UAAU;AAErC,eAAK,WAAW,OAAO;AACnB,cAAA,OAAO,UAAU,QAAW;AACzB,iBAAA,QAAQ,OAAO,SAAS;AAAA,UAAA;AAGxB,iBAAA;AAAA,QAAA;AAAA,MACT;AAEF;AAAA,IAAA;AAAA,IAEF,KAAK,aAAa;AAChB,YAAM,OAAO,aAAa,OAAO,IAAI,KAAK;AACtC,UAAA,QAAQ,cAAc,MAAM;AAG9B,YAAI,WAAW,MAAM;AACd,eAAA,QAAQ,OAAO,SAAS;AAAA,QAAA;AAGxB,eAAA;AAAA,MAAA;AAET;AAAA,IAAA;AAAA,EAGF;AAIK,SAAA;AACT;"}