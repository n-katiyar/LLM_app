{"version":3,"file":"index.js","sources":["../../../../src/QueryBuilder/utils/index.tsx"],"sourcesContent":["import { isEqual, uniqueId } from \"../../utils/helpers\";\nimport {\n  HvQueryBuilderQueryGroup,\n  HvQueryBuilderQueryRule,\n  Query,\n} from \"../types\";\n\nexport const isBigList = (values: unknown[]) =>\n  values != null && values?.length > 10;\n\nconst ID_PREFIX = \"@hv_\";\nconst createId = () => uniqueId(ID_PREFIX);\n\nexport const emptyRule = () => ({\n  id: createId(),\n});\n\nexport const emptyGroup = (createEmptyRule = false) => ({\n  id: createId(),\n  combinator: \"and\",\n  rules: createEmptyRule ? [emptyRule()] : [],\n});\n\nexport const clearNodeIds = (\n  original: HvQueryBuilderQueryGroup | HvQueryBuilderQueryRule,\n  full = false,\n) => {\n  const rule = { ...original };\n\n  if ((!full && rule.id?.toString().startsWith(ID_PREFIX)) || full) {\n    delete rule.id;\n  }\n\n  if (\"rules\" in rule) {\n    rule.rules = rule.rules.map((r) => clearNodeIds(r, full));\n  }\n\n  return rule;\n};\n\nconst isQueryGroup = (\n  value: HvQueryBuilderQueryGroup | HvQueryBuilderQueryRule,\n): value is HvQueryBuilderQueryGroup => \"rules\" in value;\n\nexport const setNodeIds = (\n  query: HvQueryBuilderQueryGroup | HvQueryBuilderQueryRule,\n  prevQuery?: HvQueryBuilderQueryGroup | HvQueryBuilderQueryRule,\n): Query => {\n  // Use already existing autogenerated id when possible\n  if (!query.id) {\n    query.id =\n      prevQuery?.id &&\n      isEqual(\n        clearNodeIds(structuredClone(query)),\n        clearNodeIds(structuredClone(prevQuery)),\n      )\n        ? prevQuery.id\n        : createId();\n  }\n\n  if (isQueryGroup(query)) {\n    query.rules = query.rules.map((item, idx) =>\n      setNodeIds(\n        item,\n        prevQuery && isQueryGroup(prevQuery) ? prevQuery.rules[idx] : undefined,\n      ),\n    );\n  }\n\n  return query as Query;\n};\n\nexport const findNodeById = (\n  id: React.Key,\n  node: HvQueryBuilderQueryGroup | HvQueryBuilderQueryRule,\n): HvQueryBuilderQueryGroup | HvQueryBuilderQueryRule | null => {\n  if (node.id === id) {\n    return node;\n  }\n  if (\"rules\" in node) {\n    for (let i = 0; i < node.rules.length; ++i) {\n      const rule = node.rules[i];\n\n      const found = findNodeById(id, rule);\n      if (found) {\n        return found;\n      }\n    }\n  }\n\n  return null;\n};\n\nexport const findParentById = (\n  id: React.Key,\n  node: HvQueryBuilderQueryGroup | HvQueryBuilderQueryRule,\n  parent?: HvQueryBuilderQueryGroup,\n): HvQueryBuilderQueryGroup | null => {\n  if (node.id === id) {\n    return parent ?? null;\n  }\n\n  if (\"rules\" in node) {\n    const group = node;\n\n    for (let i = 0; i < group.rules.length; ++i) {\n      const rule = group.rules[i];\n\n      const found = findParentById(id, rule, group);\n      if (found) {\n        return found;\n      }\n    }\n  }\n\n  return null;\n};\n"],"names":[],"mappings":";AAOO,MAAM,YAAY,CAAC,WACxB,UAAU,QAAQ,QAAQ,SAAS;AAErC,MAAM,YAAY;AAClB,MAAM,WAAW,MAAM,SAAS,SAAS;AAElC,MAAM,YAAY,OAAO;AAAA,EAC9B,IAAI,SAAS;AACf;AAEa,MAAA,aAAa,CAAC,kBAAkB,WAAW;AAAA,EACtD,IAAI,SAAS;AAAA,EACb,YAAY;AAAA,EACZ,OAAO,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAA;AAC3C;AAEO,MAAM,eAAe,CAC1B,UACA,OAAO,UACJ;AACG,QAAA,OAAO,EAAE,GAAG,SAAS;AAEtB,MAAA,CAAC,QAAQ,KAAK,IAAI,WAAW,WAAW,SAAS,KAAM,MAAM;AAChE,WAAO,KAAK;AAAA,EAAA;AAGd,MAAI,WAAW,MAAM;AACd,SAAA,QAAQ,KAAK,MAAM,IAAI,CAAC,MAAM,aAAa,GAAG,IAAI,CAAC;AAAA,EAAA;AAGnD,SAAA;AACT;AAEA,MAAM,eAAe,CACnB,UACsC,WAAW;AAEtC,MAAA,aAAa,CACxB,OACA,cACU;AAEN,MAAA,CAAC,MAAM,IAAI;AACP,UAAA,KACJ,WAAW,MACX;AAAA,MACE,aAAa,gBAAgB,KAAK,CAAC;AAAA,MACnC,aAAa,gBAAgB,SAAS,CAAC;AAAA,IAAA,IAErC,UAAU,KACV,SAAS;AAAA,EAAA;AAGb,MAAA,aAAa,KAAK,GAAG;AACjB,UAAA,QAAQ,MAAM,MAAM;AAAA,MAAI,CAAC,MAAM,QACnC;AAAA,QACE;AAAA,QACA,aAAa,aAAa,SAAS,IAAI,UAAU,MAAM,GAAG,IAAI;AAAA,MAAA;AAAA,IAElE;AAAA,EAAA;AAGK,SAAA;AACT;AAEa,MAAA,eAAe,CAC1B,IACA,SAC8D;AAC1D,MAAA,KAAK,OAAO,IAAI;AACX,WAAA;AAAA,EAAA;AAET,MAAI,WAAW,MAAM;AACnB,aAAS,IAAI,GAAG,IAAI,KAAK,MAAM,QAAQ,EAAE,GAAG;AACpC,YAAA,OAAO,KAAK,MAAM,CAAC;AAEnB,YAAA,QAAQ,aAAa,IAAI,IAAI;AACnC,UAAI,OAAO;AACF,eAAA;AAAA,MAAA;AAAA,IACT;AAAA,EACF;AAGK,SAAA;AACT;AAEO,MAAM,iBAAiB,CAC5B,IACA,MACA,WACoC;AAChC,MAAA,KAAK,OAAO,IAAI;AAClB,WAAO,UAAU;AAAA,EAAA;AAGnB,MAAI,WAAW,MAAM;AACnB,UAAM,QAAQ;AAEd,aAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,EAAE,GAAG;AACrC,YAAA,OAAO,MAAM,MAAM,CAAC;AAE1B,YAAM,QAAQ,eAAe,IAAI,MAAM,KAAK;AAC5C,UAAI,OAAO;AACF,eAAA;AAAA,MAAA;AAAA,IACT;AAAA,EACF;AAGK,SAAA;AACT;"}