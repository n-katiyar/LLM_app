{"version":3,"file":"GlobalActions.styles.js","sources":["../../../src/GlobalActions/GlobalActions.styles.tsx"],"sourcesContent":["import type { CSSInterpolation } from \"@emotion/serialize\";\nimport { createClasses } from \"@hitachivantara/uikit-react-utils\";\nimport { theme } from \"@hitachivantara/uikit-styles\";\n\nexport const { staticClasses, useClasses } = createClasses(\"HvGlobalActions\", {\n  root: {\n    position: \"relative\",\n  },\n  positionSticky: {\n    width: \"100%\",\n    position: \"sticky\",\n  },\n  positionFixed: {\n    width: \"100%\",\n    position: \"fixed\",\n  },\n  global: {\n    zIndex: `calc(${theme.zIndices.banner} - 2)`,\n    top: 0,\n    left: 0,\n    padding: theme.spacing(1, 0),\n    backdropFilter: \"blur(1px)\",\n\n    \"&:before\": {\n      content: \"''\",\n      display: \"flex\",\n      position: \"absolute\",\n      inset: 0,\n      background: theme.colors.atmo2,\n      opacity: \"75%\",\n    },\n\n    \"& $wrapper\": {\n      top: 0,\n      left: 0,\n      backgroundColor: theme.colors.atmo1,\n      width: \"100%\",\n      borderWidth: 1,\n      borderRadius: theme.radii.round,\n    },\n  },\n  section: {\n    \"& $wrapper\": {\n      borderTopWidth: 1,\n      paddingLeft: 0,\n    },\n  },\n  wrapper: {\n    padding: theme.space.xs,\n    position: \"relative\",\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    gap: theme.space.xs,\n    borderColor: theme.colors.atmo4,\n    paddingLeft: theme.space.sm,\n  },\n\n  /** @deprecated use classes.global $wrapper */\n  globalSectionArea: {},\n  /** @deprecated use classes.section $wrapper */\n  globalWrapperComplement: {},\n  backButton: {},\n  name: {\n    flexGrow: 1,\n  },\n  /** @deprecated use classes.name */\n  sectionName: {},\n  actions: {\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: theme.space.xs,\n    // TODO: remove in v6 in favour of consistently setting `flexGrow: 1` in a title \"wrapper\"\n    marginLeft: \"auto\",\n  },\n});\n\nexport const getBreakpointStyles = (\n  isUpMd: boolean,\n  isSmDown: boolean,\n): CSSInterpolation => {\n  const unit = isUpMd ? 4 : isSmDown ? 2 : 0;\n  if (!unit) return {};\n\n  return {\n    width: `calc(100% - 2 * ${theme.spacing(unit)})`,\n    marginLeft: theme.spacing(unit),\n    marginRight: theme.spacing(unit),\n  };\n};\n"],"names":[],"mappings":";;AAIO,MAAM,EAAE,eAAe,eAAe,cAAc,mBAAmB;AAAA,EAC5E,MAAM;AAAA,IACJ,UAAU;AAAA,EACZ;AAAA,EACA,gBAAgB;AAAA,IACd,OAAO;AAAA,IACP,UAAU;AAAA,EACZ;AAAA,EACA,eAAe;AAAA,IACb,OAAO;AAAA,IACP,UAAU;AAAA,EACZ;AAAA,EACA,QAAQ;AAAA,IACN,QAAQ,QAAQ,MAAM,SAAS,MAAM;AAAA,IACrC,KAAK;AAAA,IACL,MAAM;AAAA,IACN,SAAS,MAAM,QAAQ,GAAG,CAAC;AAAA,IAC3B,gBAAgB;AAAA,IAEhB,YAAY;AAAA,MACV,SAAS;AAAA,MACT,SAAS;AAAA,MACT,UAAU;AAAA,MACV,OAAO;AAAA,MACP,YAAY,MAAM,OAAO;AAAA,MACzB,SAAS;AAAA,IACX;AAAA,IAEA,cAAc;AAAA,MACZ,KAAK;AAAA,MACL,MAAM;AAAA,MACN,iBAAiB,MAAM,OAAO;AAAA,MAC9B,OAAO;AAAA,MACP,aAAa;AAAA,MACb,cAAc,MAAM,MAAM;AAAA,IAAA;AAAA,EAE9B;AAAA,EACA,SAAS;AAAA,IACP,cAAc;AAAA,MACZ,gBAAgB;AAAA,MAChB,aAAa;AAAA,IAAA;AAAA,EAEjB;AAAA,EACA,SAAS;AAAA,IACP,SAAS,MAAM,MAAM;AAAA,IACrB,UAAU;AAAA,IACV,SAAS;AAAA,IACT,gBAAgB;AAAA,IAChB,YAAY;AAAA,IACZ,KAAK,MAAM,MAAM;AAAA,IACjB,aAAa,MAAM,OAAO;AAAA,IAC1B,aAAa,MAAM,MAAM;AAAA,EAC3B;AAAA;AAAA,EAGA,mBAAmB,CAAC;AAAA;AAAA,EAEpB,yBAAyB,CAAC;AAAA,EAC1B,YAAY,CAAC;AAAA,EACb,MAAM;AAAA,IACJ,UAAU;AAAA,EACZ;AAAA;AAAA,EAEA,aAAa,CAAC;AAAA,EACd,SAAS;AAAA,IACP,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,KAAK,MAAM,MAAM;AAAA;AAAA,IAEjB,YAAY;AAAA,EAAA;AAEhB,CAAC;AAEY,MAAA,sBAAsB,CACjC,QACA,aACqB;AACrB,QAAM,OAAO,SAAS,IAAI,WAAW,IAAI;AACrC,MAAA,CAAC,KAAM,QAAO,CAAC;AAEZ,SAAA;AAAA,IACL,OAAO,mBAAmB,MAAM,QAAQ,IAAI,CAAC;AAAA,IAC7C,YAAY,MAAM,QAAQ,IAAI;AAAA,IAC9B,aAAa,MAAM,QAAQ,IAAI;AAAA,EACjC;AACF;"}