import { jsx, jsxs } from "react/jsx-runtime";
import { useDefaultProps } from "@hitachivantara/uikit-react-utils";
import { setId } from "../../utils/setId.js";
import { useClasses } from "./HorizontalScrollListItem.styles.js";
import { staticClasses } from "./HorizontalScrollListItem.styles.js";
import { HvOverflowTooltip } from "../../OverflowTooltip/OverflowTooltip.js";
const HvHorizontalScrollListItem = (props) => {
  const {
    id,
    className,
    classes: classesProp,
    selected,
    label,
    tooltipPlacement,
    href,
    iconClasses,
    ...others
  } = useDefaultProps("HvHorizontalScrollListItem", props);
  const { classes, cx } = useClasses(classesProp);
  const buttonId = setId(id, "button");
  const Component = href != null ? "a" : "div";
  return /* @__PURE__ */ jsx("li", { id, className: cx(classes.root, className), "aria-current": selected, children: /* @__PURE__ */ jsxs(
    Component,
    {
      id: buttonId,
      role: href == null ? "button" : void 0,
      tabIndex: 0,
      className: classes.button,
      href,
      ...others,
      children: [
        /* @__PURE__ */ jsx(
          HvOverflowTooltip,
          {
            className: cx(classes.text, { [classes.selected]: selected }),
            placement: tooltipPlacement,
            data: label
          }
        ),
        /* @__PURE__ */ jsx(
          "div",
          {
            "aria-hidden": true,
            className: cx(classes.bullet, iconClasses, {
              [classes.bulletSelected]: selected
            }),
            children: /* @__PURE__ */ jsx("span", {})
          }
        )
      ]
    }
  ) });
};
export {
  HvHorizontalScrollListItem,
  staticClasses as horizontalScrollListItemClasses
};
