{"version":3,"file":"HorizontalScrollListItem.js","sources":["../../../../src/ScrollToHorizontal/HorizontalScrollListItem/HorizontalScrollListItem.tsx"],"sourcesContent":["import {\n  useDefaultProps,\n  type ExtractNames,\n} from \"@hitachivantara/uikit-react-utils\";\n\nimport {\n  HvOverflowTooltip,\n  HvOverflowTooltipProps,\n} from \"../../OverflowTooltip\";\nimport { HvBaseProps } from \"../../types/generic\";\nimport { setId } from \"../../utils/setId\";\nimport { staticClasses, useClasses } from \"./HorizontalScrollListItem.styles\";\n\nexport { staticClasses as horizontalScrollListItemClasses };\n\nexport type HvHorizontalScrollListItemClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvHorizontalScrollListItemProps\n  extends HvBaseProps<HTMLDivElement | HTMLAnchorElement> {\n  /** The text to render.  */\n  label?: React.ReactNode;\n  /** Whether the element is selected. */\n  selected?: boolean;\n  tooltipPlacement: HvOverflowTooltipProps[\"placement\"];\n  /** A Jss Object used to override or extend the styles applied. */\n  classes?: HvHorizontalScrollListItemClasses;\n\n  /**\n   * The link to be set in the href attribute of the anchor element.\n   *\n   * If this is not set, the element will be rendered as a div with a button role.\n   */\n  href?: string;\n  /** @deprecated remove in v6 */\n  iconClasses?: string;\n}\n\n/**\n * HvHorizontalScrollListItem a focusable item to be used as part of the horizontal scroll\n */\nexport const HvHorizontalScrollListItem = (\n  props: HvHorizontalScrollListItemProps,\n) => {\n  const {\n    id,\n    className,\n    classes: classesProp,\n    selected,\n    label,\n    tooltipPlacement,\n    href,\n    iconClasses,\n    ...others\n  } = useDefaultProps(\"HvHorizontalScrollListItem\", props);\n  const { classes, cx } = useClasses(classesProp);\n  const buttonId = setId(id, \"button\");\n\n  const Component = href != null ? \"a\" : \"div\";\n\n  return (\n    <li id={id} className={cx(classes.root, className)} aria-current={selected}>\n      <Component\n        id={buttonId}\n        role={href == null ? \"button\" : undefined}\n        tabIndex={0}\n        className={classes.button}\n        href={href}\n        {...others}\n      >\n        <HvOverflowTooltip\n          className={cx(classes.text, { [classes.selected]: selected })}\n          placement={tooltipPlacement}\n          data={label}\n        />\n        <div\n          aria-hidden\n          className={cx(classes.bullet, iconClasses, {\n            [classes.bulletSelected]: selected,\n          })}\n        >\n          <span />\n        </div>\n      </Component>\n    </li>\n  );\n};\n"],"names":[],"mappings":";;;;;;AAwCa,MAAA,6BAA6B,CACxC,UACG;AACG,QAAA;AAAA,IACJ;AAAA,IACA;AAAA,IACA,SAAS;AAAA,IACT;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EAAA,IACD,gBAAgB,8BAA8B,KAAK;AACvD,QAAM,EAAE,SAAS,OAAO,WAAW,WAAW;AACxC,QAAA,WAAW,MAAM,IAAI,QAAQ;AAE7B,QAAA,YAAY,QAAQ,OAAO,MAAM;AAGrC,SAAA,oBAAC,MAAG,EAAA,IAAQ,WAAW,GAAG,QAAQ,MAAM,SAAS,GAAG,gBAAc,UAChE,UAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,IAAI;AAAA,MACJ,MAAM,QAAQ,OAAO,WAAW;AAAA,MAChC,UAAU;AAAA,MACV,WAAW,QAAQ;AAAA,MACnB;AAAA,MACC,GAAG;AAAA,MAEJ,UAAA;AAAA,QAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,WAAW,GAAG,QAAQ,MAAM,EAAE,CAAC,QAAQ,QAAQ,GAAG,UAAU;AAAA,YAC5D,WAAW;AAAA,YACX,MAAM;AAAA,UAAA;AAAA,QACR;AAAA,QACA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,eAAW;AAAA,YACX,WAAW,GAAG,QAAQ,QAAQ,aAAa;AAAA,cACzC,CAAC,QAAQ,cAAc,GAAG;AAAA,YAAA,CAC3B;AAAA,YAED,8BAAC,QAAK,CAAA,CAAA;AAAA,UAAA;AAAA,QAAA;AAAA,MACR;AAAA,IAAA;AAAA,EAAA,GAEJ;AAEJ;"}