{"version":3,"file":"Box.js","sources":["../../../src/Box/Box.tsx"],"sourcesContent":["import { useDefaultProps } from \"@hitachivantara/uikit-react-utils\";\nimport { HvTheme, theme } from \"@hitachivantara/uikit-styles\";\n\nimport {\n  fixedForwardRef,\n  PolymorphicComponentRef,\n  PolymorphicRef,\n} from \"../types/generic\";\n\n// v6 - This shouldn't be named HvBoxProps\nexport type HvBoxProps<C extends React.ElementType = \"div\"> =\n  PolymorphicComponentRef<\n    C,\n    {\n      style?: React.CSSProperties;\n      sx?: React.CSSProperties | ((theme: HvTheme) => React.CSSProperties);\n    }\n  >;\n\nconst sxFn = (sx: HvBoxProps[\"sx\"]) => {\n  return typeof sx === \"function\" ? sx(theme) : sx;\n};\n\n/**\n * Customizable layout component that can be used to wrap other components.\n * It can be used to add styles to the wrapped components.\n * It can also be used to create a layout using the flexbox properties.\n * @deprecated use native elements instead (e.g. `div`)\n */\nexport const HvBox = fixedForwardRef(function HvBox<\n  C extends React.ElementType = \"div\",\n>(props: HvBoxProps<C>, ref?: PolymorphicRef<C>) {\n  const {\n    style,\n    component: Component = \"div\",\n    sx,\n    children,\n    classes, // Extracted since useDefaultProps creates this prop even if it's not part of the component's API\n    ...restProps\n  } = useDefaultProps(\"HvBox\", props);\n\n  return (\n    <Component style={sx ? sxFn(sx) : style} ref={ref} {...restProps}>\n      {children}\n    </Component>\n  );\n});\n"],"names":["HvBox"],"mappings":";;;;AAmBA,MAAM,OAAO,CAAC,OAAyB;AACrC,SAAO,OAAO,OAAO,aAAa,GAAG,KAAK,IAAI;AAChD;AAQO,MAAM,QAAQ,gBAAgB,SAASA,OAE5C,OAAsB,KAAyB;AACzC,QAAA;AAAA,IACJ;AAAA,IACA,WAAW,YAAY;AAAA,IACvB;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IACA,GAAG;AAAA,EAAA,IACD,gBAAgB,SAAS,KAAK;AAGhC,SAAA,oBAAC,WAAU,EAAA,OAAO,KAAK,KAAK,EAAE,IAAI,OAAO,KAAW,GAAG,WACpD,SACH,CAAA;AAEJ,CAAC;"}