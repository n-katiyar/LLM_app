{"version":3,"file":"SimpleGrid.styles.js","sources":["../../../src/SimpleGrid/SimpleGrid.styles.tsx"],"sourcesContent":["import { createClasses } from \"@hitachivantara/uikit-react-utils\";\nimport { HvBreakpoints, theme } from \"@hitachivantara/uikit-styles\";\n\nimport type { Breakpoint } from \"./SimpleGrid\";\n\nexport const { staticClasses, useClasses } = createClasses(\"HvSimpleGrid\", {\n  root: {\n    display: \"grid\",\n    boxSizing: \"border-box\",\n    gridTemplateColumns: `repeat(var(--cols, 1), minmax(0, 1fr))`,\n  },\n});\n\nfunction getSize(size?: number) {\n  return size || Number(theme.breakpoints.values.md);\n}\n\nfunction getSortedBreakpoints(breakpoints: Breakpoint[]) {\n  if (breakpoints.length === 0) {\n    return breakpoints;\n  }\n\n  const property = \"maxWidth\" in breakpoints[0] ? \"maxWidth\" : \"minWidth\";\n  const sorted = [...breakpoints].sort(\n    (a, b) => getSize(b[property]) - getSize(a[property]),\n  );\n\n  return property === \"minWidth\" ? sorted.reverse() : sorted;\n}\n\nexport const getContainerStyle = (\n  breakpoints?: Breakpoint[],\n  spacing: HvBreakpoints = \"sm\",\n  cols = 1,\n) => {\n  return {\n    // TODO: review/document precedence of cols/spacing vs breakpoints[cols/spacing]\n    \"--cols\": cols,\n    gap: theme.space[spacing],\n\n    ...(breakpoints &&\n      getSortedBreakpoints(breakpoints).reduce<\n        Record<string, React.CSSProperties>\n      >((acc, breakpoint) => {\n        const property = \"maxWidth\" in breakpoint ? \"max-width\" : \"min-width\";\n        const breakpointSize = getSize(\n          property === \"max-width\" ? breakpoint.maxWidth : breakpoint.minWidth,\n        );\n\n        acc[`@media (${property}: ${breakpointSize}px)`] = {\n          [\"--cols\" as string]: breakpoint.cols,\n          gap: theme.space[breakpoint.spacing || spacing],\n        };\n\n        return acc;\n      }, {})),\n  };\n};\n"],"names":[],"mappings":";;AAKO,MAAM,EAAE,eAAe,eAAe,cAAc,gBAAgB;AAAA,EACzE,MAAM;AAAA,IACJ,SAAS;AAAA,IACT,WAAW;AAAA,IACX,qBAAqB;AAAA,EAAA;AAEzB,CAAC;AAED,SAAS,QAAQ,MAAe;AAC9B,SAAO,QAAQ,OAAO,MAAM,YAAY,OAAO,EAAE;AACnD;AAEA,SAAS,qBAAqB,aAA2B;AACnD,MAAA,YAAY,WAAW,GAAG;AACrB,WAAA;AAAA,EAAA;AAGT,QAAM,WAAW,cAAc,YAAY,CAAC,IAAI,aAAa;AAC7D,QAAM,SAAS,CAAC,GAAG,WAAW,EAAE;AAAA,IAC9B,CAAC,GAAG,MAAM,QAAQ,EAAE,QAAQ,CAAC,IAAI,QAAQ,EAAE,QAAQ,CAAC;AAAA,EACtD;AAEA,SAAO,aAAa,aAAa,OAAO,QAAY,IAAA;AACtD;AAEO,MAAM,oBAAoB,CAC/B,aACA,UAAyB,MACzB,OAAO,MACJ;AACI,SAAA;AAAA;AAAA,IAEL,UAAU;AAAA,IACV,KAAK,MAAM,MAAM,OAAO;AAAA,IAExB,GAAI,eACF,qBAAqB,WAAW,EAAE,OAEhC,CAAC,KAAK,eAAe;AACf,YAAA,WAAW,cAAc,aAAa,cAAc;AAC1D,YAAM,iBAAiB;AAAA,QACrB,aAAa,cAAc,WAAW,WAAW,WAAW;AAAA,MAC9D;AAEA,UAAI,WAAW,QAAQ,KAAK,cAAc,KAAK,IAAI;AAAA,QACjD,CAAC,QAAkB,GAAG,WAAW;AAAA,QACjC,KAAK,MAAM,MAAM,WAAW,WAAW,OAAO;AAAA,MAChD;AAEO,aAAA;AAAA,IAAA,GACN,CAAE,CAAA;AAAA,EACT;AACF;"}