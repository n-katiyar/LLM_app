{"version":3,"file":"useTreeViewContextValueBuilder.js","sources":["../../../../../../src/TreeView/internals/hooks/plugins/useTreeViewContextValueBuilder.ts"],"sourcesContent":["import { unstable_useId as useId } from \"@mui/material/utils\";\n\nimport type {\n  TreeViewInstance,\n  TreeViewPlugin,\n  TreeViewPluginSignature,\n} from \"../../types\";\nimport type { UseTreeViewNodesSignature } from \"./useTreeViewNodes\";\nimport type { UseTreeViewSelectionSignature } from \"./useTreeViewSelection\";\n\nexport interface UseTreeViewContextValueBuilderParameters {\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id?: string;\n  /**\n   * The default icon used to collapse the node.\n   */\n  defaultCollapseIcon?: React.ReactNode;\n  /**\n   * The default icon displayed next to a end node. This is applied to all\n   * tree nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultEndIcon?: React.ReactNode;\n  /**\n   * The default icon used to expand the node.\n   */\n  defaultExpandIcon?: React.ReactNode;\n  /**\n   * The default icon displayed next to a parent node. This is applied to all\n   * parent nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultParentIcon?: React.ReactNode;\n}\n\nexport type UseTreeViewContextValueBuilderDefaultizedParameters =\n  UseTreeViewContextValueBuilderParameters;\n\nexport type UseTreeViewContextValueBuilderSignature = TreeViewPluginSignature<\n  UseTreeViewContextValueBuilderParameters,\n  UseTreeViewContextValueBuilderDefaultizedParameters,\n  {},\n  {},\n  {},\n  never,\n  [UseTreeViewNodesSignature, UseTreeViewSelectionSignature<any>]\n>;\n\nexport const useTreeViewContextValueBuilder: TreeViewPlugin<\n  UseTreeViewContextValueBuilderSignature\n> = ({ instance, params }) => {\n  const treeId = useId(params.id);\n\n  return {\n    getRootProps: () => ({\n      id: treeId,\n    }),\n    contextValue: {\n      treeId,\n      instance: instance as TreeViewInstance<any>,\n      multiSelect: params.multiSelect,\n      disabledItemsFocusable: params.disabledItemsFocusable,\n      icons: {\n        defaultCollapseIcon: params.defaultCollapseIcon,\n        defaultEndIcon: params.defaultEndIcon,\n        defaultExpandIcon: params.defaultExpandIcon,\n        defaultParentIcon: params.defaultParentIcon,\n      },\n    },\n  };\n};\n"],"names":["useId"],"mappings":";AAiDO,MAAM,iCAET,CAAC,EAAE,UAAU,aAAa;AACtB,QAAA,SAASA,eAAM,OAAO,EAAE;AAEvB,SAAA;AAAA,IACL,cAAc,OAAO;AAAA,MACnB,IAAI;AAAA,IAAA;AAAA,IAEN,cAAc;AAAA,MACZ;AAAA,MACA;AAAA,MACA,aAAa,OAAO;AAAA,MACpB,wBAAwB,OAAO;AAAA,MAC/B,OAAO;AAAA,QACL,qBAAqB,OAAO;AAAA,QAC5B,gBAAgB,OAAO;AAAA,QACvB,mBAAmB,OAAO;AAAA,QAC1B,mBAAmB,OAAO;AAAA,MAAA;AAAA,IAC5B;AAAA,EAEJ;AACF;"}