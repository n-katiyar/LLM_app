{"version":3,"file":"model.js","sources":["../../../src/Calendar/model.tsx"],"sourcesContent":["import { createDatesArray, isRange } from \"./utils\";\n\n/**\n * Calendar builder for a specific month and year.\n * Returns an array of date objects.\n */\nexport default class CalendarModel {\n  month: any;\n\n  year: any;\n\n  dates: Date[] = [];\n\n  constructor(month?: number, year?: number) {\n    this.updateModel(month!, year!);\n  }\n\n  /**\n   * Updates the model with the received month and year\n   *\n   * @param month - Number of the month (1 to 12).\n   * @param year - Number of the year.\n   * @memberOf CalendarModel\n   */\n  updateModel = (month: number, year: number) => {\n    let validMonth = month;\n    let validYear = year;\n    if (!Number.isInteger(validMonth)) {\n      validMonth = new Date().getMonth() + 1;\n    }\n    if (!Number.isInteger(validYear)) {\n      validYear = new Date().getFullYear();\n    }\n\n    this.month = validMonth;\n    this.year = validYear;\n    this.dates = createDatesArray(validMonth, validYear);\n  };\n}\n\nconst generateModelFromDate = (seedValue: any) => {\n  let calendarModel;\n\n  if (typeof seedValue === \"string\") {\n    const today = new Date();\n    calendarModel = new CalendarModel(\n      today.getMonth() + 1,\n      today.getFullYear(),\n    );\n  } else if (isRange(seedValue)) {\n    calendarModel = new CalendarModel(\n      seedValue.startDate.getMonth() + 1,\n      seedValue.startDate.getFullYear(),\n    );\n  } else {\n    calendarModel = new CalendarModel(\n      seedValue.getMonth() + 1,\n      seedValue.getFullYear(),\n    );\n  }\n\n  return calendarModel;\n};\n\nexport const generateCalendarModel = (\n  seedValue: any,\n  visibleMonth?: number,\n  visibleYear?: number,\n) => {\n  let calendarModel;\n\n  if (visibleMonth && visibleYear) {\n    calendarModel = new CalendarModel(visibleMonth, visibleYear);\n  } else if (visibleMonth && !visibleYear) {\n    calendarModel = new CalendarModel(visibleMonth, seedValue.getFullYear());\n  } else if (!visibleMonth && visibleYear) {\n    calendarModel = new CalendarModel(1, visibleYear);\n  } else {\n    calendarModel = generateModelFromDate(seedValue);\n  }\n\n  return calendarModel;\n};\n"],"names":[],"mappings":";AAMA,MAAqB,cAAc;AAAA,EACjC;AAAA,EAEA;AAAA,EAEA,QAAgB,CAAC;AAAA,EAEjB,YAAY,OAAgB,MAAe;AACpC,SAAA,YAAY,OAAQ,IAAK;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUhC,cAAc,CAAC,OAAe,SAAiB;AAC7C,QAAI,aAAa;AACjB,QAAI,YAAY;AAChB,QAAI,CAAC,OAAO,UAAU,UAAU,GAAG;AACjC,oBAAiB,oBAAA,QAAO,SAAa,IAAA;AAAA,IAAA;AAEvC,QAAI,CAAC,OAAO,UAAU,SAAS,GAAG;AACpB,mBAAA,oBAAI,KAAK,GAAE,YAAY;AAAA,IAAA;AAGrC,SAAK,QAAQ;AACb,SAAK,OAAO;AACP,SAAA,QAAQ,iBAAiB,YAAY,SAAS;AAAA,EACrD;AACF;AAEA,MAAM,wBAAwB,CAAC,cAAmB;AAC5C,MAAA;AAEA,MAAA,OAAO,cAAc,UAAU;AAC3B,UAAA,4BAAY,KAAK;AACvB,oBAAgB,IAAI;AAAA,MAClB,MAAM,aAAa;AAAA,MACnB,MAAM,YAAY;AAAA,IACpB;AAAA,EAAA,WACS,QAAQ,SAAS,GAAG;AAC7B,oBAAgB,IAAI;AAAA,MAClB,UAAU,UAAU,SAAA,IAAa;AAAA,MACjC,UAAU,UAAU,YAAY;AAAA,IAClC;AAAA,EAAA,OACK;AACL,oBAAgB,IAAI;AAAA,MAClB,UAAU,aAAa;AAAA,MACvB,UAAU,YAAY;AAAA,IACxB;AAAA,EAAA;AAGK,SAAA;AACT;AAEO,MAAM,wBAAwB,CACnC,WACA,cACA,gBACG;AACC,MAAA;AAEJ,MAAI,gBAAgB,aAAa;AACf,oBAAA,IAAI,cAAc,cAAc,WAAW;AAAA,EAAA,WAClD,gBAAgB,CAAC,aAAa;AACvC,oBAAgB,IAAI,cAAc,cAAc,UAAU,aAAa;AAAA,EAAA,WAC9D,CAAC,gBAAgB,aAAa;AACvB,oBAAA,IAAI,cAAc,GAAG,WAAW;AAAA,EAAA,OAC3C;AACL,oBAAgB,sBAAsB,SAAS;AAAA,EAAA;AAG1C,SAAA;AACT;"}