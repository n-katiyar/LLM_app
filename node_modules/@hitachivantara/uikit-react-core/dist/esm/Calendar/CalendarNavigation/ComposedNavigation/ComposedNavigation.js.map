{"version":3,"file":"ComposedNavigation.js","sources":["../../../../../src/Calendar/CalendarNavigation/ComposedNavigation/ComposedNavigation.tsx"],"sourcesContent":["import { type ExtractNames } from \"@hitachivantara/uikit-react-utils\";\n\nimport { setId } from \"../../../utils/setId\";\nimport { ViewMode } from \"../../enums\";\nimport { VisibilitySelectorActions } from \"../../types\";\nimport { getMonthNamesList } from \"../../utils\";\nimport { Navigation } from \"../Navigation\";\nimport { staticClasses, useClasses } from \"./ComposedNavigation.styles\";\n\nexport { staticClasses as composedNavigationClasses };\n\nexport type HvComposedNavigationClasses = ExtractNames<typeof useClasses>;\n\nexport const HvComposedNavigation = ({\n  classes: classesProp,\n  id,\n  locale,\n  onChange,\n  onViewModeChange,\n  visibleYear,\n  visibleMonth,\n  ...others\n}: HvComposedNavigationProps) => {\n  const { classes } = useClasses(classesProp);\n\n  const listMonthNamesLong = getMonthNamesList(locale, \"long\");\n  const monthName = listMonthNamesLong[visibleMonth - 1];\n\n  return (\n    <div className={classes.navigationContainer} {...others}>\n      <div className={classes.navigationMonth}>\n        <Navigation\n          id={setId(id, \"navigation-month\")}\n          navigationText={monthName}\n          onNavigatePrevious={(event) => {\n            onChange?.(event, \"previous_month\");\n          }}\n          onNavigateNext={(event) => {\n            onChange?.(event, \"next_month\");\n          }}\n          onTextClick={() => {\n            onViewModeChange(\"monthly\");\n          }}\n          className={classes.navigationMonth}\n        />\n      </div>\n\n      <Navigation\n        id={setId(id, \"navigation-year\")}\n        navigationText={visibleYear.toString()}\n        onNavigatePrevious={(event) => {\n          onChange?.(event, \"previous_year\");\n        }}\n        onNavigateNext={(event) => {\n          onChange?.(event, \"next_year\");\n        }}\n      />\n    </div>\n  );\n};\n\nexport interface HvComposedNavigationProps {\n  /**\n   * A Jss Object used to override or extend the component styles.\n   */\n  classes?: HvComposedNavigationClasses;\n  /**\n   * Identifier.\n   */\n  id?: string;\n  /**\n   * Locale to be used by the calendar.\n   */\n  locale?: string;\n  /**\n   * Callback to define the input date.\n   */\n  onChange?: (event: any, action: VisibilitySelectorActions) => void;\n  /**\n   * Callback to define the view mode.\n   */\n  onViewModeChange: (viewMode: ViewMode) => void;\n  /**\n   * Controls the visible month of the Calendar\n   */\n  visibleMonth: number;\n  /**\n   * Controls the visible month of the Calendar\n   */\n  visibleYear: number;\n}\n"],"names":[],"mappings":";;;;;;AAaO,MAAM,uBAAuB,CAAC;AAAA,EACnC,SAAS;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,MAAiC;AAC/B,QAAM,EAAE,QAAA,IAAY,WAAW,WAAW;AAEpC,QAAA,qBAAqB,kBAAkB,QAAQ,MAAM;AACrD,QAAA,YAAY,mBAAmB,eAAe,CAAC;AAErD,8BACG,OAAI,EAAA,WAAW,QAAQ,qBAAsB,GAAG,QAC/C,UAAA;AAAA,IAAC,oBAAA,OAAA,EAAI,WAAW,QAAQ,iBACtB,UAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,IAAI,MAAM,IAAI,kBAAkB;AAAA,QAChC,gBAAgB;AAAA,QAChB,oBAAoB,CAAC,UAAU;AAC7B,qBAAW,OAAO,gBAAgB;AAAA,QACpC;AAAA,QACA,gBAAgB,CAAC,UAAU;AACzB,qBAAW,OAAO,YAAY;AAAA,QAChC;AAAA,QACA,aAAa,MAAM;AACjB,2BAAiB,SAAS;AAAA,QAC5B;AAAA,QACA,WAAW,QAAQ;AAAA,MAAA;AAAA,IAAA,GAEvB;AAAA,IAEA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,IAAI,MAAM,IAAI,iBAAiB;AAAA,QAC/B,gBAAgB,YAAY,SAAS;AAAA,QACrC,oBAAoB,CAAC,UAAU;AAC7B,qBAAW,OAAO,eAAe;AAAA,QACnC;AAAA,QACA,gBAAgB,CAAC,UAAU;AACzB,qBAAW,OAAO,WAAW;AAAA,QAAA;AAAA,MAC/B;AAAA,IAAA;AAAA,EACF,GACF;AAEJ;"}