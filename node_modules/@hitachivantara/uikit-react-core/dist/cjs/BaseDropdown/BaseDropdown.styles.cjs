"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const uikitReactUtils = require("@hitachivantara/uikit-react-utils");
const uikitStyles = require("@hitachivantara/uikit-styles");
const focusUtils = require("../utils/focusUtils.cjs");
const { useClasses, staticClasses } = uikitReactUtils.createClasses("HvBaseDropdown", {
  root: { width: "100%", position: "relative" },
  rootDisabled: {
    cursor: "not-allowed",
    "&:focus": {
      outline: "none"
    }
  },
  anchor: { display: "inline-block", width: "100%" },
  container: { zIndex: uikitStyles.theme.zIndices.popover, width: "auto" },
  header: {
    cursor: "pointer",
    userSelect: "none",
    position: "relative",
    background: uikitStyles.theme.colors.atmo1,
    boxSizing: "border-box",
    border: `1px solid ${uikitStyles.theme.colors.secondary}`,
    borderRadius: uikitStyles.theme.radii.base,
    "&:hover": {
      border: `1px solid ${uikitStyles.theme.colors.primary}`
    },
    "&:focus": {
      outline: "none"
    },
    "&:focus-visible": {
      ...focusUtils.outlineStyles,
      border: `1px solid ${uikitStyles.theme.colors.primary}`
    }
  },
  headerOpen: {
    border: `1px solid ${uikitStyles.theme.colors.secondary}`,
    "&:hover": {
      border: `1px solid ${uikitStyles.theme.colors.secondary}`
    }
  },
  headerOpenUp: {
    borderRadius: `0px 0px ${uikitStyles.theme.radii.base} ${uikitStyles.theme.radii.base}`
  },
  headerOpenDown: {
    borderRadius: `${uikitStyles.theme.radii.base} ${uikitStyles.theme.radii.base} 0px 0px`
  },
  headerDisabled: {
    cursor: "not-allowed",
    pointerEvents: "none",
    color: uikitStyles.theme.colors.secondary_60,
    border: `1px solid ${uikitStyles.theme.colors.secondary_60}`,
    background: uikitStyles.theme.colors.atmo2,
    "&:hover": {
      border: `1px solid ${uikitStyles.theme.colors.secondary_60}`
    }
  },
  headerReadOnly: {
    cursor: "not-allowed",
    pointerEvents: "none",
    color: uikitStyles.theme.colors.secondary_80,
    border: `1px solid ${uikitStyles.theme.colors.secondary_60}`,
    background: uikitStyles.theme.colors.atmo2,
    userSelect: "text",
    "&:focus-visible": {
      outline: "none",
      border: `1px solid ${uikitStyles.theme.colors.secondary_60}`
    }
  },
  arrowContainer: {
    position: "absolute",
    pointerEvents: "none",
    top: -1,
    right: -1
  },
  arrow: {},
  selection: {
    display: "flex",
    alignItems: "center",
    height: "30px",
    boxSizing: "border-box",
    paddingLeft: uikitStyles.theme.space.xs,
    paddingRight: uikitStyles.theme.sizes.sm,
    color: "inherit"
  },
  selectionDisabled: {},
  placeholder: {
    display: "block",
    color: uikitStyles.theme.colors.secondary_80
  },
  panel: {
    // TODO: remove padding override in v6 (most elements need it)
    padding: 0,
    border: `1px solid ${uikitStyles.theme.colors.secondary}`
  },
  panelOpenedUp: {
    top: 1,
    borderRadius: `${uikitStyles.theme.radii.base} ${uikitStyles.theme.radii.base} 0 0`
  },
  panelOpenedDown: {
    top: -1,
    borderRadius: `0 0 ${uikitStyles.theme.radii.base} ${uikitStyles.theme.radii.base}`
  },
  inputExtensionOpen: {
    height: "0px",
    backgroundColor: uikitStyles.theme.colors.atmo1,
    borderTop: "none",
    borderBottom: "none",
    borderRight: `1px solid ${uikitStyles.theme.colors.secondary}`,
    borderLeft: `1px solid ${uikitStyles.theme.colors.secondary}`
  },
  inputExtensionLeftPosition: { marginLeft: "auto" },
  inputExtensionOpenShadow: {
    boxShadow: `0px 8px 0px ${uikitStyles.theme.colors.atmo1}, 0px 0px 9px 0px rgba(65,65,65,.12)`
  },
  inputExtensionFloatRight: { float: "right" },
  inputExtensionFloatLeft: { float: "left" }
});
exports.staticClasses = staticClasses;
exports.useClasses = useClasses;
