"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("react/jsx-runtime");
const uikitReactUtils = require("@hitachivantara/uikit-react-utils");
const setId = require("../../utils/setId.cjs");
const HorizontalScrollListItem_styles = require("./HorizontalScrollListItem.styles.cjs");
const OverflowTooltip = require("../../OverflowTooltip/OverflowTooltip.cjs");
const HvHorizontalScrollListItem = (props) => {
  const {
    id,
    className,
    classes: classesProp,
    selected,
    label,
    tooltipPlacement,
    href,
    iconClasses,
    ...others
  } = uikitReactUtils.useDefaultProps("HvHorizontalScrollListItem", props);
  const { classes, cx } = HorizontalScrollListItem_styles.useClasses(classesProp);
  const buttonId = setId.setId(id, "button");
  const Component = href != null ? "a" : "div";
  return /* @__PURE__ */ jsxRuntime.jsx("li", { id, className: cx(classes.root, className), "aria-current": selected, children: /* @__PURE__ */ jsxRuntime.jsxs(
    Component,
    {
      id: buttonId,
      role: href == null ? "button" : void 0,
      tabIndex: 0,
      className: classes.button,
      href,
      ...others,
      children: [
        /* @__PURE__ */ jsxRuntime.jsx(
          OverflowTooltip.HvOverflowTooltip,
          {
            className: cx(classes.text, { [classes.selected]: selected }),
            placement: tooltipPlacement,
            data: label
          }
        ),
        /* @__PURE__ */ jsxRuntime.jsx(
          "div",
          {
            "aria-hidden": true,
            className: cx(classes.bullet, iconClasses, {
              [classes.bulletSelected]: selected
            }),
            children: /* @__PURE__ */ jsxRuntime.jsx("span", {})
          }
        )
      ]
    }
  ) });
};
exports.horizontalScrollListItemClasses = HorizontalScrollListItem_styles.staticClasses;
exports.HvHorizontalScrollListItem = HvHorizontalScrollListItem;
