"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const uikitReactUtils = require("@hitachivantara/uikit-react-utils");
const uikitStyles = require("@hitachivantara/uikit-styles");
const Button_styles = require("../Button/Button.styles.cjs");
require("../Button/Button.cjs");
const disabledStyle = {
  backgroundColor: uikitStyles.theme.colors.atmo3,
  borderColor: uikitStyles.theme.colors.atmo3,
  [`&.${Button_styles.staticClasses.subtle}`]: {
    backgroundColor: uikitStyles.theme.colors.atmo3,
    borderColor: uikitStyles.theme.colors.atmo3,
    "&:hover": { backgroundColor: uikitStyles.theme.colors.atmo3 }
  },
  [`&.${Button_styles.staticClasses.ghost}`]: {
    backgroundColor: uikitStyles.theme.colors.atmo3,
    borderColor: uikitStyles.theme.colors.atmo3,
    "&:hover": { backgroundColor: uikitStyles.theme.colors.atmo3 }
  }
};
const { staticClasses, useClasses } = uikitReactUtils.createClasses("HvDropdownButton", {
  root: {
    userSelect: "none",
    position: "relative",
    [`&:not(.${Button_styles.staticClasses.icon})`]: {
      width: "100%",
      minWidth: "unset",
      justifyContent: "flex-start",
      paddingLeft: uikitStyles.theme.space.xs
    }
  },
  disabled: {
    ...disabledStyle
  },
  readOnly: {
    userSelect: "text",
    ...disabledStyle
  },
  open: {
    backgroundColor: uikitStyles.theme.colors.atmo1
  },
  openUp: {
    borderRadius: `0px 0px ${uikitStyles.theme.radii.base} ${uikitStyles.theme.radii.base}`
  },
  openDown: {
    borderRadius: `${uikitStyles.theme.radii.base} ${uikitStyles.theme.radii.base} 0px 0px`
  },
  selection: {
    color: "inherit",
    flex: 1,
    textAlign: "start",
    overflow: "auto",
    textOverflow: "ellipsis",
    whiteSpace: "nowrap"
  },
  placeholder: {},
  arrowContainer: {
    marginRight: uikitStyles.theme.spacing(-2)
  }
});
exports.staticClasses = staticClasses;
exports.useClasses = useClasses;
