"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("react/jsx-runtime");
const React = require("react");
const uikitReactIcons = require("@hitachivantara/uikit-react-icons");
const uikitReactUtils = require("@hitachivantara/uikit-react-utils");
const DropdownButton_styles = require("./DropdownButton.styles.cjs");
const Button = require("../Button/Button.cjs");
const HvDropdownButton = React.forwardRef(function HvDropdownButton2(props, ref) {
  const {
    className,
    classes: classesProp,
    placement = "bottom",
    disabled,
    open,
    icon,
    readOnly,
    children,
    variant,
    ...others
  } = uikitReactUtils.useDefaultProps("HvDropdownButton", props);
  const { classes, cx } = DropdownButton_styles.useClasses(classesProp);
  const endIcon = icon ? void 0 : /* @__PURE__ */ jsxRuntime.jsx(uikitReactIcons.DropDownXS, { size: "XS", rotate: open });
  return /* @__PURE__ */ jsxRuntime.jsx(
    Button.HvButton,
    {
      ref,
      icon,
      disabled: disabled || readOnly,
      className: cx(
        classes.root,
        {
          [classes.open]: open,
          [classes.openUp]: open && placement.includes("top"),
          [classes.openDown]: open && placement.includes("bottom"),
          [classes.disabled]: disabled,
          [classes.readOnly]: readOnly
        },
        className
      ),
      classes: { endIcon: classes.arrowContainer },
      endIcon,
      variant: open ? "secondarySubtle" : variant,
      ...others,
      children: /* @__PURE__ */ jsxRuntime.jsx("div", { className: cx({ [classes.selection]: !icon }), children: children && typeof children === "string" ? /* @__PURE__ */ jsxRuntime.jsx("div", { className: classes.placeholder, children }) : children })
    }
  );
});
exports.dropdownButtonClasses = DropdownButton_styles.staticClasses;
exports.HvDropdownButton = HvDropdownButton;
