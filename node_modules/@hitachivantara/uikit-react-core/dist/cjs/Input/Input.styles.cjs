"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const uikitReactUtils = require("@hitachivantara/uikit-react-utils");
const uikitStyles = require("@hitachivantara/uikit-styles");
const Suggestions_styles = require("../FormElement/Suggestions/Suggestions.styles.cjs");
require("../FormElement/Suggestions/Suggestions.cjs");
const { staticClasses, useClasses } = uikitReactUtils.createClasses("HvInput", {
  root: { display: "block" },
  labelContainer: { display: "flex", alignItems: "flex-start" },
  label: {},
  description: {},
  adornmentsBox: {
    display: "flex",
    flexDirection: "row",
    height: "30px",
    alignItems: "center",
    justifyContent: "center",
    marginRight: 1
  },
  icon: { width: "30px", height: "30px" },
  adornmentButton: {
    ":focus-visible,:hover": {
      backgroundColor: "transparent"
    }
  },
  iconClear: { display: "none" },
  hasSuggestions: {},
  suggestionsContainer: { width: "100%", position: "relative" },
  suggestionList: {
    [`& .${Suggestions_styles.staticClasses.root} .${Suggestions_styles.staticClasses.list} &`]: {
      width: "100%"
    }
  },
  inputExtension: {
    height: uikitStyles.theme.space.xs,
    backgroundColor: uikitStyles.theme.colors.atmo1,
    boxShadow: `0px 8px 0px ${uikitStyles.theme.colors.atmo1}, 0px 0px 9px 0px rgba(65,65,65,.12)`
  },
  input: {},
  inputRoot: {
    ":is(:hover,:focus-within) $iconClear": {
      display: "block"
    }
  },
  inputRootFocused: {
    "& $iconClear": {
      display: "block"
    }
  },
  inputRootDisabled: {},
  inputRootMultiline: { padding: 0 },
  /** @deprecated unused. use `::after` instead */
  inputBorderContainer: {},
  error: {}
});
exports.staticClasses = staticClasses;
exports.useClasses = useClasses;
