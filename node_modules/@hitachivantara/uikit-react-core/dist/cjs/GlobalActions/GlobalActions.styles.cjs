"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const uikitReactUtils = require("@hitachivantara/uikit-react-utils");
const uikitStyles = require("@hitachivantara/uikit-styles");
const { staticClasses, useClasses } = uikitReactUtils.createClasses("HvGlobalActions", {
  root: {
    position: "relative"
  },
  positionSticky: {
    width: "100%",
    position: "sticky"
  },
  positionFixed: {
    width: "100%",
    position: "fixed"
  },
  global: {
    zIndex: `calc(${uikitStyles.theme.zIndices.banner} - 2)`,
    top: 0,
    left: 0,
    padding: uikitStyles.theme.spacing(1, 0),
    backdropFilter: "blur(1px)",
    "&:before": {
      content: "''",
      display: "flex",
      position: "absolute",
      inset: 0,
      background: uikitStyles.theme.colors.atmo2,
      opacity: "75%"
    },
    "& $wrapper": {
      top: 0,
      left: 0,
      backgroundColor: uikitStyles.theme.colors.atmo1,
      width: "100%",
      borderWidth: 1,
      borderRadius: uikitStyles.theme.radii.round
    }
  },
  section: {
    "& $wrapper": {
      borderTopWidth: 1,
      paddingLeft: 0
    }
  },
  wrapper: {
    padding: uikitStyles.theme.space.xs,
    position: "relative",
    display: "flex",
    justifyContent: "flex-start",
    alignItems: "center",
    gap: uikitStyles.theme.space.xs,
    borderColor: uikitStyles.theme.colors.atmo4,
    paddingLeft: uikitStyles.theme.space.sm
  },
  /** @deprecated use classes.global $wrapper */
  globalSectionArea: {},
  /** @deprecated use classes.section $wrapper */
  globalWrapperComplement: {},
  backButton: {},
  name: {
    flexGrow: 1
  },
  /** @deprecated use classes.name */
  sectionName: {},
  actions: {
    display: "flex",
    alignItems: "center",
    gap: uikitStyles.theme.space.xs,
    // TODO: remove in v6 in favour of consistently setting `flexGrow: 1` in a title "wrapper"
    marginLeft: "auto"
  }
});
const getBreakpointStyles = (isUpMd, isSmDown) => {
  const unit = isUpMd ? 4 : isSmDown ? 2 : 0;
  if (!unit) return {};
  return {
    width: `calc(100% - 2 * ${uikitStyles.theme.spacing(unit)})`,
    marginLeft: uikitStyles.theme.spacing(unit),
    marginRight: uikitStyles.theme.spacing(unit)
  };
};
exports.getBreakpointStyles = getBreakpointStyles;
exports.staticClasses = staticClasses;
exports.useClasses = useClasses;
