"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const uikitReactUtils = require("@hitachivantara/uikit-react-utils");
const uikitStyles = require("@hitachivantara/uikit-styles");
const focusUtils = require("../../utils/focusUtils.cjs");
const { staticClasses, useClasses } = uikitReactUtils.createClasses("HvDropZone", {
  dropZoneContainer: {
    position: "relative",
    width: "100%",
    display: "flex",
    border: `1px dashed ${uikitStyles.theme.colors.secondary_60}`,
    cursor: "pointer",
    backgroundColor: uikitStyles.theme.colors.atmo1,
    borderRadius: uikitStyles.theme.radii.round,
    "&:hover": {
      borderColor: uikitStyles.theme.colors.secondary
    },
    "&:focus-within": {
      borderColor: uikitStyles.theme.colors.secondary,
      ...focusUtils.outlineStyles
    }
  },
  dropZoneLabelsGroup: {
    display: "flex",
    justifyContent: "start",
    "& label:nth-of-type(1)": {},
    "& p:nth-of-type(2)": {
      marginLeft: "auto"
    }
  },
  dragAction: {
    backgroundColor: uikitStyles.theme.colors.atmo1,
    borderColor: uikitStyles.theme.colors.primary
  },
  dropZoneContainerDisabled: {
    color: uikitStyles.theme.colors.secondary_60,
    backgroundColor: uikitStyles.theme.colors.atmo3,
    borderColor: "currentcolor",
    cursor: "not-allowed",
    "&:hover": {
      borderColor: "currentcolor"
    }
  },
  inputArea: {
    opacity: 0,
    width: "100%",
    position: "absolute",
    height: "100%",
    cursor: "pointer",
    "&:disabled": {
      cursor: "not-allowed"
    }
  },
  dropArea: {
    display: "flex",
    margin: uikitStyles.theme.spacing("md", "auto"),
    gap: uikitStyles.theme.space.xs,
    minHeight: 48
  },
  dropZoneAreaLabels: {
    display: "flex",
    maxWidth: 120,
    margin: "auto"
  },
  dropZoneAreaIcon: {},
  dropZoneLabel: {},
  dragText: {},
  selectFilesText: {
    fontWeight: uikitStyles.theme.typography.label.fontWeight
  }
});
exports.staticClasses = staticClasses;
exports.useClasses = useClasses;
