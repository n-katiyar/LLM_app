"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("react/jsx-runtime");
const React = require("react");
const setId = require("../../utils/setId.cjs");
const FilterGroupContext = require("../FilterGroupContext.cjs");
const LeftPanel_styles = require("./LeftPanel.styles.cjs");
const Counter = require("../Counter/Counter.cjs");
const Panel = require("../../Panel/Panel.cjs");
const ListContainer = require("../../ListContainer/ListContainer.cjs");
const ListItem = require("../../ListContainer/ListItem/ListItem.cjs");
const OverflowTooltip = require("../../OverflowTooltip/OverflowTooltip.cjs");
const HvFilterGroupLeftPanel = ({
  id,
  className,
  emptyElement,
  classes: classesProp
}) => {
  const { classes } = LeftPanel_styles.useClasses(classesProp);
  const { filterOptions, activeGroup, setActiveGroup } = React.useContext(FilterGroupContext.HvFilterGroupContext);
  return /* @__PURE__ */ jsxRuntime.jsx(Panel.HvPanel, { id: setId.setId(id, "leftPanel"), className, children: filterOptions.length > 0 ? /* @__PURE__ */ jsxRuntime.jsx(ListContainer.HvListContainer, { id: setId.setId(id, "leftPanel-list"), condensed: true, interactive: true, children: filterOptions.map((group, index) => /* @__PURE__ */ jsxRuntime.jsx(
    ListItem.HvListItem,
    {
      className: classes.listItem,
      onClick: () => setActiveGroup(index),
      selected: filterOptions[activeGroup].id === group.id,
      endAdornment: /* @__PURE__ */ jsxRuntime.jsx(Counter.HvFilterGroupCounter, { groupId: group.id }),
      children: /* @__PURE__ */ jsxRuntime.jsx(OverflowTooltip.HvOverflowTooltip, { data: group.name })
    },
    group.id || group.name
  )) }) : emptyElement });
};
exports.filterGroupLeftPanelClasses = LeftPanel_styles.staticClasses;
exports.HvFilterGroupLeftPanel = HvFilterGroupLeftPanel;
