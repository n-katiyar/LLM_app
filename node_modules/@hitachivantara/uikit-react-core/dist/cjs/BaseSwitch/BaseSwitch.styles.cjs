"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const uikitReactUtils = require("@hitachivantara/uikit-react-utils");
const uikitStyles = require("@hitachivantara/uikit-styles");
const focusUtils = require("../utils/focusUtils.cjs");
const { staticClasses, useClasses } = uikitReactUtils.createClasses("HvBaseSwitch", {
  root: {
    padding: 0,
    cursor: "pointer",
    width: "40px",
    height: "32px",
    alignItems: "center",
    justifyContent: "center",
    borderRadius: uikitStyles.theme.radii.base,
    "&:hover": {
      backgroundColor: uikitStyles.theme.colors.containerBackgroundHover
    },
    // Higher CSS specificity here
    "& $switchBase": {
      "&:hover": {
        backgroundColor: "transparent"
      },
      "&$checked": {
        transform: "translateX(16px)",
        "& + $track": {
          opacity: 1,
          backgroundColor: uikitStyles.theme.colors.secondary
        },
        "&:hover": {
          backgroundColor: "transparent"
        }
      }
    },
    // Higher CSS specificity here
    "&$disabled": {
      "& $switchBase": {
        "& + $track": {
          opacity: 1,
          backgroundColor: uikitStyles.theme.colors.atmo3,
          border: `solid 1px ${uikitStyles.theme.colors.secondary_60}`
        }
      }
    }
  },
  switch: {
    width: "40px",
    height: "32px",
    padding: 0,
    "&$readOnly $switchBase": {
      cursor: "default"
    }
  },
  switchBase: {
    width: "40px",
    height: "32px",
    padding: 0
  },
  track: {
    opacity: 1,
    borderRadius: "15px",
    height: "16px",
    width: "32px",
    border: `solid 1px ${uikitStyles.theme.colors.secondary}`,
    backgroundColor: uikitStyles.theme.colors.atmo1
  },
  thumb: {
    position: "relative",
    left: "-9px",
    width: "12px",
    height: "12px",
    border: `solid 1px ${uikitStyles.theme.colors.secondary}`,
    backgroundColor: uikitStyles.theme.colors.atmo1,
    marginLeft: "2px",
    marginTop: 0,
    boxShadow: "none"
  },
  checked: {},
  disabled: {
    cursor: "not-allowed",
    "& $switch": {
      cursor: "not-allowed"
    },
    "& $thumb": {
      backgroundColor: uikitStyles.theme.colors.atmo3,
      border: `solid 1px ${uikitStyles.theme.colors.secondary_60}`
    }
  },
  readOnly: {},
  focusVisible: {
    borderRadius: "8px",
    ...focusUtils.outlineStyles
  }
});
exports.staticClasses = staticClasses;
exports.useClasses = useClasses;
