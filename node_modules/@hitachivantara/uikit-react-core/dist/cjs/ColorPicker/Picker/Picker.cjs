"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("react/jsx-runtime");
const React = require("react");
const reactColor = require("react-color");
const common = require("react-color/lib/components/common");
const uikitReactUtils = require("@hitachivantara/uikit-react-utils");
const Picker_styles = require("./Picker.styles.cjs");
const Fields = require("../Fields/Fields.cjs");
const Typography = require("../../Typography/Typography.cjs");
const Component = (props) => {
  const {
    onChange,
    rgb,
    hsl,
    hsv,
    hex,
    title,
    classes: classesProp
  } = uikitReactUtils.useDefaultProps("HvColorPickerPicker", props);
  const { activeTheme } = uikitReactUtils.useTheme();
  const { classes, cx } = Picker_styles.useClasses(classesProp);
  const SaturationPointer = React.useCallback(
    () => /* @__PURE__ */ jsxRuntime.jsx("div", { className: classes?.saturationPointer }),
    [classes?.saturationPointer]
  );
  const HueSlider = React.useCallback(
    () => /* @__PURE__ */ jsxRuntime.jsx(
      "div",
      {
        className: cx(
          classes?.hueSlider,
          activeTheme?.colorPicker.hueDirection
        )
      }
    ),
    [activeTheme?.colorPicker.hueDirection, classes?.hueSlider, cx]
  );
  return /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, { children: [
    title && /* @__PURE__ */ jsxRuntime.jsx(Typography.HvTypography, { className: classes.title, variant: "caption1", children: title }),
    /* @__PURE__ */ jsxRuntime.jsxs("div", { className: classes.pickers, children: [
      /* @__PURE__ */ jsxRuntime.jsx("div", { className: classes.saturation, children: /* @__PURE__ */ jsxRuntime.jsx(
        common.Saturation,
        {
          hsl,
          hsv,
          onChange,
          pointer: SaturationPointer
        }
      ) }),
      /* @__PURE__ */ jsxRuntime.jsx("div", { className: classes.hue, children: /* @__PURE__ */ jsxRuntime.jsx(
        common.Hue,
        {
          direction: activeTheme?.colorPicker.hueDirection,
          hsl,
          onChange,
          pointer: HueSlider
        }
      ) })
    ] }),
    /* @__PURE__ */ jsxRuntime.jsx(
      Fields.Fields,
      {
        className: classes.fields,
        rgb,
        hex,
        onChange
      }
    )
  ] });
};
const Picker = reactColor.CustomPicker(Component);
exports.colorPickerPickerClasses = Picker_styles.staticClasses;
exports.Picker = Picker;
