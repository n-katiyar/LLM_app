"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("react/jsx-runtime");
const common = require("react-color/lib/components/common");
const uikitReactUtils = require("@hitachivantara/uikit-react-utils");
const PresetColors_styles = require("./PresetColors.styles.cjs");
const Typography = require("../../Typography/Typography.cjs");
const PresetColors = (props) => {
  const {
    onClick,
    colors,
    title,
    className,
    classes: classesProp
  } = uikitReactUtils.useDefaultProps("HvColorPickerPresetColors", props);
  const { classes, cx } = PresetColors_styles.useClasses(classesProp);
  const handleClick = (hex) => {
    onClick({
      hex,
      source: "hex"
    });
  };
  return /* @__PURE__ */ jsxRuntime.jsxs("div", { className: cx(classes.root, className), children: [
    title && /* @__PURE__ */ jsxRuntime.jsx(Typography.HvTypography, { className: classes.title, variant: "caption1", children: title }),
    /* @__PURE__ */ jsxRuntime.jsx("div", { className: classes.colors, children: colors.map((color, index) => /* @__PURE__ */ jsxRuntime.jsx(
      "div",
      {
        className: classes.swatchWrap,
        children: /* @__PURE__ */ jsxRuntime.jsx(
          common.Swatch,
          {
            color,
            onClick: handleClick,
            focusStyle: {
              boxShadow: `inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px ${color}`
            }
          }
        )
      },
      `recommended-color-${color}-${index}`
    )) })
  ] });
};
exports.colorPickerPresetColorsClasses = PresetColors_styles.staticClasses;
exports.PresetColors = PresetColors;
