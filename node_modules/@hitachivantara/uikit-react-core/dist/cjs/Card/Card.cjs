"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("react/jsx-runtime");
const React = require("react");
const uikitReactUtils = require("@hitachivantara/uikit-react-utils");
const uikitStyles = require("@hitachivantara/uikit-styles");
const Card_styles = require("./Card.styles.cjs");
const HvCard = React.forwardRef(function HvCard2(props, ref) {
  const {
    classes: classesProp,
    style,
    className,
    children,
    icon,
    selectable = false,
    selected = false,
    statusColor = "sema0",
    bgcolor,
    ...others
  } = uikitReactUtils.useDefaultProps("HvCard", props);
  const { classes, cx } = Card_styles.useClasses(classesProp);
  const barColor = statusColor !== "sema0" && statusColor || selected && "secondary" || "atmo4";
  return /* @__PURE__ */ jsxRuntime.jsxs(
    "div",
    {
      ref,
      style: uikitReactUtils.mergeStyles(style, {
        "--bg-color": uikitStyles.getColor(bgcolor),
        "--bar-height": `${selected ? 4 : 2}px`,
        "--bar-color": uikitStyles.getColor(barColor)
      }),
      className: cx(
        "HvIsCardGridElement",
        classes.root,
        {
          [classes.selectable]: selectable,
          [classes.selected]: selected
        },
        className
      ),
      ...others,
      children: [
        /* @__PURE__ */ jsxRuntime.jsxs("div", { className: classes.semanticContainer, children: [
          /* @__PURE__ */ jsxRuntime.jsx("div", { className: classes.semanticBar }),
          /* @__PURE__ */ jsxRuntime.jsx("div", { className: classes.icon, children: icon })
        ] }),
        children
      ]
    }
  );
});
exports.cardClasses = Card_styles.staticClasses;
exports.HvCard = HvCard;
