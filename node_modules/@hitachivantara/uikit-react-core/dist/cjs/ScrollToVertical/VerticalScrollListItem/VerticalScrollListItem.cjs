"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("react/jsx-runtime");
const uikitReactUtils = require("@hitachivantara/uikit-react-utils");
const VerticalScrollListItem_styles = require("./VerticalScrollListItem.styles.cjs");
const Tooltip = require("../../Tooltip/Tooltip.cjs");
const HvVerticalScrollListItem = (props) => {
  const {
    id,
    className,
    classes: classesProp,
    selected,
    label,
    tooltipPlacement = "left",
    href,
    ...others
  } = uikitReactUtils.useDefaultProps("HvVerticalScrollListItem", props);
  const { classes, cx } = VerticalScrollListItem_styles.useClasses(classesProp);
  const Component = href != null ? "a" : "div";
  return /* @__PURE__ */ jsxRuntime.jsx("li", { id, className: cx(classes.root, className), "aria-current": selected, children: /* @__PURE__ */ jsxRuntime.jsx(Tooltip.HvTooltip, { title: label, placement: tooltipPlacement, children: /* @__PURE__ */ jsxRuntime.jsx(
    Component,
    {
      role: href == null ? "button" : void 0,
      tabIndex: 0,
      className: cx(classes.button, classes.text),
      href,
      ...others,
      children: /* @__PURE__ */ jsxRuntime.jsx(
        "div",
        {
          className: cx(classes.icon, {
            [classes.notSelected]: !selected
          })
        }
      )
    }
  ) }) });
};
exports.verticalScrollListItemClasses = VerticalScrollListItem_styles.staticClasses;
exports.HvVerticalScrollListItem = HvVerticalScrollListItem;
