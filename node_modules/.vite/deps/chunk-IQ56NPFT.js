import {
  __export
} from "./chunk-LK32TJAX.js";

// node_modules/@hitachivantara/uikit-styles/dist/esm/tokens/index.mjs
var tokens_exports = {};
__export(tokens_exports, {
  breakpoints: () => breakpoints,
  colors: () => colors,
  fontFamily: () => fontFamily,
  fontSizes: () => fontSizes,
  fontWeights: () => fontWeights,
  lineHeights: () => lineHeights,
  radii: () => radii,
  sizes: () => sizes,
  space: () => space,
  zIndices: () => zIndices
});

// node_modules/@hitachivantara/uikit-styles/dist/esm/tokens/breakpoints.mjs
var breakpoints = {
  unit: "px",
  step: 5,
  values: {
    xs: 0,
    sm: 600,
    md: 960,
    lg: 1270,
    xl: 1920
  }
};

// node_modules/@hitachivantara/uikit-styles/dist/esm/tokens/colors.mjs
var base = {
  base_light: "#FBFCFC",
  base_dark: "#414141"
};
var categorical = {
  cat1_180: "#2D4B87",
  cat1_160: "#4767A7",
  cat1_140: "#5C7CBB",
  cat1_120: "#7795D1",
  cat1: "#95AFE8",
  cat1_80: "#B3C6EE",
  cat1_60: "#BDCDEF",
  cat1_40: "#D2DEF5",
  cat1_20: "#E7EDF9",
  cat2_180: "#764419",
  cat2_160: "#9B5F2A",
  cat2_140: "#B4733A",
  cat2_120: "#CD884B",
  cat2: "#E89E5D",
  cat2_80: "#EBB07C",
  cat2_60: "#EFC39B",
  cat2_40: "#F4D7BD",
  cat2_20: "#F8EADC",
  cat3_180: "#0B513E",
  cat3_160: "#1C6F58",
  cat3_140: "#328871",
  cat3_120: "#50A18B",
  cat3: "#73BAA5",
  cat3_80: "#8EC6B6",
  cat3_60: "#A9D3C7",
  cat3_40: "#C5E2DA",
  cat3_20: "#E0EFEB",
  cat4_180: "#131D55",
  cat4_160: "#283373",
  cat4_140: "#3C4784",
  cat4_120: "#525C93",
  cat4: "#6F749F",
  cat4_80: "#8A8EB1",
  cat4_60: "#A6A9C3",
  cat4_40: "#C3C6D7",
  cat4_20: "#DFE1EA",
  cat5_180: "#561C1E",
  cat5_160: "#722D30",
  cat5_140: "#8F4245",
  cat5_120: "#AC5B5E",
  cat5: "#D17A7C",
  cat5_80: "#D99395",
  cat5_60: "#E1ADAE",
  cat5_40: "#EBC9C9",
  cat5_20: "#F3E2E3",
  cat6_180: "#A27B21",
  cat6_160: "#BC9336",
  cat6_140: "#CFA74D",
  cat6_120: "#E3BD66",
  cat6: "#FFDA8A",
  cat6_80: "#FEE0A0",
  cat6_60: "#FDE7B7",
  cat6_40: "#FDEFCF",
  cat6_20: "#FCF6E6",
  cat7_180: "#0A4A61",
  cat7_160: "#1B6783",
  cat7_140: "#31809D",
  cat7_120: "#519FBB",
  cat7: "#7DC1DB",
  cat7_80: "#96CCE1",
  cat7_60: "#AFD8E7",
  cat7_40: "#C9E5F0",
  cat7_20: "#E2F1F6",
  cat8_180: "#45243A",
  cat8_160: "#613753",
  cat8_140: "#7B4B6B",
  cat8_120: "#996487",
  cat8: "#B67EA3",
  cat8_80: "#C396B4",
  cat8_60: "#D1AFC6",
  cat8_40: "#E0CAD9",
  cat8_20: "#EDE3EB",
  cat9_180: "#946D42",
  cat9_160: "#AD804E",
  cat9_140: "#C59259",
  cat9_120: "#D9A162",
  cat9: "#F2BC66",
  cat9_80: "#F3C883",
  cat9_60: "#F5D5A1",
  cat9_40: "#F8E3C1",
  cat9_20: "#FAF0DE",
  cat10_180: "#11415B",
  cat10_160: "#1E5877",
  cat10_140: "#2A6C91",
  cat10_120: "#347BA2",
  cat10: "#2D86B3",
  cat10_80: "#569DC1",
  cat10_60: "#7FB4CF",
  cat10_40: "#A9CDE0",
  cat10_20: "#D2E5EE",
  cat11_180: "#873E4A",
  cat11_160: "#A1525E",
  cat11_140: "#B86774",
  cat11_120: "#CF7D8A",
  cat11: "#FC9AAA",
  cat11_80: "#FBADBA",
  cat11_60: "#FBC0CA",
  cat11_40: "#FCD5DC",
  cat11_20: "#FCE9EC",
  cat12_180: "#375736",
  cat12_160: "#476C46",
  cat12_140: "#5C855B",
  cat12_120: "#719B70",
  cat12: "#8EBA8C",
  cat12_80: "#A3C6A2",
  cat12_60: "#B9D3B8",
  cat12_40: "#D0E2D0",
  cat12_20: "#E5EFE6",
  cat13: "#DE64BD",
  cat14: "#419393",
  cat15: "#F5996E",
  cat16: "#528BBF",
  cat17: "#EB95AF",
  cat18: "#73BF9C",
  cat19: "#B55984",
  cat20: "#F7B552",
  cat21: "#869F1E",
  cat22: "#A4991C",
  cat23: "#C4931A",
  cat24: "#E68C17",
  cat25: "#F27034",
  cat26: "#FF5252",
  cat27: "#EC3D57",
  cat28: "#D8265D"
};
var common = {
  ...base,
  ...categorical
};
var accentLight = {
  secondary: "#414141",
  primary: "#2064B4",
  primary_80: "#1775E0",
  primary_20: "#1775E019",
  brand: "#CC0000",
  secondary_80: "#6C6B6B",
  secondary_60: "#999999"
};
var atmosphereLight = {
  atmo1: "#FBFCFC",
  atmo2: "#F4F5F5",
  atmo3: "#E8E8E8",
  atmo4: "#CCCED0"
};
var semanticLight = {
  positive: "#478B1A",
  positive_80: "#709C27",
  positive_120: "#227A10",
  neutral: "#4D8AC0",
  warning: "#F9C846",
  warning_120: "#F8AC39",
  warning_140: "#F27C27",
  negative: "#D43136",
  negative_80: "#ED4747",
  negative_120: "#B41B3A",
  catastrophic: "#930A80",
  sema6: "#AA00FF",
  neutral_20: "#D8E6F1",
  positive_20: "#D7E6CF",
  negative_20: "#F4D3D4",
  sema10: "#CE703D",
  sema11: "#D36041",
  sema12: "#CF4E38",
  sema13: "#CB3B30",
  sema14: "#BA2626",
  sema15: "#6589CB",
  sema16: "#4D8AC0",
  sema17: "#3388B1",
  sema18: "#1A85A1",
  sema19: "#00838F",
  warning_20: "#FBF2D8"
};
var supportLight = {
  supp1: "#0F8B8D",
  supp2: "#734B6D",
  supp3: "#4E7599",
  supp4: "#C19C31",
  supp5: "#546B6B"
};
var shadowLight = {
  shad1: "rgba(65, 65, 65, 0.12)",
  shadow: "0 2px 12px rgba(65,65,65,0.12)"
};
var utilsLight = {
  backgroundColor: atmosphereLight.atmo2,
  containerBackgroundHover: accentLight.primary_20
};
var newLight = {
  primary: accentLight.primary,
  primaryAction: accentLight.primary_80,
  primaryStrong: accentLight.primary_80,
  primarySubtle: accentLight.primary_20,
  primaryDimmed: accentLight.primary_20,
  success: semanticLight.positive,
  successAction: semanticLight.positive_80,
  successStrong: semanticLight.positive_120,
  successDimmed: semanticLight.positive_20,
  warning: semanticLight.warning,
  warningAction: semanticLight.warning_120,
  warningStrong: semanticLight.warning_140,
  warningDimmed: semanticLight.warning_20,
  error: semanticLight.negative,
  errorAction: semanticLight.negative_80,
  errorStrong: semanticLight.negative_120,
  errorDimmed: semanticLight.negative_20,
  neutral: semanticLight.neutral,
  neutralAction: semanticLight.neutral,
  neutralStrong: semanticLight.neutral,
  neutralDimmed: semanticLight.neutral_20,
  text: accentLight.secondary,
  textSubtle: accentLight.secondary_80,
  textDisabled: accentLight.secondary_60,
  textDimmed: atmosphereLight.atmo1,
  link: accentLight.primary,
  linkActive: accentLight.primary,
  divider: atmosphereLight.atmo4,
  dividerSubtle: atmosphereLight.atmo3,
  dividerDimmed: atmosphereLight.atmo2,
  bgPage: atmosphereLight.atmo2,
  bgSurface: atmosphereLight.atmo1,
  bgActive: atmosphereLight.atmo3,
  bgHover: accentLight.primary_20,
  bgDisabled: atmosphereLight.atmo3,
  bgOverlay: `color-mix(in srgb, ${atmosphereLight.atmo4} 80%, transparent)`,
  dimmer: "#FFFFFF",
  borderDisabled: atmosphereLight.atmo3
};
var accentDark = {
  secondary: "#CCCCCC",
  primary: "#639FE3",
  primary_80: "#82B2E8",
  primary_20: "#82B2E84C",
  brand: "#CC0000",
  secondary_80: "#9A9999",
  secondary_60: "#656565"
};
var atmosphereDark = {
  atmo1: "#313131",
  atmo2: "#282828",
  atmo3: "#1F1F1F",
  atmo4: "#4B4B4B"
};
var semanticDark = {
  positive: "#84D930",
  positive_80: "#70BF21",
  positive_120: "#63A621",
  neutral: "#7EBAD6",
  warning: "#E68C17",
  warning_120: "#F57B36",
  warning_140: "#FE6B51",
  negative: "#FF5E6C",
  negative_80: "#EC3D57",
  negative_120: "#D92750",
  catastrophic: "#9A76E7",
  sema6: "#928FFF",
  neutral_20: "#D8E6F1",
  positive_20: "#D7E6CF",
  negative_20: "#F4D3D4",
  sema10: "#F4CAB0",
  sema11: "#F1B7A0",
  sema12: "#EEA291",
  sema13: "#E98B82",
  sema14: "#E57373",
  sema15: "#80DEEA",
  sema16: "#4DD0E1",
  sema17: "#26C6DA",
  sema18: "#00ACC1",
  sema19: "#00A0B7",
  warning_20: "#FBF2D8"
};
var supportDark = {
  supp2: "#734B6D",
  supp3: "#4E7599",
  supp4: "#C19C31",
  supp5: "#546B6B",
  supp1: "#0F8B8D"
};
var shadowDark = {
  shad1: "rgba(0,0,0,.16)",
  shadow: "0 3px 5px rgba(0,0,0,.16)"
};
var utilsDark = {
  backgroundColor: atmosphereDark.atmo2,
  containerBackgroundHover: accentDark.primary_20
};
var newDark = {
  primary: accentDark.primary,
  primaryAction: accentDark.primary_80,
  primaryStrong: accentDark.primary_80,
  primarySubtle: accentDark.primary_20,
  primaryDimmed: accentDark.primary_20,
  success: semanticDark.positive,
  successAction: semanticDark.positive_80,
  successStrong: semanticDark.positive_120,
  successDimmed: semanticDark.positive_20,
  warning: semanticDark.warning,
  warningAction: semanticDark.warning_120,
  warningStrong: semanticDark.warning_140,
  warningDimmed: semanticDark.warning_20,
  error: semanticDark.negative,
  errorAction: semanticDark.negative_80,
  errorStrong: semanticDark.negative_120,
  errorDimmed: semanticDark.negative_20,
  neutral: semanticDark.neutral,
  neutralAction: semanticDark.neutral,
  neutralStrong: semanticDark.neutral,
  neutralDimmed: semanticDark.neutral_20,
  text: accentDark.secondary,
  textSubtle: accentDark.secondary_80,
  textDisabled: accentDark.secondary_60,
  textDimmed: atmosphereDark.atmo1,
  link: accentDark.primary,
  linkActive: accentDark.primary,
  divider: atmosphereDark.atmo4,
  dividerSubtle: atmosphereDark.atmo3,
  dividerDimmed: atmosphereDark.atmo2,
  bgPage: atmosphereDark.atmo2,
  bgSurface: atmosphereDark.atmo1,
  bgActive: atmosphereDark.atmo3,
  bgHover: accentDark.primary_20,
  bgDisabled: atmosphereDark.atmo3,
  bgOverlay: `color-mix(in srgb, ${atmosphereDark.atmo4} 80%, transparent)`,
  dimmer: "#000000",
  borderDisabled: atmosphereDark.atmo3
};
var colors = {
  common,
  light: {
    ...accentLight,
    ...atmosphereLight,
    ...semanticLight,
    ...supportLight,
    ...shadowLight,
    ...utilsLight,
    /** new Pentaho+ colors @internal @deprecated INTERNAL USE ONLY */
    pp: newLight
  },
  dark: {
    ...accentDark,
    ...atmosphereDark,
    ...semanticDark,
    ...supportDark,
    ...shadowDark,
    ...utilsDark,
    /** new Pentaho+ colors @internal @deprecated INTERNAL USE ONLY */
    pp: newDark
  }
};

// node_modules/@hitachivantara/uikit-styles/dist/esm/tokens/radii.mjs
var radii = {
  none: "0px",
  base: "2px",
  round: "6px",
  circle: "50%",
  full: "9999px"
};

// node_modules/@hitachivantara/uikit-styles/dist/esm/tokens/space.mjs
var space = {
  base: 8,
  xxs: "4px",
  xs: "8px",
  sm: "16px",
  md: "24px",
  lg: "48px",
  xl: "80px"
};

// node_modules/@hitachivantara/uikit-styles/dist/esm/tokens/sizes.mjs
var sizes = {
  xs: "28px",
  sm: "32px",
  md: "36px",
  lg: "40px",
  xl: "44px"
};

// node_modules/@hitachivantara/uikit-styles/dist/esm/tokens/typography.mjs
var fontFamily = {
  body: "'Open Sans', Arial, Helvetica, sans-serif"
};
var fontSizes = {
  xs: "10px",
  sm: "12px",
  base: "14px",
  lg: "16px",
  xl: "20px",
  xl2: "24px",
  xl3: "32px",
  xl4: "42px"
};
var fontWeights = {
  hairline: "100",
  thin: "200",
  light: "300",
  normal: "400",
  medium: "500",
  semibold: "600",
  bold: "700",
  extrabold: "800",
  black: "900"
};
var lineHeights = {
  none: "21px",
  xs: "16px",
  sm: "18px",
  base: "21px",
  lg: "24px",
  xl: "30px",
  xl2: "36px",
  xl3: "48px",
  xl4: "63px"
};

// node_modules/@hitachivantara/uikit-styles/dist/esm/tokens/zIndices.mjs
var zIndices = {
  hide: -1,
  base: 0,
  docked: 10,
  sticky: 1e3,
  fab: 1050,
  banner: 1100,
  overlay: 1200,
  modal: 1300,
  dropdown: 1400,
  popover: 1500,
  tooltip: 1600,
  skipLink: 1700,
  toast: 1800
};

// node_modules/@hitachivantara/uikit-styles/dist/esm/tokens/colorsPalette.mjs
var slate = {
  50: "#F8FAFC",
  100: "#F1F5F9",
  200: "#E2E8F0",
  300: "#CBD5E1",
  400: "#94A3B8",
  500: "#64748B",
  600: "#475569",
  700: "#334155",
  800: "#1E293B",
  900: "#0F172A",
  950: "#020617"
};
var neutral = {
  50: "#FAFAFA",
  100: "#F5F5F5",
  200: "#E5E5E5",
  300: "#D4D4D4",
  400: "#A3A3A3",
  500: "#737373",
  600: "#525252",
  700: "#404040",
  800: "#262626",
  900: "#171717",
  950: "#0A0A0A"
};
var blue = {
  50: "#EFF6FF",
  100: "#DBEAFE",
  200: "#BFDBFE",
  300: "#93C5FD",
  400: "#60A5FA",
  500: "#3B82F6",
  600: "#2563EB",
  700: "#1D4ED8",
  800: "#1E40AF",
  900: "#1E3A8A",
  950: "#172554"
};
var red = {
  50: "#FEF2F2",
  100: "#FEE2E2",
  200: "#FECACA",
  300: "#FCA5A5",
  400: "#F87171",
  500: "#EF4444",
  600: "#DC2626",
  700: "#B91C1C",
  800: "#991B1B",
  900: "#7F1D1D",
  950: "#450A0A"
};
var orange = {
  50: "#FFF7ED",
  100: "#FFEDD5",
  200: "#FED7AA",
  300: "#FDBA74",
  400: "#FB923C",
  500: "#F97316",
  600: "#EA580C",
  700: "#C2410C",
  800: "#9A3412",
  900: "#7C2D12",
  950: "#431407"
};
var amber = {
  50: "#FFFBEB",
  100: "#FEF3C7",
  200: "#FDE68A",
  300: "#FCD34D",
  400: "#FBBF24",
  500: "#F59E0B",
  600: "#D97706",
  700: "#B45309",
  800: "#92400E",
  900: "#78350F",
  950: "#451A03"
};
var yellow = {
  50: "#FEFCE8",
  100: "#FEF9C3",
  200: "#FEF08A",
  300: "#FDE047",
  400: "#FACC15",
  500: "#EAB308",
  600: "#CA8A04",
  700: "#A16207",
  800: "#854D0E",
  900: "#713F12",
  950: "#422006"
};
var lime = {
  50: "#F7FEE7",
  100: "#ECFCCB",
  200: "#D9F99D",
  300: "#BEF264",
  400: "#A3E635",
  500: "#84CC16",
  600: "#65A30D",
  700: "#4D7C0F",
  800: "#3F6212",
  900: "#365314",
  950: "#1A2E05"
};
var green = {
  50: "#F0FDF4",
  100: "#DCFCE7",
  200: "#BBF7D0",
  300: "#86EFAC",
  400: "#4ADE80",
  500: "#22C55E",
  600: "#16A34A",
  700: "#15803D",
  800: "#166534",
  900: "#14532D",
  950: "#052E16"
};
var emerald = {
  100: "#D1FAE5"
};
var teal = {
  50: "#F0FDFA",
  100: "#CCFBF1",
  200: "#99F6E4",
  300: "#5EEAD4",
  400: "#2DD4BF",
  500: "#14B8A6",
  600: "#0D9488",
  700: "#0F766E",
  800: "#115E59",
  900: "#134E4A",
  950: "#042F2E"
};
var cyan = {
  50: "#ECFEFF",
  100: "#CFFAFE",
  200: "#A5F3FC",
  300: "#67E8F9",
  400: "#22D3EE",
  500: "#06B6D4",
  600: "#0891B2",
  700: "#0E7490",
  800: "#155E75",
  900: "#164E63",
  950: "#083344"
};
var sky = {
  50: "#F0F9FF",
  100: "#E0F2FE",
  200: "#BAE6FD",
  300: "#7DD3FC",
  400: "#38BDF8",
  500: "#0EA5E9",
  600: "#0284C7",
  700: "#0369A1",
  800: "#075985",
  900: "#0C4A6E",
  950: "#082F49"
};
var indigo = {
  50: "#EEF2FF",
  100: "#E0E7FF",
  200: "#C7D2FE",
  300: "#A5B4FC",
  400: "#818CF8",
  500: "#6366F1",
  600: "#4F46E5",
  700: "#4338CA",
  800: "#3730A3",
  900: "#312E81",
  950: "#1E1B4B"
};
var violet = {
  50: "#F5F3FF",
  100: "#EDE9FE",
  200: "#DDD6FE",
  300: "#C4B5FD",
  400: "#A78BFA",
  500: "#8B5CF6",
  600: "#7C3AED",
  700: "#6D28D9",
  800: "#5B21B6",
  900: "#4C1D95",
  950: "#2E1065"
};
var fuchsia = {
  50: "#FDF4FF",
  100: "#FAE8FF",
  200: "#F5D0FE",
  300: "#F0ABFC",
  400: "#E879F9",
  500: "#D946EF",
  600: "#C026D3",
  700: "#A21CAF",
  800: "#86198F",
  900: "#701A75",
  950: "#4A044E"
};
var pink = {
  50: "#FDF2F8",
  100: "#FCE7F3",
  200: "#FBCFE8",
  300: "#F9A8D4",
  400: "#F472B6",
  500: "#EC4899",
  600: "#DB2777",
  700: "#BE185D",
  800: "#9D174D",
  900: "#831843",
  950: "#500724"
};
var rose = {
  50: "#FFF1F2",
  100: "#FFE4E6",
  200: "#FECDD3",
  300: "#FDA4AF",
  400: "#FB7185",
  500: "#F43F5E",
  600: "#E11D48",
  700: "#BE123C",
  800: "#9F1239",
  900: "#881337",
  950: "#4C0519"
};
var palette = {
  slate,
  neutral,
  blue,
  red,
  amber,
  orange,
  yellow,
  lime,
  green,
  teal,
  cyan,
  sky,
  indigo,
  violet,
  fuchsia,
  pink,
  rose
};

// node_modules/@hitachivantara/uikit-styles/dist/esm/utils.mjs
var spacingUtil = (value, vars) => {
  switch (typeof value) {
    case "number":
      return value === 0 ? "0" : `calc(${vars.space.base} * ${value}px)`;
    case "string":
      return vars.space[value] || value;
    default:
      return value;
  }
};
var spacingUtilOld = (value, vars) => {
  switch (typeof value) {
    case "number":
      return `${value}px`;
    case "string":
      return vars.space[value] || value;
    default:
      return "0px";
  }
};
var toCSSVars = (obj, prefix = "--uikit") => {
  const vars = {};
  for (const [key, value] of Object.entries(obj)) {
    if (typeof value === "object") {
      const nestedVars = toCSSVars(value, `${prefix}-${key}`);
      for (const [nestedKey, nestedValue] of Object.entries(nestedVars)) {
        vars[nestedKey] = nestedValue;
      }
    } else {
      vars[`${prefix}-${key}`] = value;
    }
  }
  return vars;
};
var hasMultipleArgs = (args) => {
  return args.length > 1;
};
var mapCSSVars = (obj, prefix = "--uikit") => {
  const vars = {};
  for (const [key, value] of Object.entries(obj)) {
    if (typeof value === "object") {
      vars[key] = mapCSSVars(value, `${prefix}-${key}`);
    } else {
      vars[key] = `var(${prefix}-${key})`;
    }
  }
  return vars;
};
var mergeTheme = (...objects) => {
  const isObject = (obj) => obj && typeof obj === "object";
  return objects.reduce((prev, obj) => {
    Object.keys(obj).forEach((key) => {
      const pVal = prev[key];
      const oVal = obj[key];
      if (isObject(pVal) && isObject(oVal)) {
        prev[key] = mergeTheme(pVal, oVal);
      } else {
        prev[key] = oVal !== void 0 ? oVal : pVal;
      }
    });
    return prev;
  }, {});
};
var parseTheme = (themes2, theme2 = "", colorMode = "") => {
  const names = themes2.map((t) => t.name);
  const selectedTheme = names.includes(theme2) ? theme2 : names[0];
  const themeStructure = themes2.find((t) => t.name === selectedTheme) || themes2[0];
  const colorModes = Object.keys(themeStructure.colors.modes);
  const selectedMode = colorModes.includes(colorMode) ? colorMode : colorModes[0];
  const colorScheme = themeStructure.colors.modes[selectedMode].type;
  return {
    theme: themeStructure,
    selectedTheme,
    selectedMode,
    colorModes,
    colorScheme
  };
};
var getThemesList = (themes2) => {
  const list = {};
  Object.keys(themes2).forEach((themeName) => {
    const theme2 = themes2[themeName];
    const colorModes = Object.keys(theme2.colors.modes);
    list[themeName] = {
      colorModes: {}
    };
    colorModes.forEach((colorMode) => {
      list[themeName].colorModes[colorMode] = toCSSVars({
        ...theme2,
        colors: {
          ...theme2.colors.modes[colorMode]
        }
      });
    });
  });
  return list;
};
var getThemesVars = (themes2) => {
  const vars = {};
  themes2.forEach((theme2) => {
    const colorModes = Object.keys(theme2.colors.modes);
    colorModes.forEach((colorMode) => {
      const styleName = `[data-theme="${theme2.name}"][data-color-mode="${colorMode}"]`;
      const themeName = `[data-theme="${theme2.name}"]`;
      const { components, name, colors: colors2, palette: palette2, ...rest } = theme2;
      vars[styleName] = toCSSVars({
        colors: {
          ...colors2.modes[colorMode]
        }
      });
      vars[themeName] = toCSSVars({
        ...rest
      });
    });
  });
  return vars;
};

// node_modules/@hitachivantara/uikit-styles/dist/esm/theme.mjs
var componentsSpec = {
  header: {
    height: "string",
    secondLevelHeight: "string"
  },
  bulkActions: {
    actionButtonVariant: "string"
  },
  table: {
    rowStripedBackgroundColorEven: "string",
    rowStripedBackgroundColorOdd: "string",
    rowExpandBackgroundColor: "string",
    rowSortedColor: "string",
    rowSortedColorAlpha: "string"
  },
  stepNavigation: {
    separatorMargin: "string",
    defaultSeparatorHeight: "string",
    simpleSeparatorHeight: "string"
  },
  filterGroup: {
    applyButtonVariant: "string",
    cancelButtonVariant: "string"
  },
  scrollTo: {
    dotSelectedSize: "string",
    backgroundColorOpacity: "string"
  },
  colorPicker: {
    hueDirection: "string"
  },
  snackbar: {
    actionButtonVariant: "string"
  }
};
var typographyProps = {
  color: "string",
  fontSize: "string",
  letterSpacing: "string",
  lineHeight: "string",
  fontWeight: "string",
  textDecoration: "string"
};
var typographySpec = {
  typography: {
    // DS5
    display: { ...typographyProps },
    title1: { ...typographyProps },
    title2: { ...typographyProps },
    title3: { ...typographyProps },
    title4: { ...typographyProps },
    label: { ...typographyProps },
    body: { ...typographyProps },
    captionLabel: { ...typographyProps },
    caption1: { ...typographyProps },
    caption2: { ...typographyProps },
    // LEGACY UNMAPPABLE (DS3)
    "5xlTitle": { ...typographyProps },
    "4xlTitle": { ...typographyProps },
    xxlTitle: { ...typographyProps },
    lTitle: { ...typographyProps },
    sTitle: { ...typographyProps },
    xxsTitle: { ...typographyProps },
    sectionTitle: { ...typographyProps },
    placeholderText: { ...typographyProps },
    link: { ...typographyProps },
    disabledText: { ...typographyProps },
    selectedNavText: { ...typographyProps },
    vizTextDisabled: { ...typographyProps },
    xsInlineLink: { ...typographyProps }
  }
};
var colorTokens = {
  ...colors.common,
  ...colors.light
};
var themeVars = mapCSSVars({
  ...tokens_exports,
  colors: {
    type: "light",
    ...colorTokens
  },
  // Flatten colors and add background color
  ...componentsSpec,
  ...typographySpec
});
function getColorOrFallback(color) {
  return themeVars.colors[color] || color;
}
function getColor(color, fallbackColor) {
  return getColorOrFallback(color) || getColorOrFallback(fallbackColor);
}
var spacing = (...args) => {
  if (hasMultipleArgs(args)) {
    return args.map((arg) => spacingUtil(arg, themeVars)).join(" ");
  }
  const [value] = args;
  switch (typeof value) {
    case "number":
    case "string":
      return spacingUtil(value, themeVars);
    case "object":
      return value && value.length > 0 ? value.map((val) => spacingUtilOld(val, themeVars)).join(" ") : "0px";
    default:
      return "0px";
  }
};
var mix = (color1, factor, color2 = "transparent") => {
  const percent = typeof factor === "number" ? `${factor * 100}%` : factor;
  return `color-mix(in srgb, ${getColor(color1)} ${percent}, ${getColor(color2)})`;
};
var alpha = (color, factor) => mix(color, factor);
var theme = {
  ...themeVars,
  palette,
  spacing,
  alpha
};

// node_modules/@hitachivantara/uikit-styles/dist/esm/makeTheme.mjs
var makeTheme = (options) => {
  const customTheme = typeof options === "function" ? options(theme) : options;
  const newTheme = mergeTheme(tokens_exports, customTheme);
  return newTheme;
};

// node_modules/@hitachivantara/uikit-styles/dist/esm/themes/ds3.mjs
var ds3 = makeTheme((theme2) => ({
  name: "ds3",
  colors: {
    modes: {
      dawn: {
        type: "light",
        ...colors.common,
        ...colors.light,
        backgroundColor: "#F0F0F0",
        containerBackgroundHover: colors.light.atmo3,
        primary_80: "#477DBD",
        atmo2: "#F0F0F0",
        neutral: "#4D9284",
        catastrophic: "#C51162",
        cat1: "#6EAFFF",
        cat2: "#FFAB5C",
        cat3: "#5CD1B2",
        cat4: "#9672C1",
        cat5: "#ED6868",
        cat6: "#58C9DD",
        cat7: "#FFDB70",
        cat8: "#4AB573",
        cat9: "#646A98",
        cat10: "#EB7397",
        cat11: "#33ABCC",
        cat12: "#F8C169"
      },
      wicked: {
        type: "dark",
        ...colors.common,
        ...colors.dark,
        backgroundColor: colors.dark.atmo2,
        containerBackgroundHover: colors.dark.atmo3,
        positive: "#63A621",
        neutral: "#72CCCB",
        catastrophic: "#E26BD2",
        cat1: "#6EAFFF",
        cat2: "#FFAB5C",
        cat3: "#5CD1B2",
        cat4: "#9672C1",
        cat5: "#ED6868",
        cat6: "#58C9DD",
        cat7: "#FFDB70",
        cat8: "#4AB573",
        cat9: "#646A98",
        cat10: "#EB7397",
        cat11: "#33ABCC",
        cat12: "#F8C169"
      }
    }
  },
  space: {
    base: 10,
    xxs: "4px",
    xs: "10px",
    sm: "20px",
    md: "30px",
    lg: "60px",
    xl: "90px"
  },
  breakpoints: {
    unit: "px",
    step: 5,
    values: {
      xs: 0,
      sm: 600,
      md: 960,
      lg: 1270,
      xl: 1920
    }
  },
  typography: {
    display: {
      color: theme2.colors.secondary,
      fontSize: "42px",
      letterSpacing: "0.02em",
      lineHeight: "52px",
      fontWeight: 600
    },
    title1: {
      color: theme2.colors.secondary,
      fontSize: "32px",
      letterSpacing: "0.02em",
      lineHeight: "40px",
      fontWeight: 600
    },
    title2: {
      color: theme2.colors.secondary,
      fontSize: "22px",
      letterSpacing: "0.02em",
      lineHeight: "30px",
      fontWeight: 600
    },
    title3: {
      color: theme2.colors.secondary,
      fontSize: "18px",
      letterSpacing: "0.02em",
      lineHeight: "28px",
      fontWeight: 600
    },
    title4: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.semibold,
      fontSize: theme2.fontSizes.lg,
      lineHeight: theme2.lineHeights.lg
    },
    label: {
      color: theme2.colors.secondary,
      fontSize: "12px",
      letterSpacing: "0.02em",
      lineHeight: "16px",
      fontWeight: 600
    },
    body: {
      color: theme2.colors.secondary,
      fontSize: "12px",
      letterSpacing: "0.02em",
      lineHeight: "16px",
      fontWeight: 400
    },
    captionLabel: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.semibold,
      fontSize: theme2.fontSizes.sm,
      lineHeight: theme2.lineHeights.sm
    },
    caption1: {
      color: theme2.colors.secondary,
      fontSize: "10px",
      letterSpacing: "0.02em",
      lineHeight: "15px",
      fontWeight: 400
    },
    caption2: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.normal,
      fontSize: theme2.fontSizes.xs,
      lineHeight: theme2.lineHeights.sm
    },
    // LEGACY
    "5xlTitle": {
      color: theme2.colors.secondary,
      fontSize: "52px",
      letterSpacing: "0.02em",
      lineHeight: "60px",
      fontWeight: 600
    },
    "4xlTitle": {
      color: theme2.colors.secondary,
      fontSize: "52px",
      letterSpacing: "0.02em",
      lineHeight: "60px",
      fontWeight: 400
    },
    xxlTitle: {
      color: theme2.colors.secondary,
      fontSize: "42px",
      letterSpacing: "0.02em",
      lineHeight: "52px",
      fontWeight: 400
    },
    lTitle: {
      color: theme2.colors.secondary,
      fontSize: "32px",
      letterSpacing: "0.02em",
      lineHeight: "40px",
      fontWeight: 400
    },
    sTitle: {
      color: theme2.colors.secondary,
      fontSize: "22px",
      letterSpacing: "0.02em",
      lineHeight: "30px",
      fontWeight: 400
    },
    xxsTitle: {
      color: theme2.colors.secondary,
      fontSize: "18px",
      letterSpacing: "0.02em",
      lineHeight: "28px",
      fontWeight: 400
    },
    sectionTitle: {
      color: theme2.colors.secondary,
      fontSize: "14px",
      letterSpacing: "0.32em",
      lineHeight: "18px",
      fontWeight: 400,
      textTransform: "uppercase"
    },
    placeholderText: {
      color: theme2.colors.secondary_60,
      fontSize: "12px",
      letterSpacing: "0.02em",
      lineHeight: "16px",
      fontWeight: 400
    },
    link: {
      color: theme2.colors.primary,
      fontSize: "12px",
      letterSpacing: "0.02em",
      lineHeight: "16px",
      fontWeight: 600
    },
    disabledText: {
      color: theme2.colors.secondary_60,
      fontSize: "12px",
      letterSpacing: "0.02em",
      lineHeight: "16px",
      fontWeight: 600
    },
    selectedNavText: {
      color: theme2.colors.brand,
      fontSize: "12px",
      letterSpacing: "0.02em",
      lineHeight: "16px",
      fontWeight: 600
    },
    vizTextDisabled: {
      color: theme2.colors.secondary_60,
      fontSize: "10px",
      letterSpacing: "0.02em",
      lineHeight: "15px",
      fontWeight: 400
    },
    xsInlineLink: {
      color: theme2.colors.primary,
      fontSize: "10px",
      letterSpacing: "0.02em",
      lineHeight: "15px",
      fontWeight: 600,
      textDecoration: "underline"
    }
  },
  components: {
    HvActionBar: {
      classes: {
        root: {
          borderTop: `3px solid ${theme2.colors.atmo2}`
        }
      }
    },
    HvBaseCheckBox: {
      classes: {
        root: {
          borderRadius: "0px"
        }
      }
    },
    HvBaseDropdown: {
      classes: {
        header: {
          border: `1px solid ${theme2.colors.atmo4}`,
          "&:hover": {
            border: `1px solid ${theme2.colors.secondary}`
          },
          "&:focus-visible": {
            border: `1px solid ${theme2.colors.secondary}`
          }
        },
        headerOpen: {
          border: "1px solid transparent",
          boxShadow: theme2.colors.shadow,
          "&:hover": {
            border: "1px solid transparent",
            boxShadow: theme2.colors.shadow
          }
        },
        headerDisabled: {
          border: `1px solid ${theme2.colors.atmo4}`,
          background: theme2.colors.atmo3,
          "&:hover": {
            border: `1px solid ${theme2.colors.atmo4}`
          }
        },
        headerReadOnly: {
          border: "none",
          background: theme2.colors.atmo1,
          "&:focus-visible": {
            border: "none"
          }
        },
        placeholder: {
          color: theme2.colors.secondary_60
        },
        panel: {
          boxShadow: theme2.colors.shadow,
          border: "1px solid transparent"
        },
        inputExtensionOpen: {
          height: theme2.space.xs,
          borderRight: "1px solid transparent",
          borderLeft: "1px solid transparent"
        }
      }
    },
    HvBaseInput: {
      classes: {
        root: {
          border: "none",
          ":not(.HvBaseInput-disabled):not(.HvBaseInput-invalid):not(.HvBaseInput-readOnly)": {
            ":hover,:focus-within": {
              borderColor: theme2.colors.secondary,
              "::after": {
                borderBottomColor: theme2.colors.secondary
              }
            }
          },
          "::after": {
            content: '" "',
            position: "absolute",
            inset: "auto 0 0",
            margin: "0 2px",
            borderBottom: `1px solid ${theme2.colors.atmo4}`
          }
        },
        invalid: {
          "::after": {
            borderBottomColor: theme2.colors.negative_120
          }
        },
        disabled: {
          backgroundColor: theme2.colors.atmo3,
          "&& .HvBaseInput-input": {
            color: theme2.colors.secondary_60,
            WebkitTextFillColor: theme2.colors.secondary_60
          }
        },
        multiline: {
          border: `1px solid ${theme2.colors.atmo4}`,
          "&::after": {
            display: "none"
          },
          "&.HvBaseInput-disabled": {
            borderColor: theme2.colors.atmo4
          }
        },
        readOnly: {
          borderColor: "transparent",
          backgroundColor: theme2.colors.atmo1,
          "::after": {
            borderColor: "transparent"
          }
        },
        focused: {
          "&.HvBaseInput-readOnly": {
            backgroundColor: theme2.colors.atmo1
          }
        },
        input: {
          "&::placeholder": {
            color: theme2.colors.secondary_60
          }
        },
        inputReadOnly: {
          color: theme2.colors.secondary
        }
      }
    },
    HvBaseRadio: {
      classes: {
        root: {
          "&:hover": {
            borderRadius: "0px"
          }
        }
      }
    },
    HvBaseSwitch: {
      classes: {
        root: {
          width: "32px",
          height: "16px",
          borderRadius: "0px",
          "&:hover": {
            backgroundColor: "transparent"
          }
        },
        switch: {
          width: "32px",
          height: "16px"
        },
        switchBase: {
          width: "32px",
          height: "16px"
        },
        track: {
          backgroundColor: theme2.colors.atmo2
        }
      }
    },
    HvBreadCrumbPage: {
      classes: {
        link: {
          "&:hover": {
            backgroundColor: theme2.colors.atmo3
          },
          "&:focus": {
            backgroundColor: theme2.colors.atmo3
          }
        }
      }
    },
    HvBulkActions: {
      classes: {
        root: {
          border: "none",
          backgroundColor: theme2.colors.atmo1,
          padding: "0px"
        },
        semantic: {
          backgroundColor: theme2.colors.neutral_20,
          "& .HvBulkActions-selectAll div": {
            color: theme2.colors.base_dark,
            "& *": {
              color: theme2.colors.base_dark,
              backgroundColor: "transparent"
            }
          }
        },
        divider: {
          display: "none"
        }
      }
    },
    HvButton: {
      classes: {
        root: {
          padding: theme2.spacing(0, "xs"),
          minWidth: "70px"
        },
        icon: {
          minWidth: "unset"
        },
        secondarySubtle: {
          backgroundColor: theme2.colors.atmo1,
          borderColor: theme2.colors.atmo4
        },
        secondary: {
          backgroundColor: theme2.colors.atmo1,
          borderColor: theme2.colors.atmo4
        },
        ghost: {},
        disabled: {
          "&:not(.HvButton-ghost):not(.HvButton-semantic)": {
            backgroundColor: theme2.colors.atmo3
          },
          "&.HvButton-subtle": {
            borderColor: theme2.colors.atmo4
          }
        }
      }
    },
    HvCalendarHeader: {
      classes: {
        root: {
          marginTop: theme2.space.xs,
          paddingBottom: 32,
          "& input": {
            height: "27px",
            fontSize: "18px",
            letterSpacing: "0.02em",
            lineHeight: "28px",
            fontWeight: theme2.fontWeights.semibold
          }
        },
        invalid: {
          paddingBottom: 0
        },
        headerDayOfWeek: {
          color: theme2.colors.secondary
        }
      }
    },
    HvCard: {
      classes: {
        root: {
          outline: "none",
          borderRadius: "0px"
        },
        selectable: {
          "&:hover": {
            outline: `1px solid ${theme2.colors.atmo4}`
          }
        },
        icon: {
          top: `calc(-24px + ${theme2.space.xs})`,
          right: `calc(-24px + ${theme2.space.xs})`
        }
      }
    },
    HvCardHeader: {
      classes: {
        root: {
          padding: theme2.spacing("15px", "sm")
        },
        title: {
          ...theme2.typography.title3
        },
        titleShort: {
          ...theme2.typography.title3
        },
        subheader: {
          ...theme2.typography.body
        }
      }
    },
    HvCarousel: {
      classes: {
        xs: {
          "& .HvCarousel-controls": {
            display: "none"
          }
        },
        controls: {
          justifyContent: "space-between",
          backgroundColor: "transparent",
          border: "none"
        },
        counterContainer: {
          display: "block"
        },
        thumbnail: {
          "& img": {
            borderRadius: theme2.radii.none
          }
        },
        thumbnailSelected: {
          "& img": {
            border: `1px solid ${theme2.colors.base_dark}`
          }
        }
      }
    },
    HvCheckBox: {
      classes: {
        container: {
          "&:hover": {
            borderRadius: "0px"
          }
        }
      }
    },
    HvColorPicker: {
      classes: {
        panel: {
          minWidth: "240px",
          padding: "20px 15px 20px 20px"
        },
        colorPicker: {
          width: "205px"
        },
        headerColorValue: {
          ...theme2.typography.body
        },
        recommendedColorsRoot: {
          ":not(:only-child)": {
            paddingBottom: "20px"
          }
        }
      }
    },
    HvColorPickerFields: {
      classes: {
        fields: {
          paddingTop: "10px",
          marginRight: "5px"
        },
        single: {
          maxWidth: "40px",
          paddingLeft: "5px"
        },
        double: {
          maxWidth: "80px",
          paddingRight: "20px"
        }
      }
    },
    HvColorPickerPicker: {
      classes: {
        pickers: {
          flexDirection: "row"
        },
        saturation: {
          width: "180px",
          height: "180px",
          marginRight: "5px",
          "& > div": {
            borderRadius: theme2.radii.none,
            "& .saturation-white": {
              borderRadius: theme2.radii.none,
              "& .saturation-black": {
                borderRadius: theme2.radii.none
              }
            }
          }
        },
        saturationPointer: {
          width: "6px",
          height: "6px"
        },
        hue: {
          height: "180px",
          width: "15px",
          marginTop: "0px",
          "& .hue-horizontal": {
            borderRadius: theme2.radii.none
          }
        },
        hueSlider: {
          width: "12px",
          height: "6px",
          background: "#fff",
          marginLeft: "1px",
          border: "1px solid #fff",
          borderRadius: "1px"
        }
      }
    },
    HvColorPickerPresetColors: {
      classes: {
        root: { width: "205px" },
        colors: {
          width: "calc(100% + 5px)",
          margin: "-5px -3px"
        },
        swatchWrap: {
          width: "16px",
          height: "16px",
          margin: "5px",
          "& > span > div": {
            borderRadius: theme2.radii.none
          }
        }
      }
    },
    HvColorPickerSavedColors: {
      classes: {
        addButton: {
          margin: "5px",
          width: "32px",
          height: "32px"
        },
        root: {
          width: "calc(100% + 5px)",
          margin: "-5px -3px"
        },
        swatchWrap: {
          width: "32px",
          height: "32px",
          margin: "4px",
          "& > span > div": {
            borderRadius: theme2.radii.base
          }
        }
      }
    },
    HvDatePicker: {
      classes: {
        inputText: {
          ...theme2.typography.body,
          color: theme2.colors.secondary_60
        }
      }
    },
    HvDialog: {
      classes: {
        paper: {
          borderRadius: "0"
        }
      }
    },
    HvDialogTitle: {
      classes: {
        titleText: {
          ...theme2.typography.xxsTitle
        }
      }
    },
    HvDropdown: {
      classes: {
        readOnly: {
          "& .HvDropdown-dropdownHeader": {
            border: "none",
            backgroundColor: theme2.colors.atmo1
          }
        },
        placeholderClosed: {
          color: theme2.colors.secondary_60
        }
      }
    },
    HvDropDownMenu: {
      classes: {
        iconSelected: {
          border: "none",
          "&:hover": {
            border: "none"
          }
        }
      }
    },
    HvEmptyState: {
      classes: {
        titleContainer: {
          marginTop: "2px",
          ...theme2.typography.xxsTitle
        }
      }
    },
    HvFile: {
      classes: {
        progressbarContainer: {
          height: "2px"
        },
        previewContainer: {
          width: "52px",
          height: "52px",
          "& img": {
            width: "100%",
            height: "100%"
          }
        }
      }
    },
    HvFileList: {
      classes: {
        listItem: {
          border: "none",
          borderRadius: "0px"
        }
      }
    },
    HvFileUploaderPreview: {
      classes: {
        previewButton: {
          width: "52px",
          height: "52px"
        },
        overlay: {
          backgroundColor: theme2.colors.atmo3,
          opacity: "0.75",
          borderRadius: "0px"
        }
      }
    },
    HvDropZone: {
      classes: {
        dropZoneContainer: {
          border: `1px dotted ${theme2.colors.atmo4}`,
          background: theme2.colors.atmo2,
          borderRadius: "0px",
          "&:hover": {
            border: `1px dotted ${theme2.colors.secondary}`
          },
          "&:focus-within": {
            border: `1px dotted ${theme2.colors.secondary}`
          }
        },
        dragAction: {
          border: `1px dotted ${theme2.colors.secondary}`
        },
        dropZoneContainerDisabled: {
          border: `1px dotted ${theme2.colors.atmo4}`,
          "&:hover": {
            border: `1px dotted ${theme2.colors.atmo4}`
          }
        }
      }
    },
    HvFilterGroupCounter: {
      classes: {
        partialCounter: {
          fontWeight: theme2.fontWeights.bold
        }
      }
    },
    HvFilterGroupContent: {
      classes: {
        rightSidePanel: {
          boxShadow: `inset 8px 0 8px -6px ${theme2.colors.shad1}`,
          borderLeft: "none"
        },
        applyButton: {
          marginRight: "0px"
        }
      }
    },
    HvGlobalActions: {
      classes: {
        section: {
          "& .HvGlobalActions-wrapper": {
            backgroundColor: "transparent",
            paddingLeft: "0px"
          }
        },
        wrapper: {
          "&&": {
            padding: theme2.space.xs,
            borderWidth: 0,
            borderRadius: 0
          }
        },
        sectionName: {
          ...theme2.typography.sectionTitle
        }
      }
    },
    HvHeader: {
      classes: {
        root: {
          backgroundColor: theme2.colors.atmo1,
          borderTop: `4px solid ${theme2.colors.brand}`
        }
      }
    },
    HvHeaderMenuBarBar: {
      classes: {
        active: {
          top: `calc(${theme2.header.height} - 4px)`
        },
        list: {
          "& li:hover > .HvHeader-MenuBar-hidden": {
            top: `calc(${theme2.header.height} - 4px)`
          },
          "& li:focus-within > .HvHeader-MenuBar-hidden": {
            top: `calc(${theme2.header.height} - 4px)`
          }
        }
      }
    },
    HvHeaderMenuItem: {
      classes: {
        root: {
          borderTop: "2px solid transparent",
          borderBottom: "none",
          color: theme2.colors.secondary
        },
        selected: {
          borderBottom: "none",
          color: theme2.colors.brand,
          "&.HvHeader-MenuItem-menu": {
            borderTop: "2px solid transparent"
          },
          "&.HvHeader-MenuItem-menubar": {
            borderTop: "2px solid currentcolor"
          }
        }
      }
    },
    HvHorizontalScrollListItem: {
      classes: {
        root: {
          maxWidth: 180
        },
        button: {
          height: "32px",
          borderBottom: "2px solid transparent",
          "&:hover": {
            backgroundColor: theme2.colors.atmo3,
            "& .HvHorizontalScrollListItem-notSelected": {
              height: "10px",
              width: "10px",
              backgroundColor: theme2.colors.atmo4
            }
          }
        },
        text: {
          height: "32px",
          borderBottom: "2px solid transparent",
          padding: "8px 10px",
          margin: 0
        },
        selected: {
          borderBottom: `2px solid ${theme2.colors.secondary}`
        },
        bullet: {
          display: "none"
        }
      }
    },
    HvSelect: {
      classes: {
        select: {
          ".HvButton-endIcon": {
            marginRight: theme2.spacing(-1)
          }
        },
        panel: {
          borderColor: theme2.colors.atmo4
        }
      }
    },
    HvVerticalScrollListItem: {
      classes: {
        icon: {
          fontSize: "10px"
        },
        notSelected: {
          color: theme2.colors.atmo4,
          fontSize: "6px"
        },
        text: {
          height: "32px",
          width: "32px"
        },
        button: {
          height: "32px",
          width: "32px",
          borderRadius: "0%",
          cursor: "pointer",
          "&:hover": {
            "& .HvVerticalScrollListItem-notSelected": {
              fontSize: "10px",
              color: theme2.colors.atmo4
            }
          }
        }
      }
    },
    HvInlineEditor: {
      classes: {
        button: {
          border: "none",
          backgroundColor: "transparent",
          "&:hover": {
            border: "none",
            backgroundColor: "transparent"
          },
          "&:focus": {
            border: "none"
          },
          "&:active": {
            border: "none"
          }
        }
      }
    },
    HvInfoMessage: {
      classes: {
        root: {
          color: theme2.colors.secondary
        }
      }
    },
    HvLabel: {
      classes: {
        root: { fontWeight: theme2.fontWeights.semibold },
        childGutter: { paddingBottom: 6 }
      }
    },
    HvList: {
      classes: {
        itemSelector: {
          "&:not(:hover):not(.HvIsFocused):not(:focus-within)": {
            backgroundColor: "transparent"
          }
        }
      }
    },
    HvListItem: {
      classes: {
        disabled: {
          backgroundColor: "transparent"
        }
      }
    },
    HvPagination: {
      classes: {
        root: {
          [`& .HvPagination-pageSizeInput`]: {
            ...theme2.typography.label,
            "&:focus": {
              padding: "unset"
            }
          },
          [`& .HvPagination-pageSizeInputContainer`]: {
            width: 40,
            minWidth: 40
          },
          [`&& .HvPagination-pageSizeInputRoot`]: {
            height: 32
          },
          [`& .HvPagination-icon > svg`]: {
            width: 16,
            height: 16
          }
        },
        pageSizeOptions: {
          height: 32
        },
        pageSizeHeader: {
          height: "unset",
          [`& .HvBaseDropdown-arrowContainer`]: {
            marginTop: 0
          }
        },
        pageSizeTextContainer: {
          height: 32,
          ...theme2.typography.body
        },
        pageSizeOptionsSelect: {
          ...theme2.typography.body
        },
        totalPagesTextContainer: {
          ...theme2.typography.body
        },
        pageNavigator: {
          alignItems: "stretch"
        }
      }
    },
    HvPaginationSelect: {
      classes: {
        header: {
          borderColor: "transparent",
          "&:hover": {
            borderColor: "transparent"
          }
        }
      }
    },
    HvQueryBuilder: {
      classes: {
        topGroup: {
          paddingBottom: `calc(${theme2.space.sm} * 3)`
        },
        subGroup: {
          "&::before": {
            left: "-42px"
          }
        },
        subRulesContainer: {
          left: "-41px"
        },
        topActionButtonContainer: {
          position: "absolute",
          bottom: `calc(-1 * ${theme2.space.md} * 0.5)`,
          right: `calc(${theme2.space.sm} * 1.75)`
        },
        createConditionButton: {
          ...theme2.typography.link,
          textDecoration: "underline"
        },
        createGroupButton: {
          ...theme2.typography.link,
          textDecoration: "underline"
        }
      }
    },
    HvQueryBuilderRule: {
      classes: {
        root: {
          "&::before": {
            width: "21px",
            height: "39px",
            left: `calc( -1 * 21px)`
          },
          ":not(.HvQueryBuilder-topRulesContainer)>&:last-child::after": {
            width: "21px",
            left: `calc( -1 * 21px)`
          }
        },
        actionsContainer: {
          marginTop: "22px"
        }
      }
    },
    HvRadio: {
      classes: {
        container: {
          "&:hover": {
            borderRadius: "0px"
          }
        }
      }
    },
    HvScrollToHorizontal: {
      classes: {
        root: {
          backgroundColor: theme2.alpha("atmo2", 0.8)
        }
      }
    },
    HvScrollToVertical: {
      classes: {
        root: {
          backgroundColor: theme2.alpha("atmo2", 0.8)
        }
      }
    },
    HvSlider: {
      classes: {
        trackDragging: {
          "&& .rc-slider-track": {
            "&::before": {
              borderTop: `12px solid ${theme2.colors.atmo3}`,
              borderBottom: `12px solid ${theme2.colors.atmo3}`
            }
          }
        },
        trackStandBy: {
          "&& .rc-slider-track": {
            "&:hover": {
              "&::before": {
                borderTop: `12px solid ${theme2.colors.atmo3}`,
                borderBottom: `12px solid ${theme2.colors.atmo3}`
              }
            }
          }
        },
        handleContainer: {
          "&& .rc-slider-handle": {
            "&:active": {
              cursor: "grab",
              "&::before": {
                border: `9px solid ${theme2.colors.secondary}`,
                opacity: "20%"
              }
            },
            "&:hover": {
              "&::before": {
                border: `9px solid ${theme2.colors.secondary}`,
                opacity: "20%"
              }
            }
          }
        }
      }
    },
    HvSnackbarContent: {
      classes: {
        action: {
          marginLeft: "inherit"
        }
      }
    },
    HvSwitch: {
      classes: {
        invalidSwitch: {
          paddingBottom: "0px"
        }
      }
    },
    HvTab: {
      classes: {
        root: {
          padding: "0 20px",
          "&:hover": {
            backgroundColor: "transparent",
            borderRadius: "0px",
            "&::after": {
              height: "1px",
              backgroundColor: theme2.colors.secondary_60
            }
          }
        }
      }
    },
    HvTagsInput: {
      classes: {
        disabled: {
          "& .HvTagsInput-tagsList": {
            backgroundColor: theme2.colors.atmo1
          }
        },
        readOnly: {
          "& .HvTagsInput-tagsList": {
            backgroundColor: theme2.colors.atmo1,
            borderColor: "transparent",
            "&:hover": {
              borderColor: "transparent"
            }
          }
        },
        tagInputRoot: {
          "&::after": {
            display: "none"
          }
        },
        tagsList: {
          borderColor: theme2.colors.atmo4,
          "&:hover": {
            borderColor: theme2.colors.secondary
          }
        }
      }
    },
    HvTableCell: {
      classes: {
        root: {
          padding: `calc(${theme2.space.xs} - 2px ) ${theme2.space.xs} calc(${theme2.space.xs} - 3px ) ${theme2.spacing(4)}`
        },
        head: {
          borderTop: `1px solid ${theme2.colors.atmo4}`
        },
        body: {
          "&.HvTableCell-sorted": {
            backgroundImage: `linear-gradient(to right, ${theme2.alpha(
              "atmo1",
              0.4
            )}, ${theme2.alpha("atmo1", 0.4)})`
          }
        },
        variantListactions: {
          borderLeft: `solid 2px ${theme2.colors.atmo2}`
        },
        variantListcheckbox: {
          borderRight: `solid 2px ${theme2.colors.atmo2}`
        }
      }
    },
    HvTableHeader: {
      classes: {
        head: {
          "&.HvTableHeader-sortable": {
            "&:hover": {
              backgroundColor: theme2.colors.atmo3,
              "& .HvTableHeader-sortIcon": {
                visibility: "visible"
              }
            },
            "&:focus-within": {
              backgroundColor: theme2.colors.atmo3,
              "& .HvTableHeader-sortIcon": {
                visibility: "visible"
              }
            }
          },
          "*:first-of-type > &": {
            borderTop: `1px solid ${theme2.colors.atmo4}`
          }
        },
        sortButton: {
          ".HvTableHeader-root.HvTableHeader-sortable &": {
            "&:hover": {
              backgroundColor: "transparent"
            }
          }
        }
      }
    },
    HvTableRow: {
      classes: {
        root: {
          backgroundColor: "transparent"
        },
        selected: {
          backgroundColor: theme2.colors.atmo1
        },
        variantList: {
          borderRadius: 0,
          "& td": {
            borderTop: "1px solid transparent",
            borderBottom: "1px solid transparent"
          },
          "& td:first-of-type": {
            borderLeft: "1px solid transparent",
            borderRadius: 0
          },
          "& td:last-of-type": {
            borderRight: "1px solid transparent",
            borderRadius: 0
          },
          "&.HvTableRow-selected": {
            "& td": {
              borderTop: `1px solid ${theme2.colors.secondary}`,
              borderBottom: `1px solid ${theme2.colors.secondary}`
            },
            "& td:first-of-type": {
              borderLeft: `1px solid ${theme2.colors.secondary}`,
              borderRadius: 0
            },
            "& td:last-of-type": {
              borderRight: `1px solid ${theme2.colors.secondary}`,
              borderRadius: 0
            },
            "&:hover": {
              "& td": {
                borderTop: `1px solid ${theme2.colors.atmo4}`,
                borderBottom: `1px solid ${theme2.colors.atmo4}`
              },
              "& td:first-of-type": {
                borderLeft: `1px solid ${theme2.colors.atmo4}`,
                borderRadius: 0
              },
              "& td:last-of-type": {
                borderRight: `1px solid ${theme2.colors.atmo4}`,
                borderRadius: 0
              }
            }
          },
          "&:hover": {
            "& td": {
              borderTop: `1px solid ${theme2.colors.atmo4}`,
              borderBottom: `1px solid ${theme2.colors.atmo4}`
            },
            "& td:first-of-type": {
              borderLeft: `1px solid ${theme2.colors.atmo4}`,
              borderRadius: 0
            },
            "& td:last-of-type": {
              borderRight: `1px solid ${theme2.colors.atmo4}`,
              borderRadius: 0
            }
          },
          "&.HvIsFocused": {
            borderRadius: 0
          }
        }
      }
    },
    HvMultiButton: {
      variant: "secondaryGhost",
      classes: {
        root: {
          "& button&.HvMultiButton-button&.HvMultiButton-selected": {
            height: 32
          }
        },
        splitDisabled: {
          backgroundColor: theme2.colors.atmo3
        }
      }
    },
    HvTooltip: {
      classes: {
        popper: {
          "& .HvTooltip-tooltip": {
            borderRadius: "0px"
          }
        }
      }
    },
    HvVerticalNavigation: {
      classes: {
        root: {
          justifyContent: "space-between"
        }
      }
    },
    HvVerticalNavigationActions: {
      classes: {
        root: {
          marginTop: "none"
        }
      }
    },
    HvVerticalNavigationSlider: {
      classes: {
        root: {
          borderLeft: `2px solid transparent`
        },
        listItemSelected: {
          borderLeft: `2px solid ${theme2.colors.brand}`
        }
      }
    },
    HvVerticalNavigationTreeViewItem: {
      classes: {
        content: {
          borderLeft: `2px solid transparent`,
          ".HvVerticalNavigationTreeViewItem-selected>&": {
            borderLeft: `2px solid ${theme2.colors.brand}`
          }
        }
      }
    },
    HvWarningText: {
      classes: {
        warningText: {
          ...theme2.typography.body,
          color: "inherit"
        },
        topGutter: { paddingTop: "8px" },
        defaultIcon: {
          minWidth: "32px",
          width: "32px",
          height: "32px",
          "& svg": {
            height: "16px",
            width: "16px"
          }
        }
      }
    },
    HvWizardContainer: {
      classes: {
        paper: {
          maxHeight: "calc(100% - (2 * 100px))"
        }
      }
    }
  },
  header: {
    height: "44px",
    secondLevelHeight: "40px"
  },
  bulkActions: {
    actionButtonVariant: "semantic"
  },
  table: {
    rowStripedBackgroundColorEven: theme2.colors.atmo1,
    // TODO - remove in v6
    rowStripedBackgroundColorOdd: "transparent",
    // TODO - remove in v6
    rowExpandBackgroundColor: theme2.colors.atmo2,
    rowSortedColor: theme2.colors.atmo1,
    // TODO - remove in v6
    rowSortedColorAlpha: "0.4"
    // TODO - remove in v6
  },
  stepNavigation: {
    separatorMargin: "0px",
    defaultSeparatorHeight: 3,
    simpleSeparatorHeight: 2
  },
  filterGroup: {
    applyButtonVariant: "secondaryGhost",
    cancelButtonVariant: "secondaryGhost"
  },
  scrollTo: {
    dotSelectedSize: 10,
    // TODO - remove in v6
    backgroundColorOpacity: 0.8
    // TODO - remove in v6
  },
  colorPicker: {
    hueDirection: "vertical"
  },
  snackbar: {
    actionButtonVariant: "secondaryGhost"
  }
}));

// node_modules/@hitachivantara/uikit-styles/dist/esm/themes/ds5.mjs
var ds5 = makeTheme((theme2) => ({
  name: "ds5",
  colors: {
    modes: {
      dawn: {
        type: "light",
        ...colors.common,
        ...colors.light
      },
      wicked: {
        type: "dark",
        ...colors.common,
        ...colors.dark
      }
    }
  },
  typography: {
    display: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.semibold,
      fontSize: theme2.fontSizes.xl4,
      lineHeight: theme2.lineHeights.xl4,
      letterSpacing: "0.00504em"
    },
    title1: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.semibold,
      fontSize: theme2.fontSizes.xl3,
      lineHeight: theme2.lineHeights.xl3,
      letterSpacing: "0.00384em"
    },
    title2: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.semibold,
      fontSize: theme2.fontSizes.xl2,
      lineHeight: theme2.lineHeights.xl2,
      letterSpacing: "0.00288em"
    },
    title3: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.semibold,
      fontSize: theme2.fontSizes.xl,
      lineHeight: theme2.lineHeights.xl,
      letterSpacing: "0.0024em"
    },
    title4: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.semibold,
      fontSize: theme2.fontSizes.lg,
      lineHeight: theme2.lineHeights.lg,
      letterSpacing: "0.00192em"
    },
    label: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.semibold,
      fontSize: theme2.fontSizes.base,
      lineHeight: theme2.lineHeights.base,
      letterSpacing: "0.00168em"
    },
    body: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.normal,
      fontSize: theme2.fontSizes.base,
      lineHeight: theme2.lineHeights.base,
      letterSpacing: "0.00168em"
    },
    captionLabel: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.semibold,
      fontSize: theme2.fontSizes.sm,
      lineHeight: theme2.lineHeights.sm,
      letterSpacing: 0
    },
    caption1: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.normal,
      fontSize: theme2.fontSizes.sm,
      lineHeight: theme2.lineHeights.sm,
      letterSpacing: "0.00144em"
    },
    caption2: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.normal,
      fontSize: theme2.fontSizes.xs,
      lineHeight: theme2.lineHeights.xs,
      letterSpacing: "0.0012em"
    },
    // LEGACY
    "5xlTitle": {
      color: theme2.colors.secondary,
      fontSize: "52px",
      letterSpacing: "0.02em",
      lineHeight: "60px",
      fontWeight: 600
    },
    "4xlTitle": {
      color: theme2.colors.secondary,
      fontSize: "52px",
      letterSpacing: "0.02em",
      lineHeight: "60px",
      fontWeight: 400
    },
    xxlTitle: {
      color: theme2.colors.secondary,
      fontSize: "42px",
      letterSpacing: "0.02em",
      lineHeight: "52px",
      fontWeight: 400
    },
    lTitle: {
      color: theme2.colors.secondary,
      fontSize: "32px",
      letterSpacing: "0.02em",
      lineHeight: "40px",
      fontWeight: 400
    },
    sTitle: {
      color: theme2.colors.secondary,
      fontSize: "22px",
      letterSpacing: "0.02em",
      lineHeight: "30px",
      fontWeight: 400
    },
    xxsTitle: {
      color: theme2.colors.secondary,
      fontSize: "18px",
      letterSpacing: "0.02em",
      lineHeight: "28px",
      fontWeight: 400
    },
    sectionTitle: {
      color: theme2.colors.secondary,
      fontSize: "14px",
      letterSpacing: "0.32em",
      lineHeight: "18px",
      fontWeight: 400,
      textTransform: "uppercase"
    },
    placeholderText: {
      color: theme2.colors.secondary_60,
      fontSize: "12px",
      letterSpacing: "0.02em",
      lineHeight: "16px",
      fontWeight: 400
    },
    link: {
      color: theme2.colors.primary,
      fontSize: "12px",
      letterSpacing: "0.02em",
      lineHeight: "16px",
      fontWeight: 600
    },
    disabledText: {
      color: theme2.colors.secondary_60,
      fontSize: "12px",
      letterSpacing: "0.02em",
      lineHeight: "16px",
      fontWeight: 600
    },
    selectedNavText: {
      color: theme2.colors.brand,
      fontSize: "12px",
      letterSpacing: "0.02em",
      lineHeight: "16px",
      fontWeight: 600
    },
    vizTextDisabled: {
      color: theme2.colors.secondary_60,
      fontSize: "10px",
      letterSpacing: "0.02em",
      lineHeight: "15px",
      fontWeight: 400
    },
    xsInlineLink: {
      color: theme2.colors.primary,
      fontSize: "10px",
      letterSpacing: "0.02em",
      lineHeight: "15px",
      fontWeight: 600,
      textDecoration: "underline"
    }
  },
  components: {
    HvButton: {
      classes: {
        root: {
          ":where(:not(.HvButton-disabled,.HvButton-contained))": {
            "&[data-color=warning]": { color: theme2.colors.warning_140 }
          }
        },
        contained: {
          ":where([data-color=primary]:not(.HvButton-disabled))": {
            ":hover, &:focus-visible": {
              backgroundColor: theme2.colors.primary_80,
              borderColor: theme2.colors.primary_80
            }
          },
          ":where([data-color=positive]:not(.HvButton-disabled))": {
            ":hover, &:focus-visible": {
              backgroundColor: theme2.colors.positive_80,
              borderColor: theme2.colors.positive_80
            }
          },
          ":where([data-color=warning]:not(.HvButton-disabled))": {
            backgroundColor: theme2.colors.warning_120,
            ":hover, &:focus-visible": {
              backgroundColor: theme2.colors.warning_140,
              borderColor: theme2.colors.warning_140
            }
          },
          ":where([data-color=negative]:not(.HvButton-disabled))": {
            ":hover, &:focus-visible": {
              backgroundColor: theme2.colors.negative_80,
              borderColor: theme2.colors.negative_80
            }
          }
        }
      }
    },
    HvMultiButton: {
      classes: {
        splitGroup: {
          // NEXT5 subtle multi-buttons have a custom background
          "& .HvButton-subtle": {
            backgroundColor: theme2.colors.atmo1
          },
          "&& .HvButton-disabled": {
            backgroundColor: theme2.colors.atmo3
          }
        }
      }
    },
    HvTab: {
      classes: {
        root: {
          "&.HvTab-selected": {
            color: theme2.colors.secondary
          }
        }
      }
    }
  },
  header: {
    height: "64px",
    secondLevelHeight: "56px"
  },
  bulkActions: {
    actionButtonVariant: "primaryGhost"
  },
  table: {
    rowStripedBackgroundColorEven: theme2.colors.atmo1,
    // TODO - remove in v6
    rowStripedBackgroundColorOdd: "transparent",
    // TODO - remove in v6
    rowExpandBackgroundColor: theme2.colors.atmo2,
    rowSortedColor: theme2.colors.primary,
    // TODO - remove in v6
    rowSortedColorAlpha: "0.1"
    // TODO - remove in v6
  },
  stepNavigation: {
    separatorMargin: "4px",
    defaultSeparatorHeight: 1,
    simpleSeparatorHeight: 1
  },
  filterGroup: {
    applyButtonVariant: "primary",
    cancelButtonVariant: "secondarySubtle"
  },
  scrollTo: {
    dotSelectedSize: 6,
    backgroundColorOpacity: 0.9
    // TODO - remove in v6
  },
  colorPicker: {
    hueDirection: "horizontal"
  },
  snackbar: {
    actionButtonVariant: "secondarySubtle"
  }
}));

// node_modules/@hitachivantara/uikit-styles/dist/esm/themes/pentahoPlus.mjs
var ld = (c1, c2) => `light-dark(${c1}, ${c2})`;
var buttonColors = {
  primary: {
    subtleBg: ld(blue[50], blue[950]),
    subtleBorder: ld(blue[200], blue[800])
  },
  secondary: {
    subtleBg: ld(slate[100], slate[800]),
    subtleBorder: ld(slate[300], slate[700])
  },
  success: {
    subtleBorder: ld(green[200], green[800]),
    subtleBg: ld(emerald[100], green[900])
  },
  warning: {
    subtleBorder: ld(amber[200], amber[800]),
    subtleBg: ld(amber[100], amber[900])
  },
  error: {
    subtleBorder: ld(red[200], red[800]),
    subtleBg: ld(red[100], red[900])
  }
};
var inputColors = {
  bg: ld("white", "black"),
  border: ld(slate[400], slate[600]),
  borderHover: ld(blue[600], blue[600]),
  borderActive: ld(slate[700], slate[300])
};
var pentahoPlus = makeTheme((theme2) => ({
  name: "pentahoPlus",
  colors: {
    modes: {
      dawn: {
        type: "light",
        ...colors.common,
        ...colors.light,
        brand: blue[600],
        containerBackgroundHover: `color-mix(in srgb, ${blue[600]} 10%, transparent)`,
        backgroundColor: slate[100],
        atmo1: slate[50],
        atmo2: slate[100],
        atmo3: slate[200],
        atmo4: slate[300],
        base_light: slate[50],
        base_dark: slate[700],
        primary: blue[600],
        primary_80: blue[500],
        primary_20: `color-mix(in srgb, ${blue[600]} 10%, transparent)`,
        secondary: slate[700],
        secondary_80: slate[500],
        secondary_60: slate[400],
        secondary_20: `color-mix(in srgb, ${slate[700]} 10%, transparent)`,
        // 🆕
        positive: green[600],
        positive_120: green[700],
        positive_80: green[400],
        neutral: sky[500],
        warning: amber[500],
        warning_120: orange[500],
        warning_140: orange[700],
        negative: red[600],
        negative_120: red[700],
        negative_80: red[400],
        catastrophic: rose[800],
        negative_20: red[100],
        warning_20: amber[100],
        positive_20: green[100],
        neutral_20: sky[100],
        shadow: `0px 2px 4px -1px color-mix(in srgb, ${slate[700]} 8%, transparent)`,
        shad1: `color-mix(in srgb, ${slate[700]} 8%, transparent)`,
        pp: {
          primary: blue[600],
          primaryAction: blue[700],
          primaryStrong: blue[800],
          primarySubtle: blue[200],
          primaryDimmed: blue[100],
          success: green[600],
          successAction: green[700],
          successStrong: green[800],
          successDimmed: green[50],
          warning: amber[500],
          warningAction: amber[600],
          warningStrong: amber[700],
          warningDimmed: amber[50],
          error: red[600],
          errorAction: red[700],
          errorStrong: red[800],
          errorDimmed: red[50],
          neutral: cyan[500],
          neutralAction: cyan[600],
          neutralStrong: cyan[700],
          neutralDimmed: cyan[50],
          text: slate[700],
          textSubtle: slate[500],
          textDisabled: neutral[400],
          textDimmed: slate[300],
          link: blue[600],
          linkActive: blue[700],
          divider: slate[300],
          dividerSubtle: slate[200],
          dividerDimmed: slate[400],
          bgPage: slate[100],
          bgSurface: slate[50],
          bgActive: slate[200],
          bgHover: blue[100],
          bgDisabled: neutral[200],
          bgOverlay: `color-mix(in srgb, ${slate[900]} 60%, transparent)`,
          dimmer: "#FFFFFF",
          borderDisabled: neutral[400]
        }
      },
      wicked: {
        type: "dark",
        ...colors.common,
        ...colors.dark,
        brand: blue[600],
        containerBackgroundHover: `color-mix(in srgb, ${blue[500]} 10%, transparent)`,
        backgroundColor: slate[900],
        atmo1: slate[800],
        atmo2: slate[900],
        atmo3: slate[950],
        atmo4: slate[700],
        base_light: slate[50],
        base_dark: slate[700],
        primary: blue[500],
        primary_80: blue[400],
        primary_20: `color-mix(in srgb, ${blue[500]} 10%, transparent)`,
        secondary: slate[50],
        secondary_80: slate[200],
        secondary_60: slate[300],
        secondary_20: `color-mix(in srgb, ${slate[50]} 10%, transparent)`,
        // 🆕
        positive: green[500],
        positive_120: green[600],
        positive_80: green[400],
        neutral: sky[500],
        warning: amber[500],
        warning_120: amber[600],
        warning_140: orange[600],
        negative: red[500],
        negative_120: red[600],
        negative_80: red[300],
        catastrophic: pink[600],
        negative_20: red[100],
        warning_20: amber[100],
        positive_20: green[100],
        neutral_20: sky[100],
        shadow: `0px 2px 4px -1px color-mix(in srgb, ${slate[700]} 8%, transparent)`,
        shad1: `color-mix(in srgb, ${slate[700]} 8%, transparent)`,
        pp: {
          primary: blue[400],
          primaryAction: blue[300],
          primaryStrong: blue[200],
          primarySubtle: blue[900],
          primaryDimmed: blue[950],
          success: green[600],
          successAction: green[500],
          successStrong: green[300],
          successDimmed: green[950],
          warning: yellow[500],
          warningAction: yellow[400],
          warningStrong: yellow[300],
          warningDimmed: yellow[950],
          error: red[600],
          errorAction: red[500],
          errorStrong: red[300],
          errorDimmed: red[950],
          neutral: cyan[500],
          neutralAction: cyan[400],
          neutralStrong: cyan[300],
          neutralDimmed: cyan[950],
          text: slate[50],
          textSubtle: slate[400],
          textDisabled: neutral[500],
          textDimmed: slate[700],
          link: blue[400],
          linkActive: blue[300],
          divider: slate[700],
          dividerSubtle: slate[700],
          dividerDimmed: slate[500],
          bgPage: slate[950],
          bgSurface: slate[900],
          bgActive: slate[900],
          bgHover: blue[950],
          bgDisabled: neutral[900],
          bgOverlay: `color-mix(in srgb, ${slate[900]} 40%, transparent)`,
          dimmer: "#000000",
          borderDisabled: neutral[700]
        }
      }
    }
  },
  fontFamily: {
    body: "Inter, Arial, Helvetica, sans-serif"
  },
  typography: {
    display: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.semibold,
      fontSize: theme2.fontSizes.xl4,
      lineHeight: theme2.lineHeights.xl4,
      letterSpacing: "0.00504em"
    },
    title1: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.semibold,
      fontSize: theme2.fontSizes.xl3,
      lineHeight: theme2.lineHeights.xl3,
      letterSpacing: "0.00384em"
    },
    title2: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.semibold,
      fontSize: theme2.fontSizes.xl2,
      lineHeight: theme2.lineHeights.xl2,
      letterSpacing: "0.00288em"
    },
    title3: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.semibold,
      fontSize: theme2.fontSizes.xl,
      lineHeight: theme2.lineHeights.xl,
      letterSpacing: "0.0024em"
    },
    title4: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.semibold,
      fontSize: theme2.fontSizes.lg,
      lineHeight: theme2.lineHeights.lg,
      letterSpacing: "0.00192em"
    },
    label: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.semibold,
      fontSize: theme2.fontSizes.base,
      lineHeight: theme2.lineHeights.base,
      letterSpacing: "0.00168em"
    },
    body: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.normal,
      fontSize: theme2.fontSizes.base,
      lineHeight: theme2.lineHeights.base,
      letterSpacing: "0.00168em"
    },
    captionLabel: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.semibold,
      fontSize: theme2.fontSizes.sm,
      lineHeight: theme2.lineHeights.sm,
      letterSpacing: 0
    },
    caption1: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.normal,
      fontSize: theme2.fontSizes.sm,
      lineHeight: theme2.lineHeights.sm,
      letterSpacing: "0.00144em"
    },
    caption2: {
      color: theme2.colors.secondary,
      fontWeight: theme2.fontWeights.normal,
      fontSize: theme2.fontSizes.xs,
      lineHeight: theme2.lineHeights.xs,
      letterSpacing: "0.0012em"
    },
    // LEGACY
    "5xlTitle": {
      color: theme2.colors.secondary,
      fontSize: "52px",
      letterSpacing: "0.02em",
      lineHeight: "60px",
      fontWeight: 600
    },
    "4xlTitle": {
      color: theme2.colors.secondary,
      fontSize: "52px",
      letterSpacing: "0.02em",
      lineHeight: "60px",
      fontWeight: 400
    },
    xxlTitle: {
      color: theme2.colors.secondary,
      fontSize: "42px",
      letterSpacing: "0.02em",
      lineHeight: "52px",
      fontWeight: 400
    },
    lTitle: {
      color: theme2.colors.secondary,
      fontSize: "32px",
      letterSpacing: "0.02em",
      lineHeight: "40px",
      fontWeight: 400
    },
    sTitle: {
      color: theme2.colors.secondary,
      fontSize: "22px",
      letterSpacing: "0.02em",
      lineHeight: "30px",
      fontWeight: 400
    },
    xxsTitle: {
      color: theme2.colors.secondary,
      fontSize: "18px",
      letterSpacing: "0.02em",
      lineHeight: "28px",
      fontWeight: 400
    },
    sectionTitle: {
      color: theme2.colors.secondary,
      fontSize: "14px",
      letterSpacing: "0.32em",
      lineHeight: "18px",
      fontWeight: 400,
      textTransform: "uppercase"
    },
    placeholderText: {
      color: theme2.colors.secondary_60,
      fontSize: "12px",
      letterSpacing: "0.02em",
      lineHeight: "16px",
      fontWeight: 400
    },
    link: {
      color: theme2.colors.primary,
      fontSize: "12px",
      letterSpacing: "0.02em",
      lineHeight: "16px",
      fontWeight: 600
    },
    disabledText: {
      color: theme2.colors.secondary_60,
      fontSize: "12px",
      letterSpacing: "0.02em",
      lineHeight: "16px",
      fontWeight: 600
    },
    selectedNavText: {
      color: theme2.colors.brand,
      fontSize: "12px",
      letterSpacing: "0.02em",
      lineHeight: "16px",
      fontWeight: 600
    },
    vizTextDisabled: {
      color: theme2.colors.secondary_60,
      fontSize: "10px",
      letterSpacing: "0.02em",
      lineHeight: "15px",
      fontWeight: 400
    },
    xsInlineLink: {
      color: theme2.colors.primary,
      fontSize: "10px",
      letterSpacing: "0.02em",
      lineHeight: "15px",
      fontWeight: 600,
      textDecoration: "underline"
    }
  },
  sizes: {
    xs: "32px",
    md: "48px",
    lg: "56px",
    xl: "64px",
    sm: "40px"
  },
  radii: {
    ...radii,
    base: "6px"
  },
  components: {
    HvLoading: {
      classes: {
        loadingBar: {
          borderRadius: 1
        }
      }
    },
    HvBadge: {
      classes: {
        badgePosition: {
          color: theme2.colors.base_light,
          backgroundColor: "#334155"
        }
      }
    },
    HvBaseCheckBox: {
      classes: {
        root: {
          "& svg": {
            width: 16,
            height: 16,
            borderRadius: "3px",
            border: `1px solid ${theme2.colors.pp.textSubtle}`
          },
          "&:hover": {
            backgroundColor: theme2.colors.pp.bgHover
          }
        },
        checked: {
          "& svg": {
            border: `1px solid ${theme2.colors.primary}`,
            backgroundColor: theme2.colors.primary,
            color: theme2.colors.atmo1
          },
          "&.HvBaseCheckBox-disabled": {
            "& svg": {
              color: theme2.colors.pp.textDisabled
            }
          }
        },
        disabled: {
          "&.HvBaseCheckBox-root": {
            "& svg": {
              border: `1px solid ${theme2.colors.pp.textDisabled}`,
              backgroundColor: theme2.colors.pp.bgDisabled
            }
          }
        },
        indeterminate: {
          "& svg": {
            backgroundColor: theme2.colors.pp.bgSurface,
            border: `1px solid ${theme2.colors.pp.textSubtle}`,
            color: theme2.colors.pp.textSubtle
          },
          "&.HvBaseCheckBox-disabled": {
            "& svg": {
              color: theme2.colors.pp.textDisabled
            }
          }
        }
      }
    },
    HvBaseRadio: {
      classes: {
        root: {
          "& svg": {
            backgroundColor: theme2.colors.pp.bgSurface,
            borderColor: theme2.colors.pp.textSubtle
          },
          "&:hover": {
            backgroundColor: theme2.colors.pp.bgHover
          }
        },
        checked: {
          "& svg": {
            borderColor: theme2.colors.primary,
            backgroundColor: theme2.colors.primary
          },
          "&.HvBaseRadio-disabled": {
            "& svg": {
              borderColor: theme2.colors.pp.textDisabled,
              backgroundColor: theme2.colors.pp.textDisabled,
              color: theme2.colors.pp.bgDisabled
            }
          }
        },
        disabled: {
          "& svg": {
            border: `1px solid ${theme2.colors.pp.textDisabled}`,
            backgroundColor: theme2.colors.pp.bgDisabled
          }
        }
      }
    },
    HvDotPagination: {
      classes: {
        radio: {
          width: 16,
          minWidth: 16
        }
      }
    },
    HvBaseSwitch: {
      classes: {
        root: {
          "&:hover": {
            backgroundColor: theme2.colors.pp.bgHover
          },
          "& .HvBaseSwitch-switchBase": {
            "& .HvBaseSwitch-thumb": {
              backgroundColor: theme2.colors.pp.bgSurface,
              borderColor: theme2.colors.pp.bgSurface,
              boxShadow: `0px 1px 1px 0px color-mix(in srgb, ${slate[700]} 16%, transparent)`
            },
            "+.HvBaseSwitch-track": {
              height: 14,
              backgroundColor: theme2.colors.pp.textDimmed,
              borderColor: theme2.colors.pp.textSubtle
            },
            "&.HvBaseSwitch-checked": {
              "& .HvBaseSwitch-thumb": {
                border: `1px solid ${theme2.colors.pp.bgSurface}`
              },
              "+.HvBaseSwitch-track": {
                backgroundColor: theme2.colors.pp.primary,
                borderColor: theme2.colors.pp.primaryStrong
              }
            },
            "&.HvBaseSwitch-disabled": {
              "& .HvBaseSwitch-thumb": {
                backgroundColor: theme2.colors.pp.borderDisabled,
                borderColor: theme2.colors.pp.borderDisabled
              },
              "+.HvBaseSwitch-track": {
                borderColor: theme2.colors.pp.borderDisabled,
                backgroundColor: theme2.colors.pp.bgDisabled
              }
            }
          }
        },
        thumb: {
          height: 10,
          width: 10
        }
      }
    },
    HvSelect: {
      classes: {
        root: {
          "&& .HvButton-secondarySubtle": {
            borderColor: inputColors.border,
            backgroundColor: inputColors.bg
          },
          "&& .HvDropdownButton-openUp": {
            borderRadius: `0 0 ${theme2.radii.base} ${theme2.radii.base}`
          },
          "&& .HvDropdownButton-openDown": {
            borderRadius: `${theme2.radii.base} ${theme2.radii.base} 0 0`
          }
        },
        select: {
          borderRadius: theme2.radii.base
        },
        panel: {
          borderColor: inputColors.border
        }
      }
    },
    HvSuggestions: {
      classes: {
        list: {
          borderColor: inputColors.border
        }
      }
    },
    HvTag: {
      classes: {
        root: {
          borderRadius: theme2.radii.full,
          padding: theme2.spacing("2px", 0)
        },
        label: {
          paddingLeft: 8,
          paddingRight: 8
        },
        icon: {
          marginLeft: theme2.space.xs
        },
        deleteIcon: {
          borderRadius: "inherit",
          paddingRight: 4
        },
        selected: {}
      }
    },
    HvInlineEditor: {
      classes: {
        button: {
          borderRadius: 2,
          "&:focus": {
            borderColor: theme2.colors.secondary
          }
        },
        inputRoot: {
          borderRadius: 2
        }
      }
    },
    HvButton: {
      classes: {
        root: {
          "--radius": theme2.radii.full,
          ":where(:not(.HvButton-disabled,.HvButton-contained))": {
            "&[data-color=positive]": { color: theme2.colors.pp.success },
            "&[data-color=warning]": { color: theme2.colors.pp.warning },
            "&[data-color=negative]": { color: theme2.colors.pp.error },
            ":hover": { backgroundColor: theme2.colors.pp.primaryDimmed },
            ":active": { backgroundColor: theme2.colors.pp.primarySubtle }
          }
        },
        contained: {
          ":where(:not(.HvButton-disabled))": {
            color: "#FFFFFF",
            "&[data-color=primary]": {
              backgroundColor: blue[600],
              ":hover": { backgroundColor: blue[700] },
              ":active": { backgroundColor: blue[800] }
            },
            "&[data-color=positive]": {
              ":hover": { backgroundColor: theme2.colors.pp.successAction },
              ":active": { backgroundColor: theme2.colors.pp.successStrong }
            },
            "&[data-color=warning]": {
              ":hover": { backgroundColor: theme2.colors.pp.warningAction },
              ":active": { backgroundColor: theme2.colors.pp.warningStrong }
            },
            "&[data-color=negative]": {
              ":hover": { backgroundColor: theme2.colors.pp.errorAction },
              ":active": { backgroundColor: theme2.colors.pp.errorStrong }
            }
          }
        },
        subtle: {
          borderColor: "color-mix(in srgb, currentcolor, transparent 60%)",
          ":where(:not(.HvButton-disabled))": {
            "&[data-color=primary]": {
              borderColor: buttonColors.primary.subtleBorder,
              backgroundColor: buttonColors.primary.subtleBg
            },
            "&[data-color=secondary]": {
              borderColor: buttonColors.secondary.subtleBorder,
              backgroundColor: buttonColors.secondary.subtleBg
            },
            ":hover": {
              backgroundColor: theme2.colors.pp.primaryDimmed
            },
            ":active": {
              borderColor: "transparent",
              backgroundColor: theme2.colors.pp.primarySubtle
            },
            "&[data-color=positive]": {
              borderColor: buttonColors.success.subtleBorder,
              backgroundColor: theme2.colors.pp.successDimmed,
              ":hover": { backgroundColor: buttonColors.success.subtleBg },
              ":active": { backgroundColor: buttonColors.success.subtleBorder }
            },
            "&[data-color=warning]": {
              borderColor: buttonColors.warning.subtleBorder,
              backgroundColor: theme2.colors.pp.warningDimmed,
              ":hover": { backgroundColor: buttonColors.warning.subtleBg },
              ":active": { backgroundColor: buttonColors.warning.subtleBorder }
            },
            "&[data-color=negative]": {
              borderColor: buttonColors.error.subtleBorder,
              backgroundColor: theme2.colors.pp.errorDimmed,
              ":hover": { backgroundColor: buttonColors.error.subtleBg },
              ":active": { backgroundColor: buttonColors.error.subtleBorder }
            }
          }
        },
        ghost: {
          ":where(:not(.HvButton-disabled))": {
            "&[data-color=positive]": {
              ":hover": { backgroundColor: theme2.colors.pp.successDimmed },
              ":active": { backgroundColor: buttonColors.success.subtleBg }
            },
            "&[data-color=warning]": {
              ":hover": { backgroundColor: theme2.colors.pp.warningDimmed },
              ":active": { backgroundColor: buttonColors.warning.subtleBg }
            },
            "&[data-color=negative]": {
              ":hover": { backgroundColor: theme2.colors.pp.errorDimmed },
              ":active": { backgroundColor: buttonColors.error.subtleBg }
            }
          }
        },
        semantic: {},
        disabled: {
          color: theme2.colors.pp.textDisabled,
          ":not(.HvButton-ghost)": {
            borderColor: "transparent",
            backgroundColor: theme2.colors.pp.bgDisabled,
            "&:hover, &:active": {
              backgroundColor: theme2.colors.pp.bgDisabled
            }
          }
        }
      }
    },
    HvMultiButton: {
      classes: {
        multiple: {
          borderRadius: theme2.radii.full,
          borderColor: buttonColors.secondary.subtleBorder,
          "& .HvMultiButton-button": {
            borderColor: "inherit",
            ...theme2.typography.body,
            "&.HvMultiButton-firstButton": {
              borderRadius: `${theme2.radii.full} 0 0 ${theme2.radii.full}`
            },
            "&.HvMultiButton-lastButton": {
              borderRadius: `0 ${theme2.radii.full} ${theme2.radii.full} 0`
            },
            "&.HvMultiButton-selected": {
              borderColor: theme2.colors.primary,
              color: theme2.colors.primary,
              backgroundColor: theme2.colors.pp.primaryDimmed
            },
            "&:not(.HvMultiButton-firstButton, .HvMultiButton-lastButton)": {
              borderRadius: 0
            }
          }
        },
        vertical: {
          borderColor: buttonColors.secondary.subtleBorder,
          "& .HvMultiButton-button": {
            borderColor: "inherit",
            "&.HvMultiButton-firstButton": {
              borderRadius: "16px 16px 0 0"
            },
            "&.HvMultiButton-lastButton": {
              borderRadius: "0 0 16px 16px"
            },
            "&.HvMultiButton-selected": {
              borderColor: theme2.colors.primary,
              color: theme2.colors.primary,
              backgroundColor: theme2.colors.pp.primaryDimmed
            }
          }
        },
        splitGroup: {},
        splitGroupDisabled: {}
      }
    },
    HvDropdownButton: {
      classes: {
        openUp: {
          borderRadius: "0px 0px calc(var(--HvButton-height) / 2) calc(var(--HvButton-height) / 2)"
        },
        openDown: {
          borderRadius: "calc(var(--HvButton-height) / 2) calc(var(--HvButton-height) / 2) 0px 0px"
        },
        disabled: {
          backgroundColor: theme2.colors.pp.bgDisabled,
          borderColor: theme2.colors.pp.bgDisabled,
          "&.HvButton-subtle": {
            backgroundColor: theme2.colors.pp.bgDisabled,
            borderColor: theme2.colors.pp.bgDisabled,
            "&:hover": {
              backgroundColor: theme2.colors.pp.bgDisabled
            }
          },
          "&.HvButton-ghost": {
            backgroundColor: theme2.colors.pp.bgDisabled,
            borderColor: theme2.colors.pp.bgDisabled,
            "&:hover": {
              backgroundColor: theme2.colors.pp.bgDisabled
            }
          }
        }
      }
    },
    HvHeader: {
      classes: {
        root: {
          borderBottom: `1px solid ${theme2.colors.atmo3}`,
          boxShadow: "none"
        }
      }
    },
    HvHeaderBrand: {
      classes: {
        separator: {
          backgroundColor: theme2.colors.atmo4,
          margin: theme2.spacing(0, "md"),
          height: 32
        }
      }
    },
    HvHeaderMenuBarBar: {
      classes: {
        active: {
          boxShadow: "none",
          borderBottom: `1px solid ${theme2.colors.atmo3}`
        },
        list: {
          "& li:hover > .HvHeader-MenuBar-hidden": {
            boxShadow: "none",
            borderBottom: `1px solid ${theme2.colors.atmo3}`
          },
          "& li:focus-within > .HvHeader-MenuBar-hidden": {
            boxShadow: "none",
            borderBottom: `1px solid ${theme2.colors.atmo3}`
          }
        }
      }
    },
    HvVerticalNavigation: {
      classes: {
        root: {
          color: theme2.colors.base_light,
          backgroundColor: slate[900],
          borderRight: `1px solid ${slate[500]}`,
          "& > :not(nav:first-of-type)": {
            borderTop: `1px solid ${slate[500]}`
          },
          "& > :only-child": {
            padding: theme2.space.sm,
            "& .HvVerticalNavigationSlider-listContainer": { padding: 0 }
          }
        },
        slider: {
          "& > div:first-of-type": {
            borderBottom: `1px solid ${slate[500]}`
          }
        }
      }
    },
    HvVerticalNavigationAction: {
      classes: {
        action: {
          borderRadius: "8px",
          "&:hover, &:focus": {
            backgroundColor: slate[700]
          }
        }
      }
    },
    HvVerticalNavigationSlider: {
      classes: {
        root: {
          minHeight: "32px",
          borderLeft: "unset",
          borderRadius: "8px",
          "&.HvIsFocused": {
            backgroundColor: slate[700]
          },
          "&.HvListItem-interactive:not(.HvListItem-disabled):not(.HvListItem-selected):hover": {
            backgroundColor: slate[700]
          }
        },
        listItemDisabled: {
          color: neutral[500],
          backgroundColor: neutral[800],
          "& .HvListItem-startAdornment": { backgroundColor: "transparent" },
          "& .HvListItem-endAdornment": { backgroundColor: "transparent" }
        },
        listItemSelected: {
          background: blue[950],
          borderLeft: "unset"
        },
        listItemFocus: {
          background: slate[700]
        },
        listContainer: {
          padding: theme2.space.sm
        }
      }
    },
    HvVerticalNavigationTreeViewItem: {
      classes: {
        content: {
          borderLeft: "unset",
          borderRadius: "8px",
          ".HvVerticalNavigationTreeViewItem-selected>&": {
            background: blue[950],
            borderLeft: "unset"
          },
          ":not(.HvVerticalNavigationTreeViewItem-disabled>&):not(.HvVerticalNavigationTreeViewItem-selected>&)": {
            "&:hover, &:focus-visible, &.focus-visible": {
              background: slate[700]
            }
          },
          ".HvVerticalNavigationTreeViewItem-focused>&": {
            background: slate[700]
          }
        },
        disabled: {
          "& .HvVerticalNavigationTreeViewItem-label": {
            color: neutral[500]
          },
          "& .HvVerticalNavigationTreeViewItem-content": {
            background: neutral[800]
          }
        },
        icon: {
          "& .HvAvatar-root": {
            borderRadius: "8px"
          }
        }
      }
    },
    HvCard: {
      classes: {
        root: {
          outline: `1px solid ${theme2.colors.pp.dividerSubtle}`,
          overflow: "hidden",
          height: "fit-content",
          borderRadius: theme2.space.sm,
          "& > :last-child:not(.HvCardMedia-root)": {
            paddingBottom: theme2.space.sm
          },
          "& .HvActionBar-root": {
            padding: theme2.spacing("xs", "sm"),
            borderTop: "none"
          }
        },
        selectable: {
          ":hover": {
            outline: `1px solid ${theme2.colors.primary_20}`,
            backgroundColor: theme2.colors.pp.primaryDimmed
          }
        },
        semanticContainer: {
          display: "none"
        },
        selected: {
          outline: `1px solid ${theme2.colors.pp.primaryAction}`
        }
      }
    },
    HvCardHeader: {
      classes: {
        root: {
          flexDirection: "row-reverse",
          padding: `${theme2.space.xs} ${theme2.space.sm}`
        },
        action: {
          paddingLeft: 0
        }
      }
    },
    HvCardContent: {
      classes: {
        content: {
          padding: `${theme2.space.xs} ${theme2.space.sm}`,
          "&:last-child": {
            paddingBottom: theme2.space.xs
          }
        }
      }
    },
    HvFooter: {
      name: "Pentaho+"
    },
    HvTabs: {
      classes: {
        floating: {
          "& .HvTab-root": {
            marginTop: 0,
            zIndex: 1,
            "&:is(.HvTab-selected)": {
              borderColor: "transparent",
              backgroundColor: "transparent"
            },
            "&:hover": {
              borderRadius: theme2.radii.full
            },
            "::after": {
              display: "none"
            }
          },
          "& .HvTabs-indicator": {
            height: "100%",
            backgroundColor: theme2.colors.pp.bgSurface,
            border: `1px solid ${theme2.colors.primary}`,
            borderRadius: theme2.radii.full
          },
          "& .HvTabs-flexContainer": {
            display: "inline-flex",
            backgroundColor: theme2.colors.pp.bgActive,
            borderRadius: theme2.radii.full,
            marginLeft: 0
          }
        }
      }
    },
    HvBaseInput: {
      classes: {
        root: {
          borderColor: inputColors.border,
          backgroundColor: inputColors.bg
        }
      }
    },
    HvBaseDropdown: {
      classes: {
        header: {
          borderColor: inputColors.border,
          backgroundColor: inputColors.bg
        },
        headerOpen: {
          borderColor: inputColors.border,
          "&:hover": {
            borderColor: inputColors.border
          }
        },
        panel: {
          borderColor: inputColors.border
        }
      }
    },
    HvDropDownMenu: {
      classes: {
        iconSelected: {
          "&[data-color=secondary]": {
            borderColor: inputColors.border
          }
        }
      }
    }
  },
  header: {
    height: "64px",
    secondLevelHeight: "56px"
  },
  bulkActions: {
    actionButtonVariant: "primaryGhost"
  },
  table: {
    rowStripedBackgroundColorEven: theme2.colors.atmo1,
    // TODO - remove in v6
    rowStripedBackgroundColorOdd: "transparent",
    // TODO - remove in v6
    rowExpandBackgroundColor: theme2.colors.atmo2,
    rowSortedColor: theme2.colors.primary,
    // TODO - remove in v6
    rowSortedColorAlpha: "0.1"
    // TODO - remove in v6
  },
  stepNavigation: {
    separatorMargin: "4px",
    defaultSeparatorHeight: 1,
    simpleSeparatorHeight: 1
  },
  filterGroup: {
    applyButtonVariant: "primary",
    cancelButtonVariant: "secondarySubtle"
  },
  scrollTo: {
    dotSelectedSize: 6,
    backgroundColorOpacity: 0.9
    // TODO - remove in v6
  },
  colorPicker: {
    hueDirection: "horizontal"
  },
  snackbar: {
    actionButtonVariant: "secondarySubtle"
  }
}));

// node_modules/@hitachivantara/uikit-styles/dist/esm/CssBaseline.mjs
var baseline = {
  /* Clears input's clear button from Chrome */
  'input[type="search"]::-webkit-search-decoration': { display: "none" },
  'input[type="search"]::-webkit-search-cancel-button': { display: "none" },
  'input[type="search"]::-webkit-search-results-button': { display: "none" },
  'input[type="search"]::-webkit-search-results-decoration': {
    display: "none"
  },
  "*, ::before, ::after": {
    boxSizing: "border-box",
    borderWidth: "0",
    borderStyle: "solid"
  },
  /* Remove default margin. */
  "*": {
    margin: 0
  },
  /* Headings are unstyled. */
  ":where(h1, h2, h3, h4, h5, h6)": {
    fontSize: "inherit",
    fontWeight: "inherit"
  },
  /* Avoid text overflows. */
  "p, h1, h2, h3, h4, h5, h6": {
    overflowWrap: "break-word"
  },
  /* Improve media defaults. */
  "img, picture, video, canvas, svg": {
    display: "block",
    maxWidth: "100%"
  },
  /* Remove built-in form typography styles. */
  "button, input, textarea, select, optgroup": {
    fontFamily: "inherit",
    fontSize: "100%"
  },
  select: {
    width: "100%",
    height: "100%",
    cursor: "pointer",
    background: "transparent"
  },
  /* Buttons have a default outline. */
  "button:focus-visible": {
    outline: "#52A8EC solid 0px",
    outlineOffset: "-1px"
  },
  /* fieldset have no margin and padding. */
  fieldset: {
    margin: 0,
    padding: 0
  },
  /* List have no margin and padding. */
  ":where(ol, ul)": {
    margin: 0,
    padding: 0
  },
  /* Anchor are unstyled. */
  a: {
    backgroundColor: "transparent",
    color: "inherit",
    textDecoration: "inherit"
  },
  ".uikit-root-element": {
    backgroundColor: theme.colors.backgroundColor,
    accentColor: theme.colors.secondary,
    color: theme.colors.secondary,
    fontSize: theme.typography.body.fontSize,
    fontWeight: theme.typography.body.fontWeight,
    lineHeight: theme.typography.body.lineHeight,
    letterSpacing: theme.typography.body.letterSpacing,
    fontFamily: theme.fontFamily.body
  }
};
var CssScopedBaseline = {
  height: "100%",
  fontFamily: "inherit",
  lineHeight: "inherit",
  WebkitFontSmoothing: "antialiased",
  MozOsxFontSmoothing: "grayscale",
  ...baseline
};
var CssBaseline = {
  /* Allow percentage-based heights in the application. */
  "html, body": {
    height: "100%"
  },
  html: {
    fontFamily: "'Open Sans','Inter', Arial, Helvetica, sans-serif"
  },
  body: {
    fontFamily: "inherit",
    lineHeight: "inherit",
    WebkitFontSmoothing: "antialiased",
    MozOsxFontSmoothing: "grayscale"
  },
  ...baseline
};

// node_modules/@hitachivantara/uikit-styles/dist/esm/index.mjs
var themes = { ds3, ds5, pentahoPlus };

export {
  breakpoints,
  colors,
  radii,
  space,
  sizes,
  fontFamily,
  fontSizes,
  fontWeights,
  lineHeights,
  zIndices,
  spacingUtil,
  spacingUtilOld,
  hasMultipleArgs,
  mapCSSVars,
  mergeTheme,
  parseTheme,
  getThemesList,
  getThemesVars,
  getColor,
  theme,
  makeTheme,
  ds3,
  ds5,
  pentahoPlus,
  CssScopedBaseline,
  CssBaseline,
  themes
};
//# sourceMappingURL=chunk-IQ56NPFT.js.map
